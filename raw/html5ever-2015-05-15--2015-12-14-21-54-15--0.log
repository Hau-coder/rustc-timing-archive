commit 8f031bf96205ed4cb990c2c7aded84d5ac079254
Merge: 44d9601 ec8ea22
Author: bors <bors@rust-lang.org>
Date:   Tue Dec 15 01:18:01 2015 +0000

    Auto merge of #30105 - faineance:master, r=nrc
    
    Issue: #30058
    Updated for:
     - Stmt
     - BinOp_
     - UnOp
     - UintTy, IntTy and FloatTy
     - Lit
     - Generics
    
    A possible inconsistancy?
    The `Stmt` methods are on the spanned varient:
    ```rust
    pub type Stmt = Spanned<Stmt_>;
    
    impl Stmt {
        pub fn id(s: &Stmt) -> Option<NodeId> {
            match s.node {
              StmtDecl(_, id) => Some(id),
              StmtExpr(_, id) => Some(id),
              StmtSemi(_, id) => Some(id),
              StmtMac(..) => None,
          }
      }
    }
    ```
    Whilst the methods for BinOp are on the non spanned version.
    ````rust
    impl BinOp_ {
        pub fn to_string(op: BinOp_) -> &'static str { ... }
        pub fn lazy(b: BinOp_) -> bool { ... }
    
        pub fn is_shift(b: BinOp_) -> bool { ... }
        pub fn is_comparison(b: BinOp_) -> bool { ... }
        /// Returns `true` if the binary operator takes its arguments by value
        pub fn is_by_value(b: BinOp_) -> bool { ... }
    
    }
    pub type BinOp = Spanned<BinOp_>;
    ````
    r? @Manishearth
rustc: ./html5ever-2015-05-15
cargo rustc -- -Ztime-passes
    Updating registry `https://github.com/rust-lang/crates.io-index`
    Updating git repository `https://github.com/reem/rust-mac`
    Updating git repository `https://github.com/servo/string-cache`
   Compiling libc v0.2.2
   Compiling mac v0.0.2 (https://github.com/reem/rust-mac#6316d3f4)
   Compiling lazy_static v0.1.15
   Compiling void v0.0.5
   Compiling winapi-build v0.1.1
   Compiling phf_shared v0.7.9
   Compiling rustc-serialize v0.3.16
   Compiling winapi v0.2.5
   Compiling unreachable v0.0.2
   Compiling debug_unreachable v0.0.6
   Compiling phf v0.7.9
   Compiling advapi32-sys v0.1.2
   Compiling kernel32-sys v0.2.1
   Compiling log v0.3.4
   Compiling rand v0.3.12
   Compiling time v0.1.34
   Compiling phf_generator v0.7.9
   Compiling phf_macros v0.7.9
   Compiling string_cache_shared v0.1.12
   Compiling string_cache v0.1.17
   Compiling html5ever_macros v0.0.0 (file:///root/benchmarks/html5ever-2015-05-15)
   Compiling num v0.1.28
   Compiling serde v0.6.6
   Compiling html5ever v0.0.0 (file:///root/benchmarks/html5ever-2015-05-15)
time: 0.019; rss: 41MB	parsing
time: 0.006; rss: 41MB	configuration 1
time: 0.000; rss: 41MB	recursion limit
time: 0.000; rss: 41MB	gated macro checking
time: 0.000; rss: 41MB	crate injection
time: 0.021; rss: 56MB	macro loading
time: 0.001; rss: 56MB	plugin loading
time: 0.000; rss: 56MB	plugin registration
time: 2.351; rss: 77MB	expansion
time: 0.004; rss: 77MB	complete gated feature checking 1
time: 0.034; rss: 76MB	configuration 2
time: 0.000; rss: 76MB	gated configuration checking
time: 0.016; rss: 76MB	maybe building test harness
time: 0.015; rss: 76MB	prelude injection
time: 0.002; rss: 76MB	checking that all macro invocations are gone
time: 0.000; rss: 76MB	checking for inline asm in case the target doesn't support it
time: 0.003; rss: 76MB	complete gated feature checking 2
time: 0.016; rss: 76MB	assigning node ids
time: 0.023; rss: 88MB	lowering ast -> hir
time: 0.006; rss: 93MB	indexing hir
time: 0.000; rss: 93MB	attribute checking
time: 0.010; rss: 93MB	early lint checks
time: 0.002; rss: 93MB	external crate/lib resolution
time: 0.002; rss: 93MB	language item collection
time: 0.023; rss: 110MB	resolution
time: 0.003; rss: 110MB	lifetime resolution
time: 0.000; rss: 110MB	looking for entry point
time: 0.000; rss: 110MB	looking for plugin registrar
time: 0.016; rss: 115MB	region resolution
time: 0.002; rss: 115MB	loop checking
time: 0.002; rss: 115MB	static item recursion checking
time: 0.007; rss: 118MB	type collecting
time: 0.000; rss: 118MB	variance inference
time: 0.032; rss: 140MB	coherence checking
time: 0.008; rss: 140MB	wf checking (old)
time: 0.340; rss: 174MB	item-types checking
time: 0.603; rss: 185MB	item-bodies checking
time: 0.000; rss: 185MB	drop-impl checking
time: 0.028; rss: 185MB	wf checking (new)
time: 0.080; rss: 187MB	const checking
time: 0.013; rss: 187MB	privacy checking
time: 0.001; rss: 187MB	stability index
time: 0.004; rss: 187MB	intrinsic checking
time: 0.003; rss: 187MB	effect checking
time: 0.028; rss: 187MB	match checking
time: 0.063; rss: 188MB	MIR dump
time: 0.012; rss: 192MB	liveness checking
time: 0.100; rss: 194MB	borrow checking
time: 0.035; rss: 194MB	rvalue checking
time: 0.003; rss: 194MB	reachability checking
time: 0.008; rss: 194MB	death checking
time: 0.008; rss: 194MB	stability checking
time: 0.000; rss: 194MB	unused lib feature checking
time: 0.072; rss: 194MB	lint checking
time: 0.000; rss: 194MB	resolving dependency formats
time: 0.006; rss: 194MB	erasing regions from MIR
time: 0.543; rss: 244MB	translation
  time: 0.018; rss: 130MB	llvm function passes [0]
  time: 0.006; rss: 131MB	llvm module passes [0]
  time: 0.336; rss: 167MB	codegen passes [0]
  time: 0.002; rss: 142MB	codegen passes [0]
time: 0.418; rss: 141MB	LLVM passes
time: 0.060; rss: 141MB	linking
done
