commit e7eb7d58f9d10e7c3bc9408595d43d778c304f9e
Merge: a9d5285 dec0ea0
Author: bors <bors@rust-lang.org>
Date:   Tue Oct 20 11:55:17 2015 +0000

    Auto merge of #27723 - mystor:vecdeque_drain_range, r=bluss
    
    This is a WIP PR for my implementation of drain over the VecDeque data structure supporting ranges. It brings the VecDeque drain implementation in line with Vec's.
    
    Tests haven't been written for the new function yet.
rustc: ./rust-encoding.0.2.32
cargo rustc -- -Ztime-passes
    Updating registry `https://github.com/rust-lang/crates.io-index`
   Compiling encoding_index_tests v0.1.4 (file:///root/benchmarks/rust-encoding.0.2.32)
   Compiling encoding-index-simpchinese v1.20141219.5 (file:///root/benchmarks/rust-encoding.0.2.32)
   Compiling encoding-index-japanese v1.20141219.5 (file:///root/benchmarks/rust-encoding.0.2.32)
   Compiling encoding-index-tradchinese v1.20141219.5 (file:///root/benchmarks/rust-encoding.0.2.32)
   Compiling encoding-index-singlebyte v1.20141219.5 (file:///root/benchmarks/rust-encoding.0.2.32)
   Compiling encoding-index-korean v1.20141219.5 (file:///root/benchmarks/rust-encoding.0.2.32)
   Compiling encoding v0.2.32 (file:///root/benchmarks/rust-encoding.0.2.32)
time: 0.021; rss: 35MB	parsing
time: 0.006; rss: 39MB	configuration 1
time: 0.000; rss: 39MB	recursion limit
time: 0.000; rss: 39MB	gated macro checking
time: 0.000; rss: 39MB	crate injection
time: 0.003; rss: 42MB	macro loading
time: 0.000; rss: 42MB	plugin loading
time: 0.000; rss: 42MB	plugin registration
time: 0.041; rss: 43MB	expansion
time: 0.001; rss: 43MB	complete gated feature checking 1
time: 0.007; rss: 43MB	configuration 2
time: 0.000; rss: 43MB	gated configuration checking
time: 0.003; rss: 43MB	maybe building test harness
time: 0.003; rss: 43MB	prelude injection
time: 0.000; rss: 43MB	checking that all macro invocations are gone
time: 0.000; rss: 43MB	checking for inline asm in case the target doesn't support it
time: 0.000; rss: 43MB	complete gated feature checking 2
time: 0.003; rss: 43MB	assigning node ids
time: 0.003; rss: 47MB	lowering ast -> hir
time: 0.002; rss: 49MB	indexing hir
time: 0.000; rss: 49MB	attribute checking
time: 0.002; rss: 49MB	early lint checks
time: 0.001; rss: 49MB	external crate/lib resolution
time: 0.000; rss: 50MB	language item collection
time: 0.010; rss: 56MB	resolution
time: 0.000; rss: 56MB	lifetime resolution
time: 0.000; rss: 56MB	looking for entry point
time: 0.000; rss: 56MB	looking for plugin registrar
time: 0.002; rss: 56MB	region resolution
time: 0.000; rss: 56MB	loop checking
time: 0.000; rss: 56MB	static item recursion checking
time: 0.005; rss: 59MB	type collecting
time: 0.000; rss: 59MB	variance inference
time: 0.020; rss: 75MB	coherence checking
time: 0.006; rss: 75MB	wf checking (old)
time: 0.012; rss: 75MB	item-types checking
time: 0.199; rss: 88MB	item-bodies checking
time: 0.000; rss: 88MB	drop-impl checking
time: 0.017; rss: 88MB	wf checking (new)
time: 0.012; rss: 88MB	const checking
time: 0.002; rss: 88MB	privacy checking
time: 0.000; rss: 88MB	stability index
time: 0.001; rss: 88MB	intrinsic checking
time: 0.000; rss: 88MB	effect checking
time: 0.006; rss: 88MB	match checking
time: 0.037; rss: 103MB	MIR dump
time: 0.003; rss: 103MB	liveness checking
time: 0.024; rss: 103MB	borrow checking
time: 0.008; rss: 103MB	rvalue checking
time: 0.000; rss: 103MB	reachability checking
time: 0.002; rss: 103MB	death checking
time: 0.001; rss: 103MB	stability checking
time: 0.000; rss: 103MB	unused lib feature checking
time: 0.016; rss: 104MB	lint checking
time: 0.000; rss: 104MB	resolving dependency formats
time: 0.341; rss: 154MB	translation
  time: 0.027; rss: 105MB	llvm function passes
  time: 0.062; rss: 107MB	llvm module passes
  time: 0.577; rss: 129MB	codegen passes
  time: 0.000; rss: 127MB	codegen passes
time: 0.735; rss: 127MB	LLVM passes
time: 0.054; rss: 125MB	linking
done
