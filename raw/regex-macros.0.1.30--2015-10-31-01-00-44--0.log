commit fa7a3c210d7bd7c16c1f1201afaae8df76804687
Merge: ee88e04 744df28
Author: bors <bors@rust-lang.org>
Date:   Sat Oct 31 04:04:45 2015 +0000

    Auto merge of #29484 - steveklabnik:gh29330, r=brson
    
    These two commits do a few things:
    
    1. reformat to 80 cols
    2. use the reference-style links where appropriate for improved in-source readability
    3. adds a few links, tweaks a couple of words, `3` -> `three`, stuff like that
    
    While the diff is big due to these edits, there's no significant content change.
    
    r? @brson
rustc: ./regex-macros.0.1.30
cd regex_macros && cargo rustc -- -Ztime-passes
    Updating registry `https://github.com/rust-lang/crates.io-index`
   Compiling regex v0.1.30 (file:///root/benchmarks/regex-macros.0.1.30/regex_macros)
   Compiling regex_macros v0.1.17 (file:///root/benchmarks/regex-macros.0.1.30/regex_macros)
time: 0.002; rss: 29MB	parsing
time: 0.001; rss: 33MB	configuration 1
time: 0.000; rss: 33MB	recursion limit
time: 0.000; rss: 33MB	gated macro checking
time: 0.000; rss: 33MB	crate injection
time: 0.002; rss: 36MB	macro loading
time: 0.000; rss: 36MB	plugin loading
time: 0.000; rss: 36MB	plugin registration
time: 0.026; rss: 44MB	expansion
time: 0.001; rss: 44MB	complete gated feature checking 1
time: 0.007; rss: 44MB	configuration 2
time: 0.000; rss: 44MB	gated configuration checking
time: 0.004; rss: 44MB	maybe building test harness
time: 0.004; rss: 44MB	prelude injection
time: 0.000; rss: 44MB	checking that all macro invocations are gone
time: 0.000; rss: 44MB	checking for inline asm in case the target doesn't support it
time: 0.001; rss: 44MB	complete gated feature checking 2
time: 0.004; rss: 44MB	assigning node ids
time: 0.003; rss: 48MB	lowering ast -> hir
time: 0.001; rss: 48MB	indexing hir
time: 0.000; rss: 48MB	attribute checking
time: 0.003; rss: 48MB	early lint checks
time: 0.047; rss: 86MB	external crate/lib resolution
time: 0.000; rss: 86MB	language item collection
time: 0.015; rss: 104MB	resolution
time: 0.000; rss: 104MB	lifetime resolution
time: 0.000; rss: 104MB	looking for entry point
time: 0.000; rss: 104MB	looking for plugin registrar
time: 0.002; rss: 108MB	region resolution
time: 0.000; rss: 108MB	loop checking
time: 0.000; rss: 108MB	static item recursion checking
time: 0.004; rss: 112MB	type collecting
time: 0.000; rss: 112MB	variance inference
time: 0.015; rss: 136MB	coherence checking
time: 0.000; rss: 136MB	wf checking (old)
time: 0.001; rss: 136MB	item-types checking
time: 1.055; rss: 167MB	item-bodies checking
time: 0.000; rss: 167MB	drop-impl checking
time: 0.006; rss: 167MB	wf checking (new)
time: 0.015; rss: 167MB	const checking
time: 0.003; rss: 167MB	privacy checking
time: 0.000; rss: 167MB	stability index
time: 0.001; rss: 167MB	intrinsic checking
time: 0.001; rss: 167MB	effect checking
time: 0.001; rss: 167MB	match checking
time: 0.024; rss: 178MB	MIR dump
time: 0.005; rss: 172MB	liveness checking
time: 0.039; rss: 171MB	borrow checking
time: 0.011; rss: 170MB	rvalue checking
time: 0.000; rss: 170MB	reachability checking
time: 0.002; rss: 170MB	death checking
time: 0.003; rss: 170MB	stability checking
time: 0.000; rss: 170MB	unused lib feature checking
time: 0.016; rss: 170MB	lint checking
time: 0.002; rss: 170MB	resolving dependency formats
time: 0.407; rss: 212MB	translation
  time: 0.034; rss: 166MB	llvm function passes [0]
  time: 0.012; rss: 167MB	llvm module passes [0]
  time: 0.737; rss: 187MB	codegen passes [0]
  time: 0.000; rss: 187MB	codegen passes [0]
time: 0.804; rss: 187MB	LLVM passes
  time: 0.002; rss: 187MB	altering regex-640d5d4018246dae.rlib
  time: 0.111; rss: 191MB	running linker
time: 0.113; rss: 191MB	linking
done
