commit 655b2ef45fb87925fcdd4ceb44eb36e0c62dad24
Merge: b3afb16 913fe6d
Author: bors <bors@rust-lang.org>
Date:   Sat Sep 19 12:35:23 2015 +0000

    Auto merge of #28495 - semarie:stdcpp-name, r=alexcrichton
    
    it makes rustc compatible with gcc installation that are using
    `--program-transform-name' configure flag (on OpenBSD for example).
    
    - detects at configure the name of stdc++ library on the system
    
    - use the detected name in llvm makefile (with enable-static-stdcpp),
      and pass it to mklldeps.py
    
    - generate mklldeps.rs using this detected name
    
    note that CFG_STDCPP_NAME is about stdc++ name, not about libc++. If
    using libc++, the default name will be `stdc++', but it won't be used
    when linking.
    
    r? @alexcrichton
    
    I added this support globally instead of just for OpenBSD as it isn't specially related to OpenBSD (except OpenBSD use it for gcc-4.9). And as I would had to change `llvm.mk', having just a default value in `configure' for others platforms won't be very useful.
rustc: ./helloworld
/root/rust/x86_64-unknown-linux-gnu/stage2/bin/rustc -Ztime-passes hello.rs
time: 0.000; rss: 30MB	parsing
time: 0.000; rss: 30MB	configuration 1
time: 0.000; rss: 30MB	recursion limit
time: 0.000; rss: 34MB	gated macro checking
time: 0.000; rss: 34MB	crate injection
time: 0.002; rss: 36MB	macro loading
time: 0.000; rss: 36MB	plugin loading
time: 0.000; rss: 36MB	plugin registration
time: 0.001; rss: 36MB	expansion
time: 0.000; rss: 36MB	complete gated feature checking 1
time: 0.000; rss: 36MB	configuration 2
time: 0.000; rss: 36MB	gated configuration checking
time: 0.000; rss: 36MB	maybe building test harness
time: 0.000; rss: 36MB	prelude injection
time: 0.000; rss: 36MB	checking that all macro invocations are gone
time: 0.000; rss: 36MB	checking for inline asm in case the target doesn't support it
time: 0.000; rss: 36MB	complete gated feature checking 2
time: 0.000; rss: 36MB	assigning node ids
time: 0.000; rss: 36MB	lowering ast -> hir
time: 0.000; rss: 36MB	indexing hir
time: 0.000; rss: 36MB	early lint checks
time: 0.001; rss: 36MB	external crate/lib resolution
time: 0.000; rss: 36MB	language item collection
time: 0.001; rss: 44MB	resolution
time: 0.000; rss: 44MB	lifetime resolution
time: 0.000; rss: 44MB	looking for entry point
time: 0.000; rss: 44MB	looking for plugin registrar
time: 0.000; rss: 44MB	region resolution
time: 0.000; rss: 44MB	loop checking
time: 0.000; rss: 44MB	static item recursion checking
time: 0.000; rss: 44MB	type collecting
time: 0.000; rss: 44MB	variance inference
time: 0.004; rss: 53MB	coherence checking
time: 0.000; rss: 53MB	wf checking (old)
time: 0.000; rss: 53MB	item-types checking
time: 0.000; rss: 53MB	item-bodies checking
time: 0.000; rss: 53MB	drop-impl checking
time: 0.000; rss: 53MB	wf checking (new)
time: 0.000; rss: 53MB	MIR dump
time: 0.000; rss: 53MB	const checking
time: 0.000; rss: 53MB	privacy checking
time: 0.000; rss: 53MB	stability index
time: 0.000; rss: 53MB	intrinsic checking
time: 0.000; rss: 53MB	effect checking
time: 0.000; rss: 53MB	match checking
time: 0.000; rss: 53MB	liveness checking
time: 0.000; rss: 53MB	borrow checking
time: 0.000; rss: 53MB	rvalue checking
time: 0.000; rss: 53MB	reachability checking
time: 0.000; rss: 53MB	death checking
time: 0.000; rss: 53MB	stability checking
time: 0.000; rss: 53MB	unused lib feature checking
time: 0.000; rss: 53MB	lint checking
time: 0.001; rss: 53MB	resolving dependency formats
time: 0.004; rss: 63MB	translation
  time: 0.000; rss: 65MB	llvm function passes
  time: 0.000; rss: 65MB	llvm module passes
  time: 0.001; rss: 67MB	codegen passes
  time: 0.000; rss: 67MB	codegen passes
time: 0.002; rss: 67MB	LLVM passes
  time: 0.084; rss: 73MB	running linker
time: 0.084; rss: 73MB	linking
done
