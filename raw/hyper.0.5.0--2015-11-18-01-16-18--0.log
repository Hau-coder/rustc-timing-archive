commit 8ed8679b2e85b349cf73cbd53d269dfcb58169fb
Merge: 50b969d 3335366
Author: bors <bors@rust-lang.org>
Date:   Wed Nov 18 04:00:43 2015 +0000

    Auto merge of #29897 - alexcrichton:process-wait-with-output, r=brson
    
    Previously this function used channels but this isn't necessary any more now
    that threads have return values. This also has the added bonus of appropriately
    waiting for the thread to exit to ensure that the function doesn't still have
    running threads once it returns.
rustc: ./hyper.0.5.0
cargo rustc -- -Ztime-passes
    Updating registry `https://github.com/rust-lang/crates.io-index`
   Compiling pkg-config v0.3.6
   Compiling httparse v0.1.6
   Compiling typeable v0.1.2
   Compiling winapi-build v0.1.1
   Compiling rustc-serialize v0.3.16
   Compiling lazy_static v0.1.15
   Compiling bitflags v0.3.3
   Compiling unicase v0.1.0
   Compiling gcc v0.3.19
   Compiling libc v0.2.2
   Compiling traitobject v0.0.1
   Compiling winapi v0.2.5
   Compiling matches v0.1.2
   Compiling libc v0.1.12
   Compiling kernel32-sys v0.2.1
   Compiling num_cpus v0.2.7
   Compiling log v0.3.3
   Compiling time v0.1.34
   Compiling mime v0.0.11
   Compiling openssl-sys v0.6.7
   Compiling openssl v0.6.7
   Compiling url v0.2.37
   Compiling cookie v0.1.21
   Compiling hyper v0.5.0 (file:///root/benchmarks/hyper.0.5.0)
time: 0.028; rss: 38MB	parsing
time: 0.009; rss: 42MB	configuration 1
time: 0.000; rss: 42MB	recursion limit
time: 0.000; rss: 42MB	gated macro checking
time: 0.000; rss: 42MB	crate injection
time: 0.004; rss: 46MB	macro loading
time: 0.000; rss: 46MB	plugin loading
time: 0.000; rss: 46MB	plugin registration
time: 0.176; rss: 56MB	expansion
time: 0.006; rss: 56MB	complete gated feature checking 1
time: 0.031; rss: 56MB	configuration 2
time: 0.000; rss: 56MB	gated configuration checking
time: 0.013; rss: 56MB	maybe building test harness
time: 0.010; rss: 56MB	prelude injection
time: 0.001; rss: 56MB	checking that all macro invocations are gone
time: 0.000; rss: 56MB	checking for inline asm in case the target doesn't support it
time: 0.002; rss: 56MB	complete gated feature checking 2
time: 0.010; rss: 56MB	assigning node ids
time: 0.007; rss: 60MB	lowering ast -> hir
time: 0.005; rss: 63MB	indexing hir
time: 0.000; rss: 63MB	attribute checking
time: 0.005; rss: 63MB	early lint checks
time: 0.003; rss: 63MB	external crate/lib resolution
time: 0.002; rss: 63MB	language item collection
time: 0.032; rss: 88MB	resolution
time: 0.001; rss: 88MB	lifetime resolution
time: 0.000; rss: 88MB	looking for entry point
time: 0.001; rss: 88MB	looking for plugin registrar
time: 0.006; rss: 88MB	region resolution
time: 0.001; rss: 88MB	loop checking
time: 0.001; rss: 88MB	static item recursion checking
time: 0.014; rss: 91MB	type collecting
time: 0.002; rss: 91MB	variance inference
time: 0.045; rss: 113MB	coherence checking
time: 0.027; rss: 113MB	wf checking (old)
time: 0.026; rss: 115MB	item-types checking
time: 0.527; rss: 132MB	item-bodies checking
time: 0.000; rss: 132MB	drop-impl checking
time: 0.087; rss: 132MB	wf checking (new)
time: 0.043; rss: 132MB	const checking
time: 0.009; rss: 132MB	privacy checking
time: 0.000; rss: 132MB	stability index
time: 0.004; rss: 132MB	intrinsic checking
time: 0.002; rss: 132MB	effect checking
time: 0.012; rss: 132MB	match checking
time: 0.054; rss: 144MB	MIR dump
time: 0.006; rss: 144MB	liveness checking
time: 0.071; rss: 144MB	borrow checking
time: 0.034; rss: 146MB	rvalue checking
time: 0.004; rss: 146MB	reachability checking
time: 0.007; rss: 146MB	death checking
time: 0.005; rss: 146MB	stability checking
time: 0.000; rss: 146MB	unused lib feature checking
time: 0.041; rss: 146MB	lint checking
time: 0.000; rss: 146MB	resolving dependency formats
time: 1.428; rss: 283MB	translation
  time: 0.099; rss: 176MB	llvm function passes [0]
  time: 0.052; rss: 177MB	llvm module passes [0]
  time: 1.684; rss: 221MB	codegen passes [0]
  time: 0.001; rss: 179MB	codegen passes [0]
time: 2.059; rss: 179MB	LLVM passes
time: 0.175; rss: 180MB	linking
done
