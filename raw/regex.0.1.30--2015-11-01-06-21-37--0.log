commit a5fbb3a25faeb08f50f571a6aa227f14a9d086c2
Merge: b252f4c 579420f
Author: bors <bors@rust-lang.org>
Date:   Sun Nov 1 07:03:09 2015 +0000

    Auto merge of #29316 - GBGamer:change-unchecked-div-generic, r=eddyb
    
    Similarly to the simd intrinsics. I believe this is a better solution than #29288, and I could implement it as well for overflowing_add/sub/mul. Also rename from udiv/sdiv to div, and same for rem.
rustc: ./regex.0.1.30
cargo rustc -- -Ztime-passes
    Updating registry `https://github.com/rust-lang/crates.io-index`
   Compiling regex v0.1.30 (file:///root/benchmarks/regex.0.1.30)
time: 0.048; rss: 45MB	parsing
time: 0.009; rss: 45MB	configuration 1
time: 0.000; rss: 45MB	recursion limit
time: 0.001; rss: 45MB	gated macro checking
time: 0.000; rss: 45MB	crate injection
time: 0.003; rss: 47MB	macro loading
time: 0.000; rss: 47MB	plugin loading
time: 0.000; rss: 47MB	plugin registration
time: 0.055; rss: 51MB	expansion
time: 0.001; rss: 51MB	complete gated feature checking 1
time: 0.010; rss: 51MB	configuration 2
time: 0.000; rss: 51MB	gated configuration checking
time: 0.005; rss: 51MB	maybe building test harness
time: 0.005; rss: 51MB	prelude injection
time: 0.000; rss: 51MB	checking that all macro invocations are gone
time: 0.000; rss: 51MB	checking for inline asm in case the target doesn't support it
time: 0.001; rss: 51MB	complete gated feature checking 2
time: 0.005; rss: 51MB	assigning node ids
time: 0.007; rss: 59MB	lowering ast -> hir
time: 0.002; rss: 61MB	indexing hir
time: 0.000; rss: 61MB	attribute checking
time: 0.004; rss: 61MB	early lint checks
time: 0.002; rss: 61MB	external crate/lib resolution
time: 0.001; rss: 61MB	language item collection
time: 0.010; rss: 70MB	resolution
time: 0.001; rss: 70MB	lifetime resolution
time: 0.000; rss: 70MB	looking for entry point
time: 0.001; rss: 70MB	looking for plugin registrar
time: 0.005; rss: 72MB	region resolution
time: 0.001; rss: 72MB	loop checking
time: 0.001; rss: 72MB	static item recursion checking
time: 0.004; rss: 76MB	type collecting
time: 0.001; rss: 76MB	variance inference
time: 0.023; rss: 92MB	coherence checking
time: 0.004; rss: 92MB	wf checking (old)
time: 0.088; rss: 96MB	item-types checking
time: 0.204; rss: 107MB	item-bodies checking
time: 0.000; rss: 107MB	drop-impl checking
time: 0.010; rss: 107MB	wf checking (new)
time: 0.028; rss: 112MB	const checking
time: 0.004; rss: 112MB	privacy checking
time: 0.000; rss: 112MB	stability index
time: 0.001; rss: 112MB	intrinsic checking
time: 0.001; rss: 112MB	effect checking
time: 0.003; rss: 112MB	match checking
time: 0.016; rss: 117MB	MIR dump
time: 0.003; rss: 117MB	liveness checking
time: 0.021; rss: 117MB	borrow checking
time: 0.010; rss: 117MB	rvalue checking
time: 0.000; rss: 117MB	reachability checking
time: 0.003; rss: 117MB	death checking
time: 0.002; rss: 117MB	stability checking
time: 0.000; rss: 117MB	unused lib feature checking
time: 0.022; rss: 117MB	lint checking
time: 0.000; rss: 117MB	resolving dependency formats
time: 0.644; rss: 181MB	translation
  time: 0.038; rss: 112MB	llvm function passes [0]
  time: 0.021; rss: 113MB	llvm module passes [0]
  time: 0.619; rss: 139MB	codegen passes [0]
  time: 0.001; rss: 126MB	codegen passes [0]
time: 0.758; rss: 126MB	LLVM passes
time: 0.067; rss: 125MB	linking
done
