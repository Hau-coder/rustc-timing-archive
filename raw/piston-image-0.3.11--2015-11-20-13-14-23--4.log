commit 6a6b97cf025b8a1fb92fc48a4dc06611d2970861
Merge: 6827661 c1ad5af
Author: bors <bors@rust-lang.org>
Date:   Fri Nov 20 18:13:10 2015 +0000

    Auto merge of #29822 - petrochenkov:pubexport, r=alexcrichton
    
    This patch implements the plan described in https://internals.rust-lang.org/t/privacy-and-its-interaction-with-docs-lints-and-stability/2880 with one deviation.
    
    It turns out, that rustdoc needs the "directly public" set for its docs inlining logic, so the privacy pass have to produce three sets and not two. Three is arguably too many, so I merged them in one map:
    `public_items/exported_items/reachable_items: NodeSet => access_levels: NodeMap<AccessLevel>`
    
    r? @alexcrichton
rustc: ./piston-image-0.3.11
cargo rustc -- -Ztime-passes
   Compiling image v0.3.11 (file:///root/benchmarks/piston-image-0.3.11)
time: 0.041; rss: 45MB	parsing
time: 0.014; rss: 45MB	configuration 1
time: 0.000; rss: 45MB	recursion limit
time: 0.001; rss: 45MB	gated macro checking
time: 0.000; rss: 45MB	crate injection
time: 0.005; rss: 50MB	macro loading
time: 0.000; rss: 50MB	plugin loading
time: 0.000; rss: 50MB	plugin registration
time: 0.108; rss: 53MB	expansion
time: 0.004; rss: 53MB	complete gated feature checking 1
time: 0.023; rss: 53MB	configuration 2
time: 0.000; rss: 53MB	gated configuration checking
time: 0.012; rss: 53MB	maybe building test harness
time: 0.010; rss: 53MB	prelude injection
time: 0.001; rss: 53MB	checking that all macro invocations are gone
time: 0.000; rss: 53MB	checking for inline asm in case the target doesn't support it
time: 0.003; rss: 53MB	complete gated feature checking 2
time: 0.011; rss: 53MB	assigning node ids
time: 0.013; rss: 64MB	lowering ast -> hir
time: 0.006; rss: 68MB	indexing hir
time: 0.000; rss: 68MB	attribute checking
time: 0.007; rss: 68MB	early lint checks
time: 0.002; rss: 69MB	external crate/lib resolution
time: 0.001; rss: 69MB	language item collection
time: 0.037; rss: 91MB	resolution
time: 0.003; rss: 91MB	lifetime resolution
time: 0.000; rss: 91MB	looking for entry point
time: 0.000; rss: 91MB	looking for plugin registrar
time: 0.011; rss: 97MB	region resolution
time: 0.002; rss: 97MB	loop checking
time: 0.001; rss: 97MB	static item recursion checking
time: 0.012; rss: 101MB	type collecting
time: 0.000; rss: 101MB	variance inference
time: 0.034; rss: 117MB	coherence checking
time: 0.026; rss: 120MB	wf checking (old)
time: 0.050; rss: 122MB	item-types checking
time: 1.620; rss: 151MB	item-bodies checking
time: 0.000; rss: 151MB	drop-impl checking
time: 0.135; rss: 151MB	wf checking (new)
time: 0.073; rss: 156MB	const checking
time: 0.012; rss: 156MB	privacy checking
time: 0.001; rss: 156MB	stability index
time: 0.010; rss: 156MB	intrinsic checking
time: 0.003; rss: 156MB	effect checking
time: 0.025; rss: 156MB	match checking
time: 0.099; rss: 179MB	MIR dump
time: 0.011; rss: 179MB	liveness checking
time: 0.152; rss: 179MB	borrow checking
time: 0.076; rss: 179MB	rvalue checking
time: 0.003; rss: 179MB	reachability checking
time: 0.009; rss: 179MB	death checking
time: 0.008; rss: 179MB	stability checking
time: 0.000; rss: 179MB	unused lib feature checking
time: 0.073; rss: 179MB	lint checking
time: 0.000; rss: 179MB	resolving dependency formats
time: 0.008; rss: 179MB	erasing regions from MIR
time: 2.816; rss: 286MB	translation
  time: 0.096; rss: 167MB	llvm function passes [0]
  time: 0.047; rss: 167MB	llvm module passes [0]
  time: 1.758; rss: 216MB	codegen passes [0]
  time: 0.001; rss: 184MB	codegen passes [0]
time: 2.110; rss: 184MB	LLVM passes
time: 0.156; rss: 184MB	linking
done
