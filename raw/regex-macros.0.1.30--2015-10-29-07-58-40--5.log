commit 427140f771828d5a2fce7a21d97359d2967c3239
Merge: 696cd7c c2277de
Author: bors <bors@rust-lang.org>
Date:   Thu Oct 29 11:14:27 2015 +0000

    Auto merge of #29188 - nikomatsakis:remove-contraction, r=pnkfelix
    
    This fixes #29048 (though I think adding better transactional support would be a better fix for that issue, but that is more difficult). It also simplifies region inference and changes the model to a pure data flow one, as discussed in [this internals thread](https://internals.rust-lang.org/t/rough-thoughts-on-the-impl-of-region-inference-mir-etc/2800). I am not 100% sure though if this PR is the right thing to do -- or at least maybe not at this moment, so thoughts on that would be appreciated.
    
    r? @pnkfelix
    cc @arielb1
rustc: ./regex-macros.0.1.30
cd regex_macros && cargo rustc -- -Ztime-passes
   Compiling regex_macros v0.1.17 (file:///root/benchmarks/regex-macros.0.1.30/regex_macros)
time: 0.002; rss: 29MB	parsing
time: 0.001; rss: 33MB	configuration 1
time: 0.000; rss: 33MB	recursion limit
time: 0.000; rss: 33MB	gated macro checking
time: 0.000; rss: 33MB	crate injection
time: 0.002; rss: 35MB	macro loading
time: 0.000; rss: 35MB	plugin loading
time: 0.000; rss: 35MB	plugin registration
time: 0.026; rss: 44MB	expansion
time: 0.001; rss: 44MB	complete gated feature checking 1
time: 0.007; rss: 44MB	configuration 2
time: 0.000; rss: 44MB	gated configuration checking
time: 0.004; rss: 44MB	maybe building test harness
time: 0.004; rss: 44MB	prelude injection
time: 0.000; rss: 44MB	checking that all macro invocations are gone
time: 0.000; rss: 44MB	checking for inline asm in case the target doesn't support it
time: 0.001; rss: 44MB	complete gated feature checking 2
time: 0.004; rss: 44MB	assigning node ids
time: 0.003; rss: 48MB	lowering ast -> hir
time: 0.001; rss: 48MB	indexing hir
time: 0.000; rss: 48MB	attribute checking
time: 0.003; rss: 48MB	early lint checks
time: 0.046; rss: 86MB	external crate/lib resolution
time: 0.000; rss: 86MB	language item collection
time: 0.015; rss: 104MB	resolution
time: 0.000; rss: 106MB	lifetime resolution
time: 0.000; rss: 106MB	looking for entry point
time: 0.000; rss: 106MB	looking for plugin registrar
time: 0.002; rss: 108MB	region resolution
time: 0.000; rss: 108MB	loop checking
time: 0.000; rss: 108MB	static item recursion checking
time: 0.004; rss: 112MB	type collecting
time: 0.000; rss: 112MB	variance inference
time: 0.015; rss: 135MB	coherence checking
time: 0.000; rss: 135MB	wf checking (old)
time: 0.001; rss: 135MB	item-types checking
time: 1.042; rss: 169MB	item-bodies checking
time: 0.000; rss: 169MB	drop-impl checking
time: 0.005; rss: 169MB	wf checking (new)
time: 0.015; rss: 169MB	const checking
time: 0.003; rss: 169MB	privacy checking
time: 0.000; rss: 169MB	stability index
time: 0.001; rss: 169MB	intrinsic checking
time: 0.001; rss: 169MB	effect checking
time: 0.001; rss: 169MB	match checking
time: 0.025; rss: 179MB	MIR dump
time: 0.005; rss: 172MB	liveness checking
time: 0.039; rss: 172MB	borrow checking
time: 0.011; rss: 172MB	rvalue checking
time: 0.000; rss: 172MB	reachability checking
time: 0.002; rss: 172MB	death checking
time: 0.003; rss: 172MB	stability checking
time: 0.000; rss: 172MB	unused lib feature checking
time: 0.015; rss: 172MB	lint checking
time: 0.002; rss: 172MB	resolving dependency formats
time: 0.410; rss: 215MB	translation
  time: 0.033; rss: 164MB	llvm function passes [0]
  time: 0.013; rss: 165MB	llvm module passes [0]
  time: 0.742; rss: 185MB	codegen passes [0]
  time: 0.000; rss: 185MB	codegen passes [0]
time: 0.809; rss: 185MB	LLVM passes
  time: 0.002; rss: 185MB	altering regex-640d5d4018246dae.rlib
  time: 0.109; rss: 191MB	running linker
time: 0.112; rss: 189MB	linking
done
