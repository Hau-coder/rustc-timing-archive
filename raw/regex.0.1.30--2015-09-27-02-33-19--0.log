commit dde7283b807792dab4b2a10bace9b015a28aea02
Merge: 90c04d0 91f7c60
Author: bors <bors@rust-lang.org>
Date:   Sun Sep 27 05:29:39 2015 +0000

    Auto merge of #28651 - dotdash:exhaustive_match, r=eddyb
    
    By putting an "unreachable" instruction into the default arm of a switch
    instruction we can let LLVM know that the match is exhaustive, allowing
    for better optimizations.
    
    For example, this match:
    ```rust
    pub enum Enum {
        One,
        Two,
        Three,
    }
    
    impl Enum {
        pub fn get_disc(self) -> u8 {
            match self {
                Enum::One => 0,
                Enum::Two => 1,
                Enum::Three => 2,
            }
        }
    }
    ```
    
    Currently compiles to this on x86_64:
    ```asm
      .cfi_startproc
      movzbl  %dil, %ecx
      cmpl  $1, %ecx
      setne %al
      testb %cl, %cl
      je  .LBB0_2
      incb  %al
      movb  %al, %dil
    .LBB0_2:
      movb  %dil, %al
      retq
    .Lfunc_end0:
    ```
    
    But with this change we get:
    ```asm
      .cfi_startproc
      movb  %dil, %al
      retq
    .Lfunc_end0:
    ```
rustc: ./regex.0.1.30
cargo rustc -- -Ztime-passes
makefile:2: recipe for target 'all' failed
done
