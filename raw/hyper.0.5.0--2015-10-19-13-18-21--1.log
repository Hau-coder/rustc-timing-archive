commit 7aec91734e0c12b8e36158566ad512a663111c9f
Merge: 3e268f2 1303687
Author: bors <bors@rust-lang.org>
Date:   Mon Oct 19 12:45:25 2015 +0000

    Auto merge of #29153 - arcnmx:thread-spawn, r=alexcrichton
    
    Fixes #29128
    
    Most of the weird lifetime things and `inner` stuff seems like leftover cruft from `thread::scoped`. Should `JoinInner` just be removed/merged with `JoinHandle`?
    
    Also is it okay to remove the `FnBox`? I'm not really sure why there were two allocations there...
rustc: ./hyper.0.5.0
cargo rustc -- -Ztime-passes
   Compiling hyper v0.5.0 (file:///root/benchmarks/hyper.0.5.0)
time: 0.026; rss: 38MB	parsing
time: 0.009; rss: 41MB	configuration 1
time: 0.000; rss: 41MB	recursion limit
time: 0.000; rss: 41MB	gated macro checking
time: 0.000; rss: 41MB	crate injection
time: 0.004; rss: 46MB	macro loading
time: 0.000; rss: 46MB	plugin loading
time: 0.000; rss: 46MB	plugin registration
time: 0.170; rss: 56MB	expansion
time: 0.005; rss: 56MB	complete gated feature checking 1
time: 0.030; rss: 56MB	configuration 2
time: 0.000; rss: 56MB	gated configuration checking
time: 0.013; rss: 56MB	maybe building test harness
time: 0.010; rss: 56MB	prelude injection
time: 0.001; rss: 56MB	checking that all macro invocations are gone
time: 0.000; rss: 56MB	checking for inline asm in case the target doesn't support it
time: 0.002; rss: 56MB	complete gated feature checking 2
time: 0.010; rss: 56MB	assigning node ids
time: 0.007; rss: 60MB	lowering ast -> hir
time: 0.005; rss: 64MB	indexing hir
time: 0.000; rss: 64MB	attribute checking
time: 0.005; rss: 64MB	early lint checks
time: 0.003; rss: 64MB	external crate/lib resolution
time: 0.002; rss: 64MB	language item collection
time: 0.030; rss: 89MB	resolution
time: 0.002; rss: 89MB	lifetime resolution
time: 0.000; rss: 89MB	looking for entry point
time: 0.001; rss: 89MB	looking for plugin registrar
time: 0.005; rss: 89MB	region resolution
time: 0.001; rss: 89MB	loop checking
time: 0.001; rss: 89MB	static item recursion checking
time: 0.014; rss: 94MB	type collecting
time: 0.002; rss: 94MB	variance inference
time: 0.043; rss: 112MB	coherence checking
time: 0.027; rss: 112MB	wf checking (old)
time: 0.025; rss: 112MB	item-types checking
time: 0.527; rss: 128MB	item-bodies checking
time: 0.000; rss: 128MB	drop-impl checking
time: 0.085; rss: 130MB	wf checking (new)
time: 0.050; rss: 130MB	const checking
time: 0.009; rss: 130MB	privacy checking
time: 0.000; rss: 130MB	stability index
time: 0.004; rss: 130MB	intrinsic checking
time: 0.002; rss: 130MB	effect checking
time: 0.012; rss: 130MB	match checking
time: 0.060; rss: 147MB	MIR dump
time: 0.006; rss: 147MB	liveness checking
time: 0.075; rss: 147MB	borrow checking
time: 0.053; rss: 149MB	rvalue checking
time: 0.003; rss: 149MB	reachability checking
time: 0.007; rss: 149MB	death checking
time: 0.005; rss: 149MB	stability checking
time: 0.000; rss: 149MB	unused lib feature checking
time: 0.042; rss: 149MB	lint checking
time: 0.000; rss: 149MB	resolving dependency formats
time: 1.432; rss: 286MB	translation
  time: 0.103; rss: 172MB	llvm function passes
  time: 0.052; rss: 172MB	llvm module passes
  time: 1.696; rss: 218MB	codegen passes
  time: 0.001; rss: 179MB	codegen passes
time: 2.083; rss: 179MB	LLVM passes
time: 0.182; rss: 179MB	linking
done
