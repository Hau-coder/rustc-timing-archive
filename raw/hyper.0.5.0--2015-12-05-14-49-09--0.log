commit aad4e5665e81a3ec998b3648d395d0eb99a7500b
Merge: 9f715e9 9749a19
Author: bors <bors@rust-lang.org>
Date:   Sat Dec 5 20:49:16 2015 +0000

    Auto merge of #30177 - retep998:handling-threads, r=alexcrichton
    
    Allows a `HANDLE` to be extracted from a `JoinHandle` on Windows.
    Allows a `pthread_t` to be extracted from a `JoinHandle` everywhere else.
    
    Because https://github.com/rust-lang/rust/pull/29461 was closed.
    
    r? @alexcrichton
rustc: ./hyper.0.5.0
cargo rustc -- -Ztime-passes
    Updating registry `https://github.com/rust-lang/crates.io-index`
   Compiling unicase v0.1.0
   Compiling libc v0.2.2
   Compiling bitflags v0.3.3
   Compiling matches v0.1.2
   Compiling typeable v0.1.2
   Compiling lazy_static v0.1.15
   Compiling traitobject v0.0.1
   Compiling libc v0.1.12
   Compiling rustc-serialize v0.3.16
   Compiling httparse v0.1.6
   Compiling winapi v0.2.5
   Compiling gcc v0.3.20
   Compiling pkg-config v0.3.6
   Compiling winapi-build v0.1.1
   Compiling kernel32-sys v0.2.1
   Compiling advapi32-sys v0.1.2
   Compiling log v0.3.4
   Compiling rand v0.3.12
   Compiling time v0.1.34
   Compiling num_cpus v0.2.10
   Compiling mime v0.0.11
   Compiling openssl-sys v0.6.7
   Compiling openssl v0.6.7
   Compiling uuid v0.1.18
   Compiling url v0.2.38
   Compiling cookie v0.1.21
   Compiling hyper v0.5.0 (file:///root/benchmarks/hyper.0.5.0)
time: 0.028; rss: 41MB	parsing
time: 0.009; rss: 41MB	configuration 1
time: 0.000; rss: 41MB	recursion limit
time: 0.000; rss: 41MB	gated macro checking
time: 0.000; rss: 41MB	crate injection
time: 0.004; rss: 47MB	macro loading
time: 0.000; rss: 47MB	plugin loading
time: 0.000; rss: 47MB	plugin registration
time: 0.189; rss: 56MB	expansion
time: 0.005; rss: 56MB	complete gated feature checking 1
time: 0.034; rss: 56MB	configuration 2
time: 0.000; rss: 56MB	gated configuration checking
time: 0.013; rss: 56MB	maybe building test harness
time: 0.011; rss: 56MB	prelude injection
time: 0.001; rss: 56MB	checking that all macro invocations are gone
time: 0.000; rss: 56MB	checking for inline asm in case the target doesn't support it
time: 0.002; rss: 56MB	complete gated feature checking 2
time: 0.010; rss: 56MB	assigning node ids
time: 0.008; rss: 62MB	lowering ast -> hir
time: 0.005; rss: 66MB	indexing hir
time: 0.000; rss: 66MB	attribute checking
time: 0.005; rss: 66MB	early lint checks
time: 0.003; rss: 67MB	external crate/lib resolution
time: 0.001; rss: 67MB	language item collection
time: 0.030; rss: 90MB	resolution
time: 0.002; rss: 90MB	lifetime resolution
time: 0.000; rss: 90MB	looking for entry point
time: 0.000; rss: 90MB	looking for plugin registrar
time: 0.006; rss: 90MB	region resolution
time: 0.001; rss: 90MB	loop checking
time: 0.001; rss: 90MB	static item recursion checking
time: 0.013; rss: 96MB	type collecting
time: 0.000; rss: 96MB	variance inference
time: 0.038; rss: 115MB	coherence checking
time: 0.028; rss: 117MB	wf checking (old)
time: 0.027; rss: 117MB	item-types checking
time: 0.531; rss: 134MB	item-bodies checking
time: 0.000; rss: 134MB	drop-impl checking
time: 0.086; rss: 134MB	wf checking (new)
time: 0.041; rss: 134MB	const checking
time: 0.009; rss: 134MB	privacy checking
time: 0.001; rss: 134MB	stability index
time: 0.004; rss: 134MB	intrinsic checking
time: 0.002; rss: 134MB	effect checking
time: 0.013; rss: 134MB	match checking
time: 0.048; rss: 140MB	MIR dump
time: 0.006; rss: 140MB	liveness checking
time: 0.068; rss: 140MB	borrow checking
time: 0.034; rss: 142MB	rvalue checking
time: 0.003; rss: 142MB	reachability checking
time: 0.006; rss: 142MB	death checking
time: 0.005; rss: 142MB	stability checking
time: 0.000; rss: 142MB	unused lib feature checking
time: 0.048; rss: 142MB	lint checking
time: 0.000; rss: 142MB	resolving dependency formats
time: 0.008; rss: 144MB	erasing regions from MIR
time: 1.399; rss: 280MB	translation
  time: 0.101; rss: 179MB	llvm function passes [0]
  time: 0.052; rss: 179MB	llvm module passes [0]
  time: 1.768; rss: 223MB	codegen passes [0]
  time: 0.001; rss: 179MB	codegen passes [0]
time: 2.161; rss: 178MB	LLVM passes
time: 0.208; rss: 182MB	linking
done
