commit 04475b92f9309356a90fe970816774d14ef5b4ed
Merge: 2c42c98 f9b8c49
Author: bors <bors@rust-lang.org>
Date:   Mon Oct 26 21:23:32 2015 +0000

    Auto merge of #29274 - thepowersgang:issues-29107-const-unsafe-fn-order, r=nikomatsakis
    
    This PR switches the implemented ordering from `unsafe const fn` (as was in the original RFC) to `const unsafe fn` (which is what the lang team decided on)
rustc: ./html5ever-2015-05-15
cargo rustc -- -Ztime-passes
    Updating registry `https://github.com/rust-lang/crates.io-index`
    Updating git repository `https://github.com/servo/string-cache`
    Updating git repository `https://github.com/reem/rust-mac`
   Compiling mac v0.0.2 (https://github.com/reem/rust-mac#6316d3f4)
   Compiling rustc-serialize v0.3.16
   Compiling lazy_static v0.1.15
   Compiling mac v0.0.2
   Compiling winapi v0.2.4
   Compiling void v0.0.5
   Compiling phf_shared v0.7.6
   Compiling winapi-build v0.1.1
   Compiling libc v0.1.10
   Compiling unreachable v0.0.2
   Compiling debug_unreachable v0.0.6
   Compiling phf v0.7.6
   Compiling advapi32-sys v0.1.2
   Compiling kernel32-sys v0.1.4
   Compiling log v0.3.2
   Compiling rand v0.3.11
   Compiling time v0.1.33
   Compiling phf_generator v0.7.6
   Compiling phf_macros v0.7.6
   Compiling string_cache_shared v0.1.9 (https://github.com/servo/string-cache#e9f4c63e)
   Compiling string_cache v0.1.15 (https://github.com/servo/string-cache#e9f4c63e)
   Compiling string_cache_plugin v0.1.9 (https://github.com/servo/string-cache#e9f4c63e)
   Compiling html5ever_macros v0.0.0 (file:///root/benchmarks/html5ever-2015-05-15)
   Compiling num v0.1.27
   Compiling serde v0.6.1
   Compiling html5ever v0.0.0 (file:///root/benchmarks/html5ever-2015-05-15)
time: 0.018; rss: 39MB	parsing
time: 0.005; rss: 39MB	configuration 1
time: 0.000; rss: 39MB	recursion limit
time: 0.000; rss: 39MB	gated macro checking
time: 0.000; rss: 39MB	crate injection
time: 0.020; rss: 55MB	macro loading
time: 0.001; rss: 56MB	plugin loading
time: 0.000; rss: 56MB	plugin registration
time: 1.004; rss: 72MB	expansion
time: 0.004; rss: 72MB	complete gated feature checking 1
time: 0.027; rss: 72MB	configuration 2
time: 0.000; rss: 72MB	gated configuration checking
time: 0.014; rss: 72MB	maybe building test harness
time: 0.013; rss: 72MB	prelude injection
time: 0.002; rss: 72MB	checking that all macro invocations are gone
time: 0.000; rss: 72MB	checking for inline asm in case the target doesn't support it
time: 0.003; rss: 72MB	complete gated feature checking 2
time: 0.013; rss: 72MB	assigning node ids
time: 0.018; rss: 86MB	lowering ast -> hir
time: 0.007; rss: 91MB	indexing hir
time: 0.000; rss: 91MB	attribute checking
time: 0.010; rss: 91MB	early lint checks
time: 0.004; rss: 91MB	external crate/lib resolution
time: 0.003; rss: 91MB	language item collection
time: 0.033; rss: 107MB	resolution
time: 0.002; rss: 107MB	lifetime resolution
time: 0.000; rss: 107MB	looking for entry point
time: 0.001; rss: 107MB	looking for plugin registrar
time: 0.016; rss: 113MB	region resolution
time: 0.002; rss: 113MB	loop checking
time: 0.002; rss: 113MB	static item recursion checking
time: 0.008; rss: 116MB	type collecting
time: 0.003; rss: 116MB	variance inference
time: 0.038; rss: 133MB	coherence checking
time: 0.007; rss: 133MB	wf checking (old)
time: 0.323; rss: 163MB	item-types checking
time: 0.593; rss: 174MB	item-bodies checking
time: 0.000; rss: 174MB	drop-impl checking
time: 0.028; rss: 174MB	wf checking (new)
time: 0.078; rss: 174MB	const checking
time: 0.013; rss: 174MB	privacy checking
time: 0.001; rss: 174MB	stability index
time: 0.004; rss: 174MB	intrinsic checking
time: 0.003; rss: 174MB	effect checking
time: 0.027; rss: 174MB	match checking
time: 0.094; rss: 193MB	MIR dump
time: 0.012; rss: 183MB	liveness checking
time: 0.103; rss: 182MB	borrow checking
time: 0.041; rss: 182MB	rvalue checking
time: 0.003; rss: 182MB	reachability checking
time: 0.010; rss: 182MB	death checking
time: 0.008; rss: 182MB	stability checking
time: 0.000; rss: 182MB	unused lib feature checking
time: 0.056; rss: 182MB	lint checking
time: 0.000; rss: 182MB	resolving dependency formats
time: 0.476; rss: 227MB	translation
  time: 0.018; rss: 116MB	llvm function passes
  time: 0.007; rss: 117MB	llvm module passes
  time: 0.332; rss: 153MB	codegen passes
  time: 0.001; rss: 129MB	codegen passes
time: 0.412; rss: 128MB	LLVM passes
time: 0.058; rss: 128MB	linking
done
