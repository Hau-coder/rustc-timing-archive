commit 7d046230338e117c8a7c85bb4d542f2787d5ef9d
Merge: 8937ec1 328df8e
Author: bors <bors@rust-lang.org>
Date:   Mon Jun 15 01:57:17 2015 +0000

    Auto merge of #26290 - michaelsproul:url-line-limit, r=alexcrichton
    
    The plugin that enforces error explanation line-length is a bit restrictive, particularly when attempting to use URLs in explanations (cf #26163).
    
    Jashank will still have to do some mucking around with `#[cfg(not(stage0))]` attributes or else wait until a snapshot with this commit lands.
rustc: ./hyper.0.5.0
cargo rustc -- -Ztime-passes
    Updating registry `https://github.com/rust-lang/crates.io-index`
   Compiling lazy_static v0.1.11
   Compiling rustc-serialize v0.3.15
   Compiling httparse v0.1.4
   Compiling unicase v0.1.0
   Compiling libc v0.1.8
   Compiling gcc v0.3.8
   Compiling matches v0.1.2
   Compiling traitobject v0.0.1
   Compiling bitflags v0.1.1
   Compiling pkg-config v0.3.4
   Compiling typeable v0.1.2
   Compiling log v0.3.1
   Compiling num_cpus v0.2.6
   Compiling mime v0.0.11
   Compiling openssl-sys v0.6.2
   Compiling time v0.1.26
   Compiling openssl v0.6.2
   Compiling url v0.2.35
   Compiling cookie v0.1.21
   Compiling hyper v0.5.0 (file:///root/benchmarks/hyper.0.5.0)
time: 0.030 	parsing
time: 0.009 	configuration 1
time: 0.000 	recursion limit
time: 0.000 	gated macro checking
time: 0.000 	crate injection
time: 0.003 	macro loading
time: 0.000 	plugin loading
time: 0.000 	plugin registration
time: 0.193 	expansion
time: 0.005 	complete gated feature checking 1
time: 0.031 	configuration 2
time: 0.013 	maybe building test harness
time: 0.010 	prelude injection
time: 0.001 	checking that all macro invocations are gone
time: 0.002 	complete gated feature checking 2
time: 0.012 	assigning node ids and indexing ast
time: 0.002 	external crate/lib resolution
time: 0.002 	language item collection
time: 0.036 	resolution
time: 0.002 	lifetime resolution
time: 0.000 	looking for entry point
time: 0.001 	looking for plugin registrar
time: 0.008 	region resolution
time: 0.002 	loop checking
time: 0.001 	static item recursion checking
time: 0.012 	type collecting
time: 0.002 	variance inference
time: 0.104 	coherence checking
time: 1.012 	type checking
time: 0.074 	const checking
time: 0.010 	privacy checking
time: 0.000 	stability index
time: 0.004 	intrinsic checking
time: 0.002 	effect checking
time: 0.014 	match checking
time: 0.006 	liveness checking
time: 0.096 	borrow checking
time: 0.068 	rvalue checking
time: 0.002 	reachability checking
time: 0.008 	death checking
time: 0.010 	stability checking
time: 0.000 	unused lib feature checking
time: 0.042 	lint checking
time: 0.000 	resolving dependency formats
time: 2.605 	translation
  time: 0.095 	llvm function passes
  time: 0.044 	llvm module passes
  time: 1.983 	codegen passes
  time: 0.002 	codegen passes
time: 2.360 	LLVM passes
time: 0.198 	linking
done
