commit eb1d018c01f70bcfc38bc8365a3de71c1564f694
Merge: dfe88bf 6405122
Author: bors <bors@rust-lang.org>
Date:   Tue Dec 1 19:47:38 2015 +0000

    Auto merge of #25570 - oli-obk:const_indexing, r=nikomatsakis
    
    This PR allows the constant evaluation of index operations on constant arrays and repeat expressions. This allows index expressions to appear in the expression path of the length expression of a repeat expression or an array type.
    
    An example is
    
    ```rust
    const ARR: [usize; 5] = [1, 2, 3, 4, 5];
    const ARR2: [usize; ARR[1]] = [42, 99];
    ```
    
    In most other locations llvm's const evaluator figures it out already. This is not specific to index expressions and could be remedied in the future.
rustc: ./hyper.0.5.0
cargo rustc -- -Ztime-passes
   Compiling hyper v0.5.0 (file:///root/benchmarks/hyper.0.5.0)
time: 0.028; rss: 37MB	parsing
time: 0.009; rss: 41MB	configuration 1
time: 0.000; rss: 41MB	recursion limit
time: 0.000; rss: 41MB	gated macro checking
time: 0.000; rss: 41MB	crate injection
time: 0.004; rss: 47MB	macro loading
time: 0.000; rss: 47MB	plugin loading
time: 0.000; rss: 47MB	plugin registration
time: 0.176; rss: 56MB	expansion
time: 0.006; rss: 56MB	complete gated feature checking 1
time: 0.031; rss: 56MB	configuration 2
time: 0.000; rss: 56MB	gated configuration checking
time: 0.013; rss: 56MB	maybe building test harness
time: 0.010; rss: 56MB	prelude injection
time: 0.001; rss: 56MB	checking that all macro invocations are gone
time: 0.000; rss: 56MB	checking for inline asm in case the target doesn't support it
time: 0.002; rss: 56MB	complete gated feature checking 2
time: 0.010; rss: 56MB	assigning node ids
time: 0.009; rss: 61MB	lowering ast -> hir
time: 0.005; rss: 63MB	indexing hir
time: 0.000; rss: 63MB	attribute checking
time: 0.006; rss: 63MB	early lint checks
time: 0.003; rss: 65MB	external crate/lib resolution
time: 0.001; rss: 65MB	language item collection
time: 0.032; rss: 92MB	resolution
time: 0.002; rss: 92MB	lifetime resolution
time: 0.000; rss: 92MB	looking for entry point
time: 0.000; rss: 92MB	looking for plugin registrar
time: 0.006; rss: 92MB	region resolution
time: 0.001; rss: 92MB	loop checking
time: 0.001; rss: 92MB	static item recursion checking
time: 0.014; rss: 96MB	type collecting
time: 0.000; rss: 96MB	variance inference
time: 0.039; rss: 111MB	coherence checking
time: 0.028; rss: 113MB	wf checking (old)
time: 0.026; rss: 113MB	item-types checking
time: 0.532; rss: 134MB	item-bodies checking
time: 0.000; rss: 134MB	drop-impl checking
time: 0.086; rss: 134MB	wf checking (new)
time: 0.041; rss: 134MB	const checking
time: 0.009; rss: 134MB	privacy checking
time: 0.001; rss: 134MB	stability index
time: 0.004; rss: 134MB	intrinsic checking
time: 0.002; rss: 134MB	effect checking
time: 0.013; rss: 134MB	match checking
time: 0.048; rss: 140MB	MIR dump
time: 0.006; rss: 140MB	liveness checking
time: 0.070; rss: 140MB	borrow checking
time: 0.034; rss: 142MB	rvalue checking
time: 0.003; rss: 142MB	reachability checking
time: 0.006; rss: 142MB	death checking
time: 0.005; rss: 142MB	stability checking
time: 0.000; rss: 142MB	unused lib feature checking
time: 0.042; rss: 142MB	lint checking
time: 0.000; rss: 142MB	resolving dependency formats
time: 0.008; rss: 144MB	erasing regions from MIR
time: 1.395; rss: 278MB	translation
  time: 0.100; rss: 177MB	llvm function passes [0]
  time: 0.054; rss: 177MB	llvm module passes [0]
  time: 1.683; rss: 222MB	codegen passes [0]
  time: 0.001; rss: 181MB	codegen passes [0]
time: 2.065; rss: 181MB	LLVM passes
time: 0.176; rss: 181MB	linking
done
