commit 9a855668fcc918071ecd1573abdeaccc6a99cbbb
Merge: 3f37f5a 00c1419
Author: bors <bors@rust-lang.org>
Date:   Fri Oct 23 09:06:24 2015 +0000

    Auto merge of #29194 - chrisccerami:clarify-headers-in-traits-docs, r=Manishearth
    
    It's possible that there is some meaning I'm not grasping from the headers "Traits bounds for generic functions" and "Traits bounds for generic structs", but they seem to me like they could be clearer and more grammatically correct.
rustc: ./html5ever-2015-05-15
cargo rustc -- -Ztime-passes
    Updating registry `https://github.com/rust-lang/crates.io-index`
    Updating git repository `https://github.com/servo/string-cache`
    Updating git repository `https://github.com/reem/rust-mac`
   Compiling debug-builders v0.1.0
   Compiling lazy_static v0.1.15
   Compiling void v0.0.5
   Compiling mac v0.0.2 (https://github.com/reem/rust-mac#6316d3f4)
   Compiling winapi-build v0.1.1
   Compiling rustc-serialize v0.3.16
   Compiling phf_shared v0.7.5
   Compiling libc v0.1.10
   Compiling winapi v0.2.4
   Compiling mac v0.0.2
   Compiling unreachable v0.0.2
   Compiling debug_unreachable v0.0.6
   Compiling advapi32-sys v0.1.2
   Compiling kernel32-sys v0.1.4
   Compiling phf v0.7.5
   Compiling log v0.3.2
   Compiling rand v0.3.11
   Compiling time v0.1.33
   Compiling phf_generator v0.7.5
   Compiling string_cache_shared v0.1.7 (https://github.com/servo/string-cache#3abf873e)
   Compiling phf_macros v0.7.5
   Compiling string_cache_plugin v0.1.7 (https://github.com/servo/string-cache#3abf873e)
   Compiling string_cache v0.1.13 (https://github.com/servo/string-cache#3abf873e)
   Compiling num v0.1.27
   Compiling html5ever_macros v0.0.0 (file:///root/benchmarks/html5ever-2015-05-15)
   Compiling serde v0.6.1
   Compiling html5ever v0.0.0 (file:///root/benchmarks/html5ever-2015-05-15)
time: 0.018; rss: 39MB	parsing
time: 0.005; rss: 39MB	configuration 1
time: 0.000; rss: 39MB	recursion limit
time: 0.000; rss: 39MB	gated macro checking
time: 0.000; rss: 39MB	crate injection
time: 0.020; rss: 55MB	macro loading
time: 0.001; rss: 56MB	plugin loading
time: 0.000; rss: 56MB	plugin registration
time: 1.002; rss: 72MB	expansion
time: 0.004; rss: 72MB	complete gated feature checking 1
time: 0.026; rss: 72MB	configuration 2
time: 0.000; rss: 72MB	gated configuration checking
time: 0.014; rss: 72MB	maybe building test harness
time: 0.013; rss: 72MB	prelude injection
time: 0.002; rss: 72MB	checking that all macro invocations are gone
time: 0.000; rss: 72MB	checking for inline asm in case the target doesn't support it
time: 0.004; rss: 72MB	complete gated feature checking 2
time: 0.013; rss: 72MB	assigning node ids
time: 0.017; rss: 86MB	lowering ast -> hir
time: 0.007; rss: 89MB	indexing hir
time: 0.000; rss: 89MB	attribute checking
time: 0.009; rss: 90MB	early lint checks
time: 0.004; rss: 90MB	external crate/lib resolution
time: 0.003; rss: 90MB	language item collection
time: 0.032; rss: 107MB	resolution
time: 0.002; rss: 107MB	lifetime resolution
time: 0.000; rss: 107MB	looking for entry point
time: 0.001; rss: 107MB	looking for plugin registrar
time: 0.015; rss: 112MB	region resolution
time: 0.002; rss: 112MB	loop checking
time: 0.002; rss: 112MB	static item recursion checking
time: 0.008; rss: 115MB	type collecting
time: 0.003; rss: 115MB	variance inference
time: 0.038; rss: 132MB	coherence checking
time: 0.007; rss: 132MB	wf checking (old)
time: 0.322; rss: 163MB	item-types checking
time: 0.586; rss: 175MB	item-bodies checking
time: 0.000; rss: 175MB	drop-impl checking
time: 0.027; rss: 175MB	wf checking (new)
time: 0.075; rss: 175MB	const checking
time: 0.012; rss: 175MB	privacy checking
time: 0.001; rss: 175MB	stability index
time: 0.004; rss: 175MB	intrinsic checking
time: 0.003; rss: 175MB	effect checking
time: 0.026; rss: 175MB	match checking
time: 0.093; rss: 192MB	MIR dump
time: 0.011; rss: 197MB	liveness checking
time: 0.099; rss: 199MB	borrow checking
time: 0.040; rss: 199MB	rvalue checking
time: 0.003; rss: 199MB	reachability checking
time: 0.010; rss: 199MB	death checking
time: 0.007; rss: 199MB	stability checking
time: 0.000; rss: 199MB	unused lib feature checking
time: 0.054; rss: 199MB	lint checking
time: 0.000; rss: 199MB	resolving dependency formats
time: 0.467; rss: 245MB	translation
  time: 0.018; rss: 117MB	llvm function passes
  time: 0.007; rss: 118MB	llvm module passes
  time: 0.336; rss: 154MB	codegen passes
  time: 0.001; rss: 129MB	codegen passes
time: 0.416; rss: 129MB	LLVM passes
time: 0.058; rss: 128MB	linking
done
