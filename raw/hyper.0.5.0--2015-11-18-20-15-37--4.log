commit 9303055f37a34adfceec1d1012b87308136295ce
Merge: 2978af0 7926fa1
Author: bors <bors@rust-lang.org>
Date:   Thu Nov 19 01:01:30 2015 +0000

    Auto merge of #29903 - nikomatsakis:incr-comp-ool-items, r=mw,nrc
    
    This PR moves items into a separate map stored in the krate, rather than storing them inline in the HIR. The HIR visitor is also modified to skip visiting nested items by default. The goal here is to ensure that if you get access to the HIR for one item, you don't automatically get access to a bunch of other items, for better dependency tracking.
    
    r? @nrc
    cc @eddyb
rustc: ./hyper.0.5.0
cargo rustc -- -Ztime-passes
   Compiling hyper v0.5.0 (file:///root/benchmarks/hyper.0.5.0)
time: 0.028; rss: 41MB	parsing
time: 0.009; rss: 41MB	configuration 1
time: 0.000; rss: 41MB	recursion limit
time: 0.000; rss: 41MB	gated macro checking
time: 0.000; rss: 41MB	crate injection
time: 0.004; rss: 46MB	macro loading
time: 0.000; rss: 46MB	plugin loading
time: 0.000; rss: 46MB	plugin registration
time: 0.175; rss: 56MB	expansion
time: 0.005; rss: 56MB	complete gated feature checking 1
time: 0.030; rss: 56MB	configuration 2
time: 0.000; rss: 56MB	gated configuration checking
time: 0.013; rss: 56MB	maybe building test harness
time: 0.010; rss: 56MB	prelude injection
time: 0.001; rss: 56MB	checking that all macro invocations are gone
time: 0.000; rss: 56MB	checking for inline asm in case the target doesn't support it
time: 0.002; rss: 56MB	complete gated feature checking 2
time: 0.010; rss: 56MB	assigning node ids
time: 0.008; rss: 60MB	lowering ast -> hir
time: 0.005; rss: 62MB	indexing hir
time: 0.000; rss: 62MB	attribute checking
time: 0.005; rss: 62MB	early lint checks
time: 0.003; rss: 64MB	external crate/lib resolution
time: 0.001; rss: 64MB	language item collection
time: 0.030; rss: 87MB	resolution
time: 0.002; rss: 87MB	lifetime resolution
time: 0.000; rss: 87MB	looking for entry point
time: 0.000; rss: 87MB	looking for plugin registrar
time: 0.006; rss: 87MB	region resolution
time: 0.001; rss: 87MB	loop checking
time: 0.001; rss: 87MB	static item recursion checking
time: 0.014; rss: 93MB	type collecting
time: 0.000; rss: 93MB	variance inference
time: 0.040; rss: 112MB	coherence checking
time: 0.028; rss: 114MB	wf checking (old)
time: 0.026; rss: 114MB	item-types checking
time: 0.530; rss: 131MB	item-bodies checking
time: 0.000; rss: 131MB	drop-impl checking
time: 0.088; rss: 131MB	wf checking (new)
time: 0.041; rss: 131MB	const checking
time: 0.009; rss: 131MB	privacy checking
time: 0.001; rss: 131MB	stability index
time: 0.004; rss: 131MB	intrinsic checking
time: 0.002; rss: 131MB	effect checking
time: 0.013; rss: 131MB	match checking
time: 0.052; rss: 144MB	MIR dump
time: 0.006; rss: 146MB	liveness checking
time: 0.068; rss: 146MB	borrow checking
time: 0.034; rss: 146MB	rvalue checking
time: 0.003; rss: 146MB	reachability checking
time: 0.006; rss: 146MB	death checking
time: 0.005; rss: 146MB	stability checking
time: 0.000; rss: 146MB	unused lib feature checking
time: 0.041; rss: 146MB	lint checking
time: 0.000; rss: 146MB	resolving dependency formats
time: 0.008; rss: 148MB	erasing regions from MIR
time: 1.401; rss: 286MB	translation
  time: 0.100; rss: 176MB	llvm function passes [0]
  time: 0.052; rss: 176MB	llvm module passes [0]
  time: 1.676; rss: 221MB	codegen passes [0]
  time: 0.001; rss: 214MB	codegen passes [0]
time: 2.059; rss: 181MB	LLVM passes
time: 0.176; rss: 182MB	linking
done
