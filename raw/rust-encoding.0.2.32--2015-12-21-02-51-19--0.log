commit e2834a20e7c5bbfb1502f582545153dc6b25a70c
Merge: da4a21e 04c05c7
Author: bors <bors@rust-lang.org>
Date:   Mon Dec 21 07:49:05 2015 +0000

    Auto merge of #30413 - pnkfelix:fsk-span_note, r=Manishearth
    
    Add note when item accessed from module via `m.i` rather than `m::i`.
    
    (I tried to make this somewhat future-proofed, in that the `UnresolvedNameContext` could be expanded in the future with other cases besides paths that are known to be modules.)
    
    This supersedes PR #30356 ; since I'm responsible for a bunch of new code here, someone else should review it. :)
rustc: ./rust-encoding.0.2.32
cargo rustc -- -Ztime-passes
    Updating registry `https://github.com/rust-lang/crates.io-index`
   Compiling encoding_index_tests v0.1.4 (file:///root/benchmarks/rust-encoding.0.2.32)
   Compiling encoding-index-simpchinese v1.20141219.5 (file:///root/benchmarks/rust-encoding.0.2.32)
   Compiling encoding-index-japanese v1.20141219.5 (file:///root/benchmarks/rust-encoding.0.2.32)
   Compiling encoding-index-singlebyte v1.20141219.5 (file:///root/benchmarks/rust-encoding.0.2.32)
   Compiling encoding-index-korean v1.20141219.5 (file:///root/benchmarks/rust-encoding.0.2.32)
   Compiling encoding-index-tradchinese v1.20141219.5 (file:///root/benchmarks/rust-encoding.0.2.32)
   Compiling encoding v0.2.32 (file:///root/benchmarks/rust-encoding.0.2.32)
time: 0.022; rss: 41MB	parsing
time: 0.006; rss: 40MB	configuration 1
time: 0.000; rss: 40MB	recursion limit
time: 0.000; rss: 40MB	gated macro checking
time: 0.000; rss: 40MB	crate injection
time: 0.003; rss: 44MB	macro loading
time: 0.000; rss: 44MB	plugin loading
time: 0.000; rss: 44MB	plugin registration
time: 0.046; rss: 46MB	expansion
time: 0.001; rss: 46MB	complete gated feature checking 1
time: 0.008; rss: 45MB	configuration 2
time: 0.000; rss: 45MB	gated configuration checking
time: 0.004; rss: 45MB	maybe building test harness
time: 0.004; rss: 45MB	prelude injection
time: 0.000; rss: 45MB	checking that all macro invocations are gone
time: 0.000; rss: 45MB	checking for inline asm in case the target doesn't support it
time: 0.000; rss: 45MB	complete gated feature checking 2
time: 0.004; rss: 45MB	assigning node ids
time: 0.004; rss: 49MB	lowering ast -> hir
time: 0.002; rss: 49MB	indexing hir
time: 0.000; rss: 49MB	attribute checking
time: 0.002; rss: 49MB	early lint checks
time: 0.001; rss: 49MB	external crate/lib resolution
time: 0.000; rss: 49MB	language item collection
time: 0.008; rss: 59MB	resolution
time: 0.000; rss: 59MB	lifetime resolution
time: 0.000; rss: 59MB	looking for entry point
time: 0.000; rss: 59MB	looking for plugin registrar
time: 0.002; rss: 61MB	region resolution
time: 0.000; rss: 61MB	loop checking
time: 0.000; rss: 61MB	static item recursion checking
time: 0.005; rss: 61MB	type collecting
time: 0.000; rss: 61MB	variance inference
time: 0.020; rss: 82MB	coherence checking
time: 0.014; rss: 82MB	wf checking
time: 0.013; rss: 82MB	item-types checking
time: 0.195; rss: 95MB	item-bodies checking
time: 0.000; rss: 95MB	drop-impl checking
time: 0.011; rss: 95MB	const checking
time: 0.002; rss: 95MB	privacy checking
time: 0.000; rss: 95MB	stability index
time: 0.001; rss: 95MB	intrinsic checking
time: 0.000; rss: 95MB	effect checking
time: 0.006; rss: 95MB	match checking
time: 0.018; rss: 97MB	MIR dump
time: 0.003; rss: 103MB	liveness checking
time: 0.022; rss: 103MB	borrow checking
time: 0.006; rss: 103MB	rvalue checking
time: 0.000; rss: 103MB	reachability checking
time: 0.002; rss: 103MB	death checking
time: 0.002; rss: 103MB	stability checking
time: 0.000; rss: 103MB	unused lib feature checking
time: 0.018; rss: 103MB	lint checking
time: 0.000; rss: 103MB	resolving dependency formats
time: 0.002; rss: 103MB	erasing regions from MIR
time: 0.361; rss: 153MB	translation
  time: 0.027; rss: 113MB	llvm function passes [0]
  time: 0.062; rss: 115MB	llvm module passes [0]
  time: 0.568; rss: 136MB	codegen passes [0]
  time: 0.001; rss: 135MB	codegen passes [0]
time: 0.726; rss: 135MB	LLVM passes
time: 0.055; rss: 133MB	linking
done
