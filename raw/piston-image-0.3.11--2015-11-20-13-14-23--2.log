commit 6a6b97cf025b8a1fb92fc48a4dc06611d2970861
Merge: 6827661 c1ad5af
Author: bors <bors@rust-lang.org>
Date:   Fri Nov 20 18:13:10 2015 +0000

    Auto merge of #29822 - petrochenkov:pubexport, r=alexcrichton
    
    This patch implements the plan described in https://internals.rust-lang.org/t/privacy-and-its-interaction-with-docs-lints-and-stability/2880 with one deviation.
    
    It turns out, that rustdoc needs the "directly public" set for its docs inlining logic, so the privacy pass have to produce three sets and not two. Three is arguably too many, so I merged them in one map:
    `public_items/exported_items/reachable_items: NodeSet => access_levels: NodeMap<AccessLevel>`
    
    r? @alexcrichton
rustc: ./piston-image-0.3.11
cargo rustc -- -Ztime-passes
   Compiling image v0.3.11 (file:///root/benchmarks/piston-image-0.3.11)
time: 0.041; rss: 46MB	parsing
time: 0.014; rss: 46MB	configuration 1
time: 0.000; rss: 46MB	recursion limit
time: 0.001; rss: 46MB	gated macro checking
time: 0.000; rss: 46MB	crate injection
time: 0.004; rss: 51MB	macro loading
time: 0.000; rss: 51MB	plugin loading
time: 0.000; rss: 51MB	plugin registration
time: 0.108; rss: 54MB	expansion
time: 0.004; rss: 54MB	complete gated feature checking 1
time: 0.023; rss: 54MB	configuration 2
time: 0.000; rss: 54MB	gated configuration checking
time: 0.012; rss: 54MB	maybe building test harness
time: 0.011; rss: 54MB	prelude injection
time: 0.002; rss: 54MB	checking that all macro invocations are gone
time: 0.000; rss: 54MB	checking for inline asm in case the target doesn't support it
time: 0.003; rss: 54MB	complete gated feature checking 2
time: 0.011; rss: 54MB	assigning node ids
time: 0.012; rss: 65MB	lowering ast -> hir
time: 0.006; rss: 70MB	indexing hir
time: 0.000; rss: 70MB	attribute checking
time: 0.007; rss: 70MB	early lint checks
time: 0.002; rss: 70MB	external crate/lib resolution
time: 0.001; rss: 70MB	language item collection
time: 0.037; rss: 92MB	resolution
time: 0.003; rss: 92MB	lifetime resolution
time: 0.000; rss: 92MB	looking for entry point
time: 0.000; rss: 92MB	looking for plugin registrar
time: 0.011; rss: 98MB	region resolution
time: 0.002; rss: 98MB	loop checking
time: 0.001; rss: 98MB	static item recursion checking
time: 0.012; rss: 102MB	type collecting
time: 0.000; rss: 102MB	variance inference
time: 0.034; rss: 118MB	coherence checking
time: 0.026; rss: 121MB	wf checking (old)
time: 0.050; rss: 123MB	item-types checking
time: 1.621; rss: 152MB	item-bodies checking
time: 0.000; rss: 152MB	drop-impl checking
time: 0.137; rss: 152MB	wf checking (new)
time: 0.073; rss: 154MB	const checking
time: 0.012; rss: 154MB	privacy checking
time: 0.001; rss: 154MB	stability index
time: 0.010; rss: 154MB	intrinsic checking
time: 0.003; rss: 154MB	effect checking
time: 0.025; rss: 154MB	match checking
time: 0.097; rss: 180MB	MIR dump
time: 0.011; rss: 180MB	liveness checking
time: 0.150; rss: 180MB	borrow checking
time: 0.077; rss: 180MB	rvalue checking
time: 0.004; rss: 180MB	reachability checking
time: 0.009; rss: 180MB	death checking
time: 0.008; rss: 180MB	stability checking
time: 0.000; rss: 180MB	unused lib feature checking
time: 0.073; rss: 180MB	lint checking
time: 0.000; rss: 180MB	resolving dependency formats
time: 0.008; rss: 180MB	erasing regions from MIR
time: 2.794; rss: 287MB	translation
  time: 0.099; rss: 167MB	llvm function passes [0]
  time: 0.044; rss: 168MB	llvm module passes [0]
  time: 1.741; rss: 217MB	codegen passes [0]
  time: 0.001; rss: 184MB	codegen passes [0]
time: 2.094; rss: 184MB	LLVM passes
time: 0.152; rss: 185MB	linking
done
