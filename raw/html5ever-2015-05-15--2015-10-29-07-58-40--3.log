commit 427140f771828d5a2fce7a21d97359d2967c3239
Merge: 696cd7c c2277de
Author: bors <bors@rust-lang.org>
Date:   Thu Oct 29 11:14:27 2015 +0000

    Auto merge of #29188 - nikomatsakis:remove-contraction, r=pnkfelix
    
    This fixes #29048 (though I think adding better transactional support would be a better fix for that issue, but that is more difficult). It also simplifies region inference and changes the model to a pure data flow one, as discussed in [this internals thread](https://internals.rust-lang.org/t/rough-thoughts-on-the-impl-of-region-inference-mir-etc/2800). I am not 100% sure though if this PR is the right thing to do -- or at least maybe not at this moment, so thoughts on that would be appreciated.
    
    r? @pnkfelix
    cc @arielb1
rustc: ./html5ever-2015-05-15
cargo rustc -- -Ztime-passes
   Compiling html5ever v0.0.0 (file:///root/benchmarks/html5ever-2015-05-15)
time: 0.018; rss: 39MB	parsing
time: 0.005; rss: 39MB	configuration 1
time: 0.000; rss: 39MB	recursion limit
time: 0.000; rss: 39MB	gated macro checking
time: 0.000; rss: 39MB	crate injection
time: 0.020; rss: 55MB	macro loading
time: 0.001; rss: 56MB	plugin loading
time: 0.000; rss: 56MB	plugin registration
time: 1.000; rss: 71MB	expansion
time: 0.004; rss: 71MB	complete gated feature checking 1
time: 0.026; rss: 71MB	configuration 2
time: 0.000; rss: 71MB	gated configuration checking
time: 0.013; rss: 71MB	maybe building test harness
time: 0.012; rss: 71MB	prelude injection
time: 0.002; rss: 71MB	checking that all macro invocations are gone
time: 0.000; rss: 71MB	checking for inline asm in case the target doesn't support it
time: 0.003; rss: 71MB	complete gated feature checking 2
time: 0.013; rss: 71MB	assigning node ids
time: 0.017; rss: 86MB	lowering ast -> hir
time: 0.007; rss: 90MB	indexing hir
time: 0.000; rss: 90MB	attribute checking
time: 0.010; rss: 90MB	early lint checks
time: 0.003; rss: 90MB	external crate/lib resolution
time: 0.003; rss: 90MB	language item collection
time: 0.033; rss: 108MB	resolution
time: 0.002; rss: 108MB	lifetime resolution
time: 0.000; rss: 108MB	looking for entry point
time: 0.001; rss: 108MB	looking for plugin registrar
time: 0.016; rss: 113MB	region resolution
time: 0.002; rss: 113MB	loop checking
time: 0.002; rss: 113MB	static item recursion checking
time: 0.008; rss: 116MB	type collecting
time: 0.003; rss: 116MB	variance inference
time: 0.038; rss: 132MB	coherence checking
time: 0.007; rss: 132MB	wf checking (old)
time: 0.322; rss: 163MB	item-types checking
time: 0.588; rss: 174MB	item-bodies checking
time: 0.000; rss: 174MB	drop-impl checking
time: 0.027; rss: 174MB	wf checking (new)
time: 0.078; rss: 174MB	const checking
time: 0.012; rss: 174MB	privacy checking
time: 0.001; rss: 174MB	stability index
time: 0.004; rss: 174MB	intrinsic checking
time: 0.003; rss: 174MB	effect checking
time: 0.026; rss: 174MB	match checking
time: 0.094; rss: 193MB	MIR dump
time: 0.014; rss: 182MB	liveness checking
time: 0.098; rss: 181MB	borrow checking
time: 0.039; rss: 181MB	rvalue checking
time: 0.003; rss: 181MB	reachability checking
time: 0.010; rss: 181MB	death checking
time: 0.007; rss: 181MB	stability checking
time: 0.000; rss: 181MB	unused lib feature checking
time: 0.055; rss: 181MB	lint checking
time: 0.000; rss: 181MB	resolving dependency formats
time: 0.475; rss: 228MB	translation
  time: 0.018; rss: 117MB	llvm function passes [0]
  time: 0.007; rss: 118MB	llvm module passes [0]
  time: 0.333; rss: 154MB	codegen passes [0]
  time: 0.001; rss: 129MB	codegen passes [0]
time: 0.415; rss: 129MB	LLVM passes
time: 0.058; rss: 129MB	linking
done
