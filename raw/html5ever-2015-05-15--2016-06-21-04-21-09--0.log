commit 45cde975cb9b5f3ebe1261b5a962c75731e884e4
Merge: 4ba60ab 7279af8
Author: bors <bors@rust-lang.org>
Date:   Mon Jun 20 21:04:48 2016 -0700

    Auto merge of #34189 - eddyb:mir-trans-imm, r=nagisa
    
    trans: generalize immediate temporaries to all MIR locals.
    
    Added `Mir::local_index` which gives you an unified index for `Arg`, `Var`, `Temp` and `ReturnPointer`.
    Also available is `Mir::count_locals` which returns the total number of the above locals.
    This simplifies a lot of the code which can treat all of the local lvalues in the same manner.
    If we had `-> impl Iterator`, I could have added a bunch of useful `Ty` or `Lvalue` iterators for all locals.
    We could of course manually write such iterators as they are needed.
    
    The only place which currently takes advantage of unified locals is trans' alloca elision.
    Currently it's not as good as it could be, due to our usage of `llvm.dbg.declare` in debug mode.
    But passing some arguments and variables as immediates has some effect on release-mode `libsyntax`:
    
    Old trans:
    ```
    time: 11.500; rss: 710MB        translation
    time: 0.002; rss: 710MB assert dep graph
    time: 0.000; rss: 710MB serialize dep graph
      time: 4.410; rss: 628MB       llvm function passes [0]
      time: 84.485; rss: 633MB      llvm module passes [0]
      time: 23.898; rss: 634MB      codegen passes [0]
      time: 0.002; rss: 634MB       codegen passes [0]
    time: 113.408; rss: 634MB       LLVM passes
    ```
    `-Z orbit`, previously:
    ```
    time: 12.588; rss: 723MB        translation
    time: 0.002; rss: 723MB assert dep graph
    time: 0.000; rss: 723MB serialize dep graph
      time: 4.597; rss: 642MB       llvm function passes [0]
      time: 77.347; rss: 646MB      llvm module passes [0]
      time: 24.703; rss: 648MB      codegen passes [0]
      time: 0.002; rss: 615MB       codegen passes [0]
    time: 107.233; rss: 615MB       LLVM passes
    ```
    `-Z orbit`, after this PR:
    ```
    time: 13.820; rss: 672MB        translation
    time: 0.002; rss: 672MB assert dep graph
    time: 0.000; rss: 672MB serialize dep graph
      time: 3.969; rss: 591MB       llvm function passes [0]
      time: 72.294; rss: 595MB      llvm module passes [0]
      time: 24.610; rss: 597MB      codegen passes [0]
      time: 0.002; rss: 597MB       codegen passes [0]
    time: 101.439; rss: 597MB       LLVM passes
    ```
rustc: ./html5ever-2015-05-15
cargo rustc -- -Ztime-passes -Zinput-stats
    Updating registry `https://github.com/rust-lang/crates.io-index`
    Updating git repository `https://github.com/reem/rust-mac`
    Updating git repository `https://github.com/servo/string-cache`
   Compiling rustc-serialize v0.3.19
   Compiling libc v0.2.12
   Compiling phf_shared v0.7.15
   Compiling num-traits v0.1.32
   Compiling void v1.0.2
   Compiling winapi-build v0.1.1
   Compiling lazy_static v0.1.16
   Compiling mac v0.0.2 (https://github.com/reem/rust-mac#6316d3f4)
   Compiling winapi v0.2.7
   Compiling log v0.3.6
   Compiling unreachable v0.1.1
   Compiling debug_unreachable v0.0.6
   Compiling kernel32-sys v0.2.2
   Compiling phf v0.7.15
   Compiling time v0.1.35
   Compiling rand v0.3.14
   Compiling num-integer v0.1.32
   Compiling num-iter v0.1.32
   Compiling num v0.1.32
   Compiling serde v0.6.15
   Compiling phf_generator v0.7.15
   Compiling phf_macros v0.7.15
   Compiling string_cache_shared v0.1.12
   Compiling string_cache v0.1.17
   Compiling html5ever_macros v0.0.0 (file:///root/benchmarks/html5ever-2015-05-15)
Build failed, waiting for other jobs to finish...
makefile:2: recipe for target 'all' failed
done
