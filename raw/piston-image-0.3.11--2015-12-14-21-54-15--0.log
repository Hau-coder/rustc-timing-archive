commit 8f031bf96205ed4cb990c2c7aded84d5ac079254
Merge: 44d9601 ec8ea22
Author: bors <bors@rust-lang.org>
Date:   Tue Dec 15 01:18:01 2015 +0000

    Auto merge of #30105 - faineance:master, r=nrc
    
    Issue: #30058
    Updated for:
     - Stmt
     - BinOp_
     - UnOp
     - UintTy, IntTy and FloatTy
     - Lit
     - Generics
    
    A possible inconsistancy?
    The `Stmt` methods are on the spanned varient:
    ```rust
    pub type Stmt = Spanned<Stmt_>;
    
    impl Stmt {
        pub fn id(s: &Stmt) -> Option<NodeId> {
            match s.node {
              StmtDecl(_, id) => Some(id),
              StmtExpr(_, id) => Some(id),
              StmtSemi(_, id) => Some(id),
              StmtMac(..) => None,
          }
      }
    }
    ```
    Whilst the methods for BinOp are on the non spanned version.
    ````rust
    impl BinOp_ {
        pub fn to_string(op: BinOp_) -> &'static str { ... }
        pub fn lazy(b: BinOp_) -> bool { ... }
    
        pub fn is_shift(b: BinOp_) -> bool { ... }
        pub fn is_comparison(b: BinOp_) -> bool { ... }
        /// Returns `true` if the binary operator takes its arguments by value
        pub fn is_by_value(b: BinOp_) -> bool { ... }
    
    }
    pub type BinOp = Spanned<BinOp_>;
    ````
    r? @Manishearth
rustc: ./piston-image-0.3.11
cargo rustc -- -Ztime-passes
    Updating registry `https://github.com/rust-lang/crates.io-index`
   Compiling winapi-build v0.1.1
   Compiling lzw v0.8.0
   Compiling libc v0.2.2
   Compiling byteorder v0.3.13
   Compiling gcc v0.3.20
   Compiling rustc-serialize v0.3.16
   Compiling color_quant v1.0.0
   Compiling glob v0.2.10
   Compiling advapi32-sys v0.1.2
   Compiling bitflags v0.3.3
   Compiling winapi v0.2.5
   Compiling gif v0.5.1
   Compiling rand v0.3.12
   Compiling miniz-sys v0.1.7
   Compiling flate2 v0.2.11
   Compiling num v0.1.28
   Compiling png v0.3.1
   Compiling enum_primitive v0.0.1
   Compiling image v0.3.11 (file:///root/benchmarks/piston-image-0.3.11)
time: 0.044; rss: 47MB	parsing
time: 0.017; rss: 47MB	configuration 1
time: 0.000; rss: 47MB	recursion limit
time: 0.001; rss: 47MB	gated macro checking
time: 0.000; rss: 47MB	crate injection
time: 0.004; rss: 52MB	macro loading
time: 0.000; rss: 52MB	plugin loading
time: 0.000; rss: 52MB	plugin registration
time: 0.120; rss: 55MB	expansion
time: 0.004; rss: 55MB	complete gated feature checking 1
time: 0.027; rss: 55MB	configuration 2
time: 0.000; rss: 55MB	gated configuration checking
time: 0.013; rss: 55MB	maybe building test harness
time: 0.012; rss: 55MB	prelude injection
time: 0.001; rss: 55MB	checking that all macro invocations are gone
time: 0.000; rss: 55MB	checking for inline asm in case the target doesn't support it
time: 0.003; rss: 55MB	complete gated feature checking 2
time: 0.012; rss: 55MB	assigning node ids
time: 0.021; rss: 69MB	lowering ast -> hir
time: 0.006; rss: 71MB	indexing hir
time: 0.000; rss: 71MB	attribute checking
time: 0.007; rss: 71MB	early lint checks
time: 0.002; rss: 71MB	external crate/lib resolution
time: 0.001; rss: 71MB	language item collection
time: 0.028; rss: 95MB	resolution
time: 0.003; rss: 95MB	lifetime resolution
time: 0.000; rss: 95MB	looking for entry point
time: 0.000; rss: 95MB	looking for plugin registrar
time: 0.010; rss: 99MB	region resolution
time: 0.002; rss: 99MB	loop checking
time: 0.001; rss: 99MB	static item recursion checking
time: 0.012; rss: 103MB	type collecting
time: 0.000; rss: 103MB	variance inference
time: 0.033; rss: 124MB	coherence checking
time: 0.027; rss: 127MB	wf checking (old)
time: 0.052; rss: 129MB	item-types checking
time: 1.652; rss: 164MB	item-bodies checking
time: 0.000; rss: 164MB	drop-impl checking
time: 0.139; rss: 164MB	wf checking (new)
time: 0.074; rss: 166MB	const checking
time: 0.012; rss: 166MB	privacy checking
time: 0.001; rss: 166MB	stability index
time: 0.010; rss: 166MB	intrinsic checking
time: 0.003; rss: 166MB	effect checking
time: 0.025; rss: 166MB	match checking
time: 0.095; rss: 177MB	MIR dump
time: 0.011; rss: 177MB	liveness checking
time: 0.151; rss: 177MB	borrow checking
time: 0.078; rss: 177MB	rvalue checking
time: 0.003; rss: 177MB	reachability checking
time: 0.009; rss: 177MB	death checking
time: 0.008; rss: 177MB	stability checking
time: 0.000; rss: 177MB	unused lib feature checking
time: 0.083; rss: 177MB	lint checking
time: 0.000; rss: 177MB	resolving dependency formats
time: 0.008; rss: 179MB	erasing regions from MIR
time: 2.879; rss: 295MB	translation
  time: 0.098; rss: 179MB	llvm function passes [0]
  time: 0.045; rss: 179MB	llvm module passes [0]
  time: 1.746; rss: 230MB	codegen passes [0]
  time: 0.001; rss: 198MB	codegen passes [0]
time: 2.104; rss: 198MB	LLVM passes
time: 0.155; rss: 198MB	linking
done
