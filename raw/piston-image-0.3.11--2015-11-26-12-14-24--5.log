commit 6ef02eff89e3d2a29eab3346bff393821df6e033
Merge: 6f3becb 43a6deb
Author: bors <bors@rust-lang.org>
Date:   Thu Nov 26 18:20:58 2015 +0000

    Auto merge of #30043 - arielb1:split-metadata, r=nikomatsakis
    
    This improves bootstrap times because of better parallelism - though I need to measure how much - and allows metadata to be modified without triggering a full recompile. This also ensures that metadata handling and the rest of rustc remain decoupled, which is a first step for switching to a new metadata format.
    
    This is a [breaking-change] to all plugin authors because of the following renames:
     * `rustc::plugin` is now `rustc_plugin`
     * `rustc::metadata` is now `rustc_metadata`
     * Most data types from `rustc::metadata`, along with `LOCAL_CRATE`, are now in `rustc::middle::cstore`.
     * The CStore methods were split between the `rustc::middle::CrateStore` trait (and trait object) and the `rustc_metadata::cstore::CStore`, with an `Rc<CrateStore>` stored in the `Session`. The inner `CStore` can be accessed via the inner `Any` bound, but this is deprecated.
    
    r? @nikomatsakis
rustc: ./piston-image-0.3.11
cargo rustc -- -Ztime-passes
   Compiling image v0.3.11 (file:///root/benchmarks/piston-image-0.3.11)
time: 0.041; rss: 45MB	parsing
time: 0.015; rss: 45MB	configuration 1
time: 0.000; rss: 45MB	recursion limit
time: 0.001; rss: 45MB	gated macro checking
time: 0.000; rss: 45MB	crate injection
time: 0.005; rss: 50MB	macro loading
time: 0.000; rss: 50MB	plugin loading
time: 0.000; rss: 50MB	plugin registration
time: 0.108; rss: 54MB	expansion
time: 0.004; rss: 54MB	complete gated feature checking 1
time: 0.022; rss: 54MB	configuration 2
time: 0.000; rss: 54MB	gated configuration checking
time: 0.012; rss: 54MB	maybe building test harness
time: 0.011; rss: 54MB	prelude injection
time: 0.001; rss: 54MB	checking that all macro invocations are gone
time: 0.000; rss: 54MB	checking for inline asm in case the target doesn't support it
time: 0.002; rss: 54MB	complete gated feature checking 2
time: 0.011; rss: 54MB	assigning node ids
time: 0.013; rss: 65MB	lowering ast -> hir
time: 0.006; rss: 69MB	indexing hir
time: 0.000; rss: 69MB	attribute checking
time: 0.007; rss: 69MB	early lint checks
time: 0.002; rss: 69MB	external crate/lib resolution
time: 0.001; rss: 69MB	language item collection
time: 0.037; rss: 91MB	resolution
time: 0.003; rss: 91MB	lifetime resolution
time: 0.000; rss: 91MB	looking for entry point
time: 0.000; rss: 91MB	looking for plugin registrar
time: 0.010; rss: 97MB	region resolution
time: 0.002; rss: 97MB	loop checking
time: 0.001; rss: 97MB	static item recursion checking
time: 0.012; rss: 101MB	type collecting
time: 0.000; rss: 101MB	variance inference
time: 0.034; rss: 118MB	coherence checking
time: 0.026; rss: 120MB	wf checking (old)
time: 0.051; rss: 122MB	item-types checking
time: 1.597; rss: 154MB	item-bodies checking
time: 0.000; rss: 154MB	drop-impl checking
time: 0.133; rss: 154MB	wf checking (new)
time: 0.072; rss: 157MB	const checking
time: 0.012; rss: 157MB	privacy checking
time: 0.001; rss: 157MB	stability index
time: 0.010; rss: 157MB	intrinsic checking
time: 0.003; rss: 157MB	effect checking
time: 0.025; rss: 157MB	match checking
time: 0.092; rss: 169MB	MIR dump
time: 0.011; rss: 169MB	liveness checking
time: 0.149; rss: 169MB	borrow checking
time: 0.076; rss: 169MB	rvalue checking
time: 0.003; rss: 169MB	reachability checking
time: 0.009; rss: 169MB	death checking
time: 0.008; rss: 169MB	stability checking
time: 0.000; rss: 169MB	unused lib feature checking
time: 0.073; rss: 169MB	lint checking
time: 0.000; rss: 169MB	resolving dependency formats
time: 0.008; rss: 169MB	erasing regions from MIR
time: 2.748; rss: 284MB	translation
  time: 0.097; rss: 168MB	llvm function passes [0]
  time: 0.043; rss: 168MB	llvm module passes [0]
  time: 1.733; rss: 217MB	codegen passes [0]
  time: 0.001; rss: 208MB	codegen passes [0]
time: 2.079; rss: 185MB	LLVM passes
time: 0.153; rss: 185MB	linking
done
