commit 427140f771828d5a2fce7a21d97359d2967c3239
Merge: 696cd7c c2277de
Author: bors <bors@rust-lang.org>
Date:   Thu Oct 29 11:14:27 2015 +0000

    Auto merge of #29188 - nikomatsakis:remove-contraction, r=pnkfelix
    
    This fixes #29048 (though I think adding better transactional support would be a better fix for that issue, but that is more difficult). It also simplifies region inference and changes the model to a pure data flow one, as discussed in [this internals thread](https://internals.rust-lang.org/t/rough-thoughts-on-the-impl-of-region-inference-mir-etc/2800). I am not 100% sure though if this PR is the right thing to do -- or at least maybe not at this moment, so thoughts on that would be appreciated.
    
    r? @pnkfelix
    cc @arielb1
rustc: ./hyper.0.5.0
cargo rustc -- -Ztime-passes
   Compiling hyper v0.5.0 (file:///root/benchmarks/hyper.0.5.0)
time: 0.027; rss: 38MB	parsing
time: 0.009; rss: 41MB	configuration 1
time: 0.000; rss: 41MB	recursion limit
time: 0.000; rss: 41MB	gated macro checking
time: 0.000; rss: 41MB	crate injection
time: 0.004; rss: 46MB	macro loading
time: 0.000; rss: 46MB	plugin loading
time: 0.000; rss: 46MB	plugin registration
time: 0.167; rss: 56MB	expansion
time: 0.005; rss: 56MB	complete gated feature checking 1
time: 0.029; rss: 56MB	configuration 2
time: 0.000; rss: 56MB	gated configuration checking
time: 0.013; rss: 56MB	maybe building test harness
time: 0.009; rss: 56MB	prelude injection
time: 0.001; rss: 56MB	checking that all macro invocations are gone
time: 0.000; rss: 56MB	checking for inline asm in case the target doesn't support it
time: 0.002; rss: 56MB	complete gated feature checking 2
time: 0.010; rss: 56MB	assigning node ids
time: 0.007; rss: 60MB	lowering ast -> hir
time: 0.004; rss: 62MB	indexing hir
time: 0.000; rss: 62MB	attribute checking
time: 0.005; rss: 62MB	early lint checks
time: 0.003; rss: 62MB	external crate/lib resolution
time: 0.002; rss: 62MB	language item collection
time: 0.030; rss: 89MB	resolution
time: 0.002; rss: 90MB	lifetime resolution
time: 0.000; rss: 90MB	looking for entry point
time: 0.001; rss: 90MB	looking for plugin registrar
time: 0.005; rss: 90MB	region resolution
time: 0.001; rss: 90MB	loop checking
time: 0.001; rss: 91MB	static item recursion checking
time: 0.013; rss: 94MB	type collecting
time: 0.002; rss: 94MB	variance inference
time: 0.043; rss: 106MB	coherence checking
time: 0.027; rss: 108MB	wf checking (old)
time: 0.025; rss: 113MB	item-types checking
time: 0.506; rss: 127MB	item-bodies checking
time: 0.000; rss: 127MB	drop-impl checking
time: 0.085; rss: 129MB	wf checking (new)
time: 0.049; rss: 129MB	const checking
time: 0.008; rss: 129MB	privacy checking
time: 0.000; rss: 129MB	stability index
time: 0.004; rss: 129MB	intrinsic checking
time: 0.002; rss: 129MB	effect checking
time: 0.012; rss: 129MB	match checking
time: 0.057; rss: 144MB	MIR dump
time: 0.006; rss: 136MB	liveness checking
time: 0.074; rss: 136MB	borrow checking
time: 0.052; rss: 136MB	rvalue checking
time: 0.003; rss: 136MB	reachability checking
time: 0.006; rss: 136MB	death checking
time: 0.005; rss: 136MB	stability checking
time: 0.000; rss: 136MB	unused lib feature checking
time: 0.041; rss: 138MB	lint checking
time: 0.000; rss: 138MB	resolving dependency formats
time: 1.453; rss: 273MB	translation
  time: 0.100; rss: 173MB	llvm function passes [0]
  time: 0.052; rss: 173MB	llvm module passes [0]
  time: 1.678; rss: 217MB	codegen passes [0]
  time: 0.001; rss: 175MB	codegen passes [0]
time: 2.055; rss: 175MB	LLVM passes
time: 0.177; rss: 175MB	linking
done
