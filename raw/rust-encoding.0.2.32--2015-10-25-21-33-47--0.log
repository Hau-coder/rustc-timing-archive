commit c3db627cbf354ba02311fb0c523e365e8d017b00
Merge: f7bde94 351efd5
Author: bors <bors@rust-lang.org>
Date:   Mon Oct 26 00:19:51 2015 +0000

    Auto merge of #29296 - zazdxscf:compiletest_noargs_show_help, r=alexcrichton
    
    instead of this panic:
    ```
    thread '<main>' panicked at 'index out of bounds: the len is 1 but the
    index is 1', src/libcollections/vec.rs:1110
    ```
    
    It still panics, just like `-h` does, so it should be okay in this
    regard.
rustc: ./rust-encoding.0.2.32
cargo rustc -- -Ztime-passes
    Updating registry `https://github.com/rust-lang/crates.io-index`
   Compiling encoding_index_tests v0.1.4 (file:///root/benchmarks/rust-encoding.0.2.32)
   Compiling encoding-index-tradchinese v1.20141219.5 (file:///root/benchmarks/rust-encoding.0.2.32)
   Compiling encoding-index-japanese v1.20141219.5 (file:///root/benchmarks/rust-encoding.0.2.32)
   Compiling encoding-index-korean v1.20141219.5 (file:///root/benchmarks/rust-encoding.0.2.32)
   Compiling encoding-index-singlebyte v1.20141219.5 (file:///root/benchmarks/rust-encoding.0.2.32)
   Compiling encoding-index-simpchinese v1.20141219.5 (file:///root/benchmarks/rust-encoding.0.2.32)
   Compiling encoding v0.2.32 (file:///root/benchmarks/rust-encoding.0.2.32)
time: 0.020; rss: 36MB	parsing
time: 0.006; rss: 39MB	configuration 1
time: 0.000; rss: 39MB	recursion limit
time: 0.000; rss: 39MB	gated macro checking
time: 0.000; rss: 39MB	crate injection
time: 0.003; rss: 42MB	macro loading
time: 0.000; rss: 42MB	plugin loading
time: 0.000; rss: 42MB	plugin registration
time: 0.041; rss: 43MB	expansion
time: 0.001; rss: 43MB	complete gated feature checking 1
time: 0.007; rss: 43MB	configuration 2
time: 0.000; rss: 43MB	gated configuration checking
time: 0.003; rss: 43MB	maybe building test harness
time: 0.003; rss: 43MB	prelude injection
time: 0.000; rss: 43MB	checking that all macro invocations are gone
time: 0.000; rss: 43MB	checking for inline asm in case the target doesn't support it
time: 0.000; rss: 43MB	complete gated feature checking 2
time: 0.003; rss: 43MB	assigning node ids
time: 0.003; rss: 47MB	lowering ast -> hir
time: 0.002; rss: 49MB	indexing hir
time: 0.000; rss: 49MB	attribute checking
time: 0.002; rss: 49MB	early lint checks
time: 0.001; rss: 49MB	external crate/lib resolution
time: 0.000; rss: 50MB	language item collection
time: 0.010; rss: 56MB	resolution
time: 0.000; rss: 56MB	lifetime resolution
time: 0.000; rss: 56MB	looking for entry point
time: 0.000; rss: 56MB	looking for plugin registrar
time: 0.002; rss: 56MB	region resolution
time: 0.000; rss: 56MB	loop checking
time: 0.000; rss: 56MB	static item recursion checking
time: 0.005; rss: 60MB	type collecting
time: 0.000; rss: 60MB	variance inference
time: 0.020; rss: 76MB	coherence checking
time: 0.006; rss: 76MB	wf checking (old)
time: 0.012; rss: 76MB	item-types checking
time: 0.199; rss: 89MB	item-bodies checking
time: 0.000; rss: 89MB	drop-impl checking
time: 0.017; rss: 89MB	wf checking (new)
time: 0.012; rss: 89MB	const checking
time: 0.002; rss: 89MB	privacy checking
time: 0.000; rss: 89MB	stability index
time: 0.001; rss: 89MB	intrinsic checking
time: 0.000; rss: 89MB	effect checking
time: 0.006; rss: 89MB	match checking
time: 0.037; rss: 104MB	MIR dump
time: 0.003; rss: 104MB	liveness checking
time: 0.023; rss: 104MB	borrow checking
time: 0.008; rss: 104MB	rvalue checking
time: 0.000; rss: 104MB	reachability checking
time: 0.002; rss: 104MB	death checking
time: 0.001; rss: 104MB	stability checking
time: 0.000; rss: 104MB	unused lib feature checking
time: 0.016; rss: 104MB	lint checking
time: 0.000; rss: 104MB	resolving dependency formats
time: 0.338; rss: 157MB	translation
  time: 0.027; rss: 106MB	llvm function passes
  time: 0.061; rss: 108MB	llvm module passes
  time: 0.573; rss: 130MB	codegen passes
  time: 0.000; rss: 128MB	codegen passes
time: 0.731; rss: 128MB	LLVM passes
time: 0.054; rss: 127MB	linking
done
