commit 20a6938c08f32bdf5db474866be1dce3952fd9d4
Merge: be91042 42c01d7
Author: bors <bors@rust-lang.org>
Date:   Fri Oct 16 23:28:14 2015 +0000

    Auto merge of #28683 - GuillaumeGomez:rustdoc_error, r=alexcrichton
    
    This PR solves the following issues (or at least help users to understand the problem):
    
    ```Rust
    #![crate_name = "b"]
    #![crate_type = "rlib"]
    
    pub fn his_function_has_a_very_long_name_and_should_make_cargo_doc_explodes_because_it_will_want_to_make_a_filename_with_it_in_excess_of_the_max_filename_length_for_most_filesystem_this_is_not_yet_long_enough_i_need_moreis_function_has_a_very_long_name_and_should_make_cargo_doc_explodes_because_it_will_want_to_make_a_filename_with_it_in_excess_of_the_max_filename_length_for_most_filesystem_this_is_not_yet_long_enough_i_need_more_() {}
    ```
    
    ```Rust
    #![crate_name = "b"]
    #![crate_type = "rlib"]
    
    pub struct his_function_has_a_very_long_name_and_should_make_cargo_doc_explodes_because_it_will_want_to_make_a_filename_with_it_in_excess_of_the_max_filename_length_for_most_filesystem_this_is_not_yet_long_enough_i_need_moreis_function_has_a_very_long_name_and_should_make_cargo_doc_explodes_because_it_will_want_to_make_a_filename_with_it_in_excess_of_the_max_filename_length_for_most_filesystem_this_is_not_yet_long_enough_i_need_more_;
    ```
    
    For the maximum filename length chosen, @gkoz gave me [this link](http://unix.stackexchange.com/a/32834).
rustc: ./helloworld
/root/rust/x86_64-unknown-linux-gnu/stage2/bin/rustc -Ztime-passes hello.rs
time: 0.000; rss: 29MB	parsing
time: 0.000; rss: 29MB	configuration 1
time: 0.000; rss: 29MB	recursion limit
time: 0.000; rss: 29MB	gated macro checking
time: 0.000; rss: 29MB	crate injection
time: 0.002; rss: 35MB	macro loading
time: 0.000; rss: 35MB	plugin loading
time: 0.000; rss: 35MB	plugin registration
time: 0.001; rss: 35MB	expansion
time: 0.000; rss: 35MB	complete gated feature checking 1
time: 0.000; rss: 35MB	configuration 2
time: 0.000; rss: 35MB	gated configuration checking
time: 0.000; rss: 35MB	maybe building test harness
time: 0.000; rss: 35MB	prelude injection
time: 0.000; rss: 35MB	checking that all macro invocations are gone
time: 0.000; rss: 35MB	checking for inline asm in case the target doesn't support it
time: 0.000; rss: 35MB	complete gated feature checking 2
time: 0.000; rss: 35MB	assigning node ids
time: 0.000; rss: 35MB	lowering ast -> hir
time: 0.000; rss: 35MB	indexing hir
time: 0.000; rss: 35MB	attribute checking
time: 0.000; rss: 35MB	early lint checks
time: 0.001; rss: 39MB	external crate/lib resolution
time: 0.000; rss: 39MB	language item collection
time: 0.001; rss: 43MB	resolution
time: 0.000; rss: 43MB	lifetime resolution
time: 0.000; rss: 43MB	looking for entry point
time: 0.000; rss: 43MB	looking for plugin registrar
time: 0.000; rss: 43MB	region resolution
time: 0.000; rss: 43MB	loop checking
time: 0.000; rss: 43MB	static item recursion checking
time: 0.000; rss: 43MB	type collecting
time: 0.000; rss: 43MB	variance inference
time: 0.004; rss: 51MB	coherence checking
time: 0.000; rss: 51MB	wf checking (old)
time: 0.000; rss: 51MB	item-types checking
time: 0.000; rss: 51MB	item-bodies checking
time: 0.000; rss: 51MB	drop-impl checking
time: 0.000; rss: 51MB	wf checking (new)
time: 0.000; rss: 51MB	const checking
time: 0.000; rss: 51MB	privacy checking
time: 0.000; rss: 51MB	stability index
time: 0.000; rss: 51MB	intrinsic checking
time: 0.000; rss: 51MB	effect checking
time: 0.000; rss: 51MB	match checking
time: 0.000; rss: 51MB	MIR dump
time: 0.000; rss: 51MB	liveness checking
time: 0.000; rss: 51MB	borrow checking
time: 0.000; rss: 51MB	rvalue checking
time: 0.000; rss: 51MB	reachability checking
time: 0.000; rss: 51MB	death checking
time: 0.000; rss: 51MB	stability checking
time: 0.000; rss: 51MB	unused lib feature checking
time: 0.000; rss: 51MB	lint checking
time: 0.001; rss: 51MB	resolving dependency formats
time: 0.004; rss: 62MB	translation
  time: 0.000; rss: 64MB	llvm function passes
  time: 0.000; rss: 64MB	llvm module passes
  time: 0.001; rss: 65MB	codegen passes
  time: 0.000; rss: 65MB	codegen passes
time: 0.002; rss: 65MB	LLVM passes
  time: 0.089; rss: 74MB	running linker
time: 0.089; rss: 74MB	linking
done
