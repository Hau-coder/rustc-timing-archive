commit 4005d437653fc09b47cd3176bb65323c52cccd47
Merge: 56a1f51 d6eb063
Author: bors <bors@rust-lang.org>
Date:   Wed Dec 9 04:22:05 2015 +0000

    Auto merge of #30245 - Aatch:dynamic-align-dst, r=pnkfelix
    
    Fixes #26403
    
    This adjusts the pointer, if needed, to the correct alignment by using the alignment information in the vtable.
    
    Handling zero might not be necessary, as it shouldn't actually occur. I've left it as it's own commit so it can be removed fairly easily if people don't think it's worth doing. The way it's handled though means that there shouldn't be much impact on performance.
rustc: ./regex.0.1.30
cargo rustc -- -Ztime-passes
   Compiling regex v0.1.30 (file:///root/benchmarks/regex.0.1.30)
time: 0.055; rss: 46MB	parsing
time: 0.011; rss: 46MB	configuration 1
time: 0.000; rss: 46MB	recursion limit
time: 0.001; rss: 46MB	gated macro checking
time: 0.000; rss: 46MB	crate injection
time: 0.003; rss: 50MB	macro loading
time: 0.000; rss: 50MB	plugin loading
time: 0.000; rss: 50MB	plugin registration
time: 0.059; rss: 52MB	expansion
time: 0.001; rss: 52MB	complete gated feature checking 1
time: 0.013; rss: 52MB	configuration 2
time: 0.000; rss: 52MB	gated configuration checking
time: 0.006; rss: 52MB	maybe building test harness
time: 0.006; rss: 52MB	prelude injection
time: 0.001; rss: 52MB	checking that all macro invocations are gone
time: 0.000; rss: 52MB	checking for inline asm in case the target doesn't support it
time: 0.001; rss: 52MB	complete gated feature checking 2
time: 0.007; rss: 52MB	assigning node ids
time: 0.009; rss: 60MB	lowering ast -> hir
time: 0.002; rss: 62MB	indexing hir
time: 0.000; rss: 62MB	attribute checking
time: 0.004; rss: 62MB	early lint checks
time: 0.001; rss: 62MB	external crate/lib resolution
time: 0.001; rss: 62MB	language item collection
time: 0.009; rss: 69MB	resolution
time: 0.001; rss: 69MB	lifetime resolution
time: 0.000; rss: 69MB	looking for entry point
time: 0.000; rss: 69MB	looking for plugin registrar
time: 0.005; rss: 73MB	region resolution
time: 0.001; rss: 73MB	loop checking
time: 0.001; rss: 73MB	static item recursion checking
time: 0.004; rss: 77MB	type collecting
time: 0.000; rss: 77MB	variance inference
time: 0.022; rss: 96MB	coherence checking
time: 0.005; rss: 96MB	wf checking (old)
time: 0.089; rss: 100MB	item-types checking
time: 0.207; rss: 108MB	item-bodies checking
time: 0.000; rss: 108MB	drop-impl checking
time: 0.010; rss: 108MB	wf checking (new)
time: 0.026; rss: 111MB	const checking
time: 0.004; rss: 111MB	privacy checking
time: 0.001; rss: 111MB	stability index
time: 0.001; rss: 111MB	intrinsic checking
time: 0.001; rss: 111MB	effect checking
time: 0.003; rss: 111MB	match checking
time: 0.015; rss: 116MB	MIR dump
time: 0.003; rss: 118MB	liveness checking
time: 0.020; rss: 118MB	borrow checking
time: 0.007; rss: 118MB	rvalue checking
time: 0.000; rss: 118MB	reachability checking
time: 0.002; rss: 118MB	death checking
time: 0.002; rss: 118MB	stability checking
time: 0.000; rss: 118MB	unused lib feature checking
time: 0.027; rss: 118MB	lint checking
time: 0.000; rss: 118MB	resolving dependency formats
time: 0.002; rss: 118MB	erasing regions from MIR
time: 0.657; rss: 182MB	translation
  time: 0.039; rss: 114MB	llvm function passes [0]
  time: 0.021; rss: 115MB	llvm module passes [0]
  time: 0.628; rss: 141MB	codegen passes [0]
  time: 0.001; rss: 128MB	codegen passes [0]
time: 0.767; rss: 128MB	LLVM passes
time: 0.067; rss: 126MB	linking
done
