commit 4aec7c7d618c44b5ed1b336a211507c105b644ab
Merge: 3e139dc 93e419c
Author: bors <bors@rust-lang.org>
Date:   Wed Oct 21 07:45:48 2015 +0000

    Auto merge of #29055 - alexcrichton:tiers, r=steveklabnik
    
    This commit expands the "supported platforms" section of the book to include
    documentation on the tiers that Rust currently has as well as organizing all
    supported platforms into these various tiers. Infrastructure improvements over
    the next few months are likely to change the location of may of these platforms
    over, but for now this should faithfully represent what we've got today!
rustc: ./rust-encoding.0.2.32
cargo rustc -- -Ztime-passes
    Updating registry `https://github.com/rust-lang/crates.io-index`
   Compiling encoding_index_tests v0.1.4 (file:///root/benchmarks/rust-encoding.0.2.32)
   Compiling encoding-index-tradchinese v1.20141219.5 (file:///root/benchmarks/rust-encoding.0.2.32)
   Compiling encoding-index-singlebyte v1.20141219.5 (file:///root/benchmarks/rust-encoding.0.2.32)
   Compiling encoding-index-japanese v1.20141219.5 (file:///root/benchmarks/rust-encoding.0.2.32)
   Compiling encoding-index-simpchinese v1.20141219.5 (file:///root/benchmarks/rust-encoding.0.2.32)
   Compiling encoding-index-korean v1.20141219.5 (file:///root/benchmarks/rust-encoding.0.2.32)
   Compiling encoding v0.2.32 (file:///root/benchmarks/rust-encoding.0.2.32)
time: 0.020; rss: 35MB	parsing
time: 0.006; rss: 38MB	configuration 1
time: 0.000; rss: 38MB	recursion limit
time: 0.000; rss: 38MB	gated macro checking
time: 0.000; rss: 38MB	crate injection
time: 0.003; rss: 42MB	macro loading
time: 0.000; rss: 42MB	plugin loading
time: 0.000; rss: 42MB	plugin registration
time: 0.041; rss: 43MB	expansion
time: 0.001; rss: 43MB	complete gated feature checking 1
time: 0.007; rss: 43MB	configuration 2
time: 0.000; rss: 43MB	gated configuration checking
time: 0.003; rss: 43MB	maybe building test harness
time: 0.003; rss: 43MB	prelude injection
time: 0.000; rss: 43MB	checking that all macro invocations are gone
time: 0.000; rss: 43MB	checking for inline asm in case the target doesn't support it
time: 0.000; rss: 43MB	complete gated feature checking 2
time: 0.003; rss: 43MB	assigning node ids
time: 0.003; rss: 47MB	lowering ast -> hir
time: 0.002; rss: 49MB	indexing hir
time: 0.000; rss: 49MB	attribute checking
time: 0.002; rss: 49MB	early lint checks
time: 0.001; rss: 49MB	external crate/lib resolution
time: 0.000; rss: 49MB	language item collection
time: 0.010; rss: 56MB	resolution
time: 0.000; rss: 56MB	lifetime resolution
time: 0.000; rss: 56MB	looking for entry point
time: 0.000; rss: 56MB	looking for plugin registrar
time: 0.002; rss: 56MB	region resolution
time: 0.000; rss: 56MB	loop checking
time: 0.000; rss: 56MB	static item recursion checking
time: 0.005; rss: 60MB	type collecting
time: 0.000; rss: 60MB	variance inference
time: 0.019; rss: 77MB	coherence checking
time: 0.006; rss: 77MB	wf checking (old)
time: 0.012; rss: 77MB	item-types checking
time: 0.199; rss: 89MB	item-bodies checking
time: 0.000; rss: 89MB	drop-impl checking
time: 0.017; rss: 89MB	wf checking (new)
time: 0.012; rss: 89MB	const checking
time: 0.002; rss: 89MB	privacy checking
time: 0.000; rss: 89MB	stability index
time: 0.001; rss: 89MB	intrinsic checking
time: 0.000; rss: 89MB	effect checking
time: 0.006; rss: 89MB	match checking
time: 0.037; rss: 103MB	MIR dump
time: 0.003; rss: 103MB	liveness checking
time: 0.023; rss: 104MB	borrow checking
time: 0.008; rss: 103MB	rvalue checking
time: 0.000; rss: 103MB	reachability checking
time: 0.002; rss: 103MB	death checking
time: 0.001; rss: 103MB	stability checking
time: 0.000; rss: 103MB	unused lib feature checking
time: 0.015; rss: 103MB	lint checking
time: 0.000; rss: 103MB	resolving dependency formats
time: 0.341; rss: 154MB	translation
  time: 0.027; rss: 105MB	llvm function passes
  time: 0.062; rss: 107MB	llvm module passes
  time: 0.575; rss: 128MB	codegen passes
  time: 0.000; rss: 126MB	codegen passes
time: 0.733; rss: 126MB	LLVM passes
time: 0.055; rss: 125MB	linking
done
