commit 7ee4e9e7ec59c7db2d76fcb53719e5b31b43e499
Merge: 9a85566 044a8fe
Author: bors <bors@rust-lang.org>
Date:   Fri Oct 23 16:53:40 2015 +0000

    Auto merge of #29243 - skeleten:issue-29184, r=alexcrichton
    
    Fixes #29184
    
    This adds an error message for the use of the reserved `typeof` keyword, instead of reporting an ICE.
    Also adds a `compile-fail` test.
    
    I chose to add a `span_err` instead of removing to parser code, as to preserve the reservation of `typeof`.
rustc: ./html5ever-2015-05-15
cargo rustc -- -Ztime-passes
    Updating git repository `https://github.com/servo/string-cache`
    Updating registry `https://github.com/rust-lang/crates.io-index`
    Updating git repository `https://github.com/reem/rust-mac`
   Compiling mac v0.0.2 (https://github.com/reem/rust-mac#6316d3f4)
   Compiling debug-builders v0.1.0
   Compiling void v0.0.5
   Compiling libc v0.1.10
   Compiling rustc-serialize v0.3.16
   Compiling lazy_static v0.1.15
   Compiling phf_shared v0.7.5
   Compiling mac v0.0.2
   Compiling winapi v0.2.4
   Compiling winapi-build v0.1.1
   Compiling unreachable v0.0.2
   Compiling debug_unreachable v0.0.6
   Compiling kernel32-sys v0.1.4
   Compiling advapi32-sys v0.1.2
   Compiling log v0.3.2
   Compiling phf v0.7.5
   Compiling time v0.1.33
   Compiling rand v0.3.11
   Compiling phf_generator v0.7.5
   Compiling phf_macros v0.7.5
   Compiling string_cache_shared v0.1.7 (https://github.com/servo/string-cache#3abf873e)
   Compiling string_cache_plugin v0.1.7 (https://github.com/servo/string-cache#3abf873e)
   Compiling string_cache v0.1.13 (https://github.com/servo/string-cache#3abf873e)
   Compiling html5ever_macros v0.0.0 (file:///root/benchmarks/html5ever-2015-05-15)
   Compiling num v0.1.27
   Compiling serde v0.6.1
   Compiling html5ever v0.0.0 (file:///root/benchmarks/html5ever-2015-05-15)
time: 0.018; rss: 39MB	parsing
time: 0.005; rss: 39MB	configuration 1
time: 0.000; rss: 39MB	recursion limit
time: 0.000; rss: 39MB	gated macro checking
time: 0.000; rss: 39MB	crate injection
time: 0.021; rss: 55MB	macro loading
time: 0.001; rss: 56MB	plugin loading
time: 0.000; rss: 56MB	plugin registration
time: 1.119; rss: 72MB	expansion
time: 0.004; rss: 72MB	complete gated feature checking 1
time: 0.026; rss: 72MB	configuration 2
time: 0.000; rss: 72MB	gated configuration checking
time: 0.014; rss: 72MB	maybe building test harness
time: 0.013; rss: 72MB	prelude injection
time: 0.002; rss: 72MB	checking that all macro invocations are gone
time: 0.000; rss: 72MB	checking for inline asm in case the target doesn't support it
time: 0.003; rss: 72MB	complete gated feature checking 2
time: 0.013; rss: 72MB	assigning node ids
time: 0.017; rss: 86MB	lowering ast -> hir
time: 0.007; rss: 89MB	indexing hir
time: 0.000; rss: 89MB	attribute checking
time: 0.010; rss: 89MB	early lint checks
time: 0.004; rss: 89MB	external crate/lib resolution
time: 0.003; rss: 89MB	language item collection
time: 0.033; rss: 105MB	resolution
time: 0.002; rss: 105MB	lifetime resolution
time: 0.000; rss: 105MB	looking for entry point
time: 0.001; rss: 105MB	looking for plugin registrar
time: 0.016; rss: 111MB	region resolution
time: 0.002; rss: 111MB	loop checking
time: 0.002; rss: 111MB	static item recursion checking
time: 0.008; rss: 112MB	type collecting
time: 0.003; rss: 112MB	variance inference
time: 0.038; rss: 131MB	coherence checking
time: 0.007; rss: 131MB	wf checking (old)
time: 0.389; rss: 158MB	item-types checking
time: 0.610; rss: 171MB	item-bodies checking
time: 0.000; rss: 171MB	drop-impl checking
time: 0.027; rss: 171MB	wf checking (new)
time: 0.080; rss: 171MB	const checking
time: 0.013; rss: 171MB	privacy checking
time: 0.001; rss: 171MB	stability index
time: 0.004; rss: 171MB	intrinsic checking
time: 0.003; rss: 171MB	effect checking
time: 0.027; rss: 171MB	match checking
time: 0.101; rss: 190MB	MIR dump
time: 0.033; rss: 193MB	liveness checking
time: 0.105; rss: 196MB	borrow checking
time: 0.041; rss: 196MB	rvalue checking
time: 0.003; rss: 196MB	reachability checking
time: 0.010; rss: 196MB	death checking
time: 0.007; rss: 196MB	stability checking
time: 0.000; rss: 196MB	unused lib feature checking
time: 0.055; rss: 196MB	lint checking
time: 0.000; rss: 196MB	resolving dependency formats
time: 0.492; rss: 241MB	translation
  time: 0.018; rss: 115MB	llvm function passes
  time: 0.006; rss: 116MB	llvm module passes
  time: 0.335; rss: 152MB	codegen passes
  time: 0.001; rss: 127MB	codegen passes
time: 0.415; rss: 127MB	LLVM passes
time: 0.058; rss: 127MB	linking
done
