commit 9c2489be0c27954a0afeb053e3997bb82cfb3d95
Merge: 6307719 4168e02
Author: bors <bors@rust-lang.org>
Date:   Sun Nov 1 23:22:22 2015 +0000

    Auto merge of #29507 - fhartwig:result-expect, r=Manishearth
    
    This fixes part of #29506
    These instances of `ok().expect()` have no benefit over using `Result`'s `expect` directly.
rustc: ./piston-image-0.3.11
cargo rustc -- -Ztime-passes
    Updating registry `https://github.com/rust-lang/crates.io-index`
   Compiling glob v0.2.10
   Compiling winapi v0.2.4
   Compiling libc v0.1.12
   Compiling lzw v0.8.0
   Compiling color_quant v1.0.0
   Compiling winapi-build v0.1.1
   Compiling byteorder v0.3.13
   Compiling rustc-serialize v0.3.16
   Compiling gcc v0.3.19
   Compiling advapi32-sys v0.1.2
   Compiling bitflags v0.3.2
   Compiling gif v0.5.1
   Compiling rand v0.3.11
   Compiling miniz-sys v0.1.6
   Compiling flate2 v0.2.9
   Compiling num v0.1.27
   Compiling png v0.3.1
   Compiling enum_primitive v0.0.1
   Compiling image v0.3.11 (file:///root/benchmarks/piston-image-0.3.11)
time: 0.058; rss: 37MB	parsing
time: 0.015; rss: 38MB	configuration 1
time: 0.000; rss: 38MB	recursion limit
time: 0.001; rss: 38MB	gated macro checking
time: 0.000; rss: 38MB	crate injection
time: 0.004; rss: 42MB	macro loading
time: 0.000; rss: 42MB	plugin loading
time: 0.000; rss: 42MB	plugin registration
time: 0.121; rss: 46MB	expansion
time: 0.004; rss: 46MB	complete gated feature checking 1
time: 0.022; rss: 46MB	configuration 2
time: 0.000; rss: 46MB	gated configuration checking
time: 0.011; rss: 46MB	maybe building test harness
time: 0.011; rss: 46MB	prelude injection
time: 0.001; rss: 46MB	checking that all macro invocations are gone
time: 0.000; rss: 46MB	checking for inline asm in case the target doesn't support it
time: 0.003; rss: 46MB	complete gated feature checking 2
time: 0.011; rss: 46MB	assigning node ids
time: 0.024; rss: 57MB	lowering ast -> hir
time: 0.012; rss: 60MB	indexing hir
time: 0.000; rss: 60MB	attribute checking
time: 0.008; rss: 60MB	early lint checks
time: 0.004; rss: 61MB	external crate/lib resolution
time: 0.003; rss: 61MB	language item collection
time: 0.053; rss: 83MB	resolution
time: 0.003; rss: 82MB	lifetime resolution
time: 0.000; rss: 82MB	looking for entry point
time: 0.001; rss: 82MB	looking for plugin registrar
time: 0.018; rss: 88MB	region resolution
time: 0.002; rss: 88MB	loop checking
time: 0.002; rss: 88MB	static item recursion checking
time: 0.013; rss: 91MB	type collecting
time: 0.003; rss: 91MB	variance inference
time: 0.048; rss: 108MB	coherence checking
time: 0.028; rss: 109MB	wf checking (old)
time: 0.051; rss: 111MB	item-types checking
time: 1.664; rss: 141MB	item-bodies checking
time: 0.000; rss: 141MB	drop-impl checking
time: 0.135; rss: 141MB	wf checking (new)
time: 0.083; rss: 141MB	const checking
time: 0.013; rss: 141MB	privacy checking
time: 0.000; rss: 141MB	stability index
time: 0.010; rss: 141MB	intrinsic checking
time: 0.003; rss: 141MB	effect checking
time: 0.025; rss: 141MB	match checking
time: 0.148; rss: 167MB	MIR dump
time: 0.013; rss: 150MB	liveness checking
time: 0.164; rss: 150MB	borrow checking
time: 0.098; rss: 150MB	rvalue checking
time: 0.004; rss: 150MB	reachability checking
time: 0.011; rss: 150MB	death checking
time: 0.008; rss: 150MB	stability checking
time: 0.000; rss: 150MB	unused lib feature checking
time: 0.075; rss: 150MB	lint checking
time: 0.000; rss: 150MB	resolving dependency formats
time: 3.012; rss: 268MB	translation
  time: 0.096; rss: 158MB	llvm function passes [0]
  time: 0.044; rss: 159MB	llvm module passes [0]
  time: 1.728; rss: 208MB	codegen passes [0]
  time: 0.001; rss: 175MB	codegen passes [0]
time: 2.079; rss: 175MB	LLVM passes
time: 0.154; rss: 176MB	linking
done
