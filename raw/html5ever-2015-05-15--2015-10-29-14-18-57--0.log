commit 4d11db650137a8b515fd6cbef60bccd9bbe37869
Merge: a18e0b2 1a19f98
Author: bors <bors@rust-lang.org>
Date:   Thu Oct 29 18:55:12 2015 +0000

    Auto merge of #29129 - cuviper:impl-from-for-floats, r=alexcrichton
    
    This is a spiritual successor to #28921, completing the "upcast" idea from rust-num/num#97.
rustc: ./html5ever-2015-05-15
cargo rustc -- -Ztime-passes
    Updating registry `https://github.com/rust-lang/crates.io-index`
    Updating git repository `https://github.com/reem/rust-mac`
    Updating git repository `https://github.com/servo/string-cache`
   Compiling libc v0.1.12
   Compiling phf_shared v0.7.6
   Compiling mac v0.0.2 (https://github.com/reem/rust-mac#6316d3f4)
   Compiling mac v0.0.2
   Compiling rustc-serialize v0.3.16
   Compiling void v0.0.5
   Compiling winapi-build v0.1.1
   Compiling winapi v0.2.4
   Compiling lazy_static v0.1.15
   Compiling unreachable v0.0.2
   Compiling phf v0.7.6
   Compiling debug_unreachable v0.0.6
   Compiling advapi32-sys v0.1.2
   Compiling kernel32-sys v0.1.4
   Compiling log v0.3.3
   Compiling rand v0.3.11
   Compiling time v0.1.33
   Compiling phf_generator v0.7.6
   Compiling phf_macros v0.7.6
   Compiling string_cache_shared v0.1.9 (https://github.com/servo/string-cache#e9f4c63e)
   Compiling string_cache v0.1.15 (https://github.com/servo/string-cache#e9f4c63e)
   Compiling string_cache_plugin v0.1.9 (https://github.com/servo/string-cache#e9f4c63e)
   Compiling html5ever_macros v0.0.0 (file:///root/benchmarks/html5ever-2015-05-15)
   Compiling num v0.1.27
   Compiling serde v0.6.1
   Compiling html5ever v0.0.0 (file:///root/benchmarks/html5ever-2015-05-15)
time: 0.024; rss: 32MB	parsing
time: 0.005; rss: 33MB	configuration 1
time: 0.000; rss: 33MB	recursion limit
time: 0.000; rss: 33MB	gated macro checking
time: 0.000; rss: 33MB	crate injection
time: 0.044; rss: 46MB	macro loading
time: 0.001; rss: 46MB	plugin loading
time: 0.000; rss: 46MB	plugin registration
time: 1.146; rss: 65MB	expansion
time: 0.004; rss: 65MB	complete gated feature checking 1
time: 0.027; rss: 65MB	configuration 2
time: 0.000; rss: 65MB	gated configuration checking
time: 0.014; rss: 65MB	maybe building test harness
time: 0.012; rss: 65MB	prelude injection
time: 0.002; rss: 65MB	checking that all macro invocations are gone
time: 0.000; rss: 65MB	checking for inline asm in case the target doesn't support it
time: 0.003; rss: 65MB	complete gated feature checking 2
time: 0.013; rss: 65MB	assigning node ids
time: 0.018; rss: 80MB	lowering ast -> hir
time: 0.007; rss: 83MB	indexing hir
time: 0.000; rss: 83MB	attribute checking
time: 0.010; rss: 83MB	early lint checks
time: 0.003; rss: 83MB	external crate/lib resolution
time: 0.003; rss: 83MB	language item collection
time: 0.033; rss: 100MB	resolution
time: 0.002; rss: 100MB	lifetime resolution
time: 0.000; rss: 100MB	looking for entry point
time: 0.001; rss: 100MB	looking for plugin registrar
time: 0.016; rss: 105MB	region resolution
time: 0.002; rss: 105MB	loop checking
time: 0.003; rss: 105MB	static item recursion checking
time: 0.009; rss: 108MB	type collecting
time: 0.003; rss: 108MB	variance inference
time: 0.038; rss: 125MB	coherence checking
time: 0.008; rss: 125MB	wf checking (old)
time: 0.391; rss: 151MB	item-types checking
time: 0.602; rss: 161MB	item-bodies checking
time: 0.000; rss: 161MB	drop-impl checking
time: 0.028; rss: 161MB	wf checking (new)
time: 0.079; rss: 163MB	const checking
time: 0.013; rss: 163MB	privacy checking
time: 0.001; rss: 163MB	stability index
time: 0.004; rss: 163MB	intrinsic checking
time: 0.003; rss: 163MB	effect checking
time: 0.027; rss: 163MB	match checking
time: 0.104; rss: 184MB	MIR dump
time: 0.033; rss: 174MB	liveness checking
time: 0.102; rss: 173MB	borrow checking
time: 0.041; rss: 173MB	rvalue checking
time: 0.003; rss: 173MB	reachability checking
time: 0.010; rss: 173MB	death checking
time: 0.007; rss: 173MB	stability checking
time: 0.000; rss: 173MB	unused lib feature checking
time: 0.056; rss: 173MB	lint checking
time: 0.000; rss: 173MB	resolving dependency formats
time: 0.494; rss: 219MB	translation
  time: 0.018; rss: 110MB	llvm function passes [0]
  time: 0.007; rss: 110MB	llvm module passes [0]
  time: 0.332; rss: 146MB	codegen passes [0]
  time: 0.001; rss: 122MB	codegen passes [0]
time: 0.413; rss: 122MB	LLVM passes
time: 0.058; rss: 122MB	linking
done
