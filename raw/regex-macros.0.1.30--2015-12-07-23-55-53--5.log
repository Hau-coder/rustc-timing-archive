commit acf4e0be22203213a5e42469deea4dc6e49da840
Merge: 8864f2c ca88e9c
Author: bors <bors@rust-lang.org>
Date:   Mon Dec 7 22:28:45 2015 +0000

    Auto merge of #30087 - petrochenkov:indi, r=nrc
    
    I've measured the time/memory consumption before and after - the difference is lost in statistical noise, so it's mostly a code simplification.
    Sizes of `enum`s are not affected.
    
    r? @nrc
    
    I wonder if AST/HIR visitors could run faster if `P`s are systematically removed (except for cases where they control `enum` sizes). Theoretically they should.
    Remaining unnecessary `P`s can't be easily removed because many folders accept `P<X>`s as arguments, but these folders can be converted to accept `X`s instead without loss of efficiency.
    When I have a mood for some mindless refactoring again, I'll probably try to convert the folders, remove remaining `P`s and measure again.
rustc: ./regex-macros.0.1.30
cd regex_macros && cargo rustc -- -Ztime-passes
   Compiling regex_macros v0.1.17 (file:///root/benchmarks/regex-macros.0.1.30/regex_macros)
time: 0.002; rss: 29MB	parsing
time: 0.001; rss: 33MB	configuration 1
time: 0.000; rss: 33MB	recursion limit
time: 0.000; rss: 33MB	gated macro checking
time: 0.000; rss: 33MB	crate injection
time: 0.002; rss: 37MB	macro loading
time: 0.000; rss: 37MB	plugin loading
time: 0.000; rss: 37MB	plugin registration
time: 0.035; rss: 43MB	expansion
time: 0.001; rss: 43MB	complete gated feature checking 1
time: 0.011; rss: 43MB	configuration 2
time: 0.000; rss: 43MB	gated configuration checking
time: 0.005; rss: 43MB	maybe building test harness
time: 0.005; rss: 43MB	prelude injection
time: 0.000; rss: 43MB	checking that all macro invocations are gone
time: 0.000; rss: 43MB	checking for inline asm in case the target doesn't support it
time: 0.001; rss: 43MB	complete gated feature checking 2
time: 0.005; rss: 45MB	assigning node ids
time: 0.004; rss: 49MB	lowering ast -> hir
time: 0.001; rss: 51MB	indexing hir
time: 0.000; rss: 51MB	attribute checking
time: 0.003; rss: 51MB	early lint checks
time: 0.047; rss: 89MB	external crate/lib resolution
time: 0.001; rss: 89MB	language item collection
makefile:2: recipe for target 'all' failed
done
