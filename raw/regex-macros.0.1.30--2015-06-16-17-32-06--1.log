commit 014a5c12ac5692339c854cda02cbabc031f2c5d1
Merge: 467e4a6 34d5b54
Author: bors <bors@rust-lang.org>
Date:   Tue Jun 16 22:20:15 2015 +0000

    Auto merge of #26280 - Marwes:deriving_discriminant, r=pcwalton
    
    PR for #26128.
    
    Improves codegen in deriving by utilizing the discriminant_value intrinsic.
    
    I have a more detailed comment on the changes in a comment on the issue [here](https://github.com/rust-lang/rust/issues/26128#issuecomment-111509863)
    
    ### Old
    ```
    running 7 tests
    test large_c_like       ... bench:   2,694,129 ns/iter (+/- 5,170)
    test large_c_like_ord   ... bench:   2,723,521 ns/iter (+/- 9,098)
    test test1_partial_eq   ... bench:   2,439,317 ns/iter (+/- 2,135)
    test test1_partial_ord  ... bench:   2,499,114 ns/iter (+/- 55,766)
    test test2_partial_eq   ... bench:   3,562,815 ns/iter (+/- 45,590)
    test test2_partial_ord  ... bench:   3,398,306 ns/iter (+/- 22,180)
    test test_match_success ... bench:   1,509,267 ns/iter (+/- 1,982)
    ```
    
    ### New
    ```
    running 7 tests
    test large_c_like       ... bench:     286,509 ns/iter (+/- 474)
    test large_c_like_ord   ... bench:     286,666 ns/iter (+/- 8,756)
    test test1_partial_eq   ... bench:     286,584 ns/iter (+/- 2,789)
    test test1_partial_ord  ... bench:     286,470 ns/iter (+/- 516)
    test test2_partial_eq   ... bench:   2,228,997 ns/iter (+/- 34,191)
    test test2_partial_ord  ... bench:   1,731,699 ns/iter (+/- 21,756)
    test test_match_success ... bench:   1,509,630 ns/iter (+[- 3,765)
    ```
    
    [Benchmark](https://gist.github.com/Marwes/7c0b3468d0cae972a2b4)
rustc: ./regex-macros.0.1.30
cd regex_macros && cargo rustc -- -Ztime-passes
   Compiling regex_macros v0.1.17 (file:///root/benchmarks/regex-macros.0.1.30/regex_macros)
time: 0.002 	parsing
time: 0.001 	configuration 1
time: 0.000 	recursion limit
time: 0.000 	gated macro checking
time: 0.000 	crate injection
time: 0.002 	macro loading
time: 0.000 	plugin loading
time: 0.000 	plugin registration
time: 0.029 	expansion
time: 0.001 	complete gated feature checking 1
time: 0.007 	configuration 2
time: 0.004 	maybe building test harness
time: 0.004 	prelude injection
time: 0.000 	checking that all macro invocations are gone
time: 0.001 	complete gated feature checking 2
time: 0.005 	assigning node ids and indexing ast
time: 0.029 	external crate/lib resolution
time: 0.001 	language item collection
time: 0.019 	resolution
time: 0.001 	lifetime resolution
time: 0.000 	looking for entry point
time: 0.000 	looking for plugin registrar
time: 0.003 	region resolution
time: 0.000 	loop checking
time: 0.000 	static item recursion checking
time: 0.001 	type collecting
time: 0.000 	variance inference
time: 0.061 	coherence checking
time: 4.168 	type checking
time: 0.024 	const checking
time: 0.004 	privacy checking
time: 0.000 	stability index
time: 0.001 	intrinsic checking
time: 0.001 	effect checking
time: 0.001 	match checking
time: 0.004 	liveness checking
time: 0.050 	borrow checking
time: 0.014 	rvalue checking
time: 0.000 	reachability checking
time: 0.003 	death checking
time: 0.007 	stability checking
time: 0.000 	unused lib feature checking
time: 0.020 	lint checking
time: 0.000 	resolving dependency formats
time: 0.823 	translation
  time: 0.035 	llvm function passes
  time: 0.016 	llvm module passes
  time: 0.833 	codegen passes
  time: 0.000 	codegen passes
time: 0.910 	LLVM passes
  time: 0.122 	running linker
time: 0.123 	linking
done
