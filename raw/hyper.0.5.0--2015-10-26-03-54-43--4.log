commit c44316d4a1ad0fe01ae366e163993aa3980c755f
Merge: 72ed590 e8ddbba
Author: bors <bors@rust-lang.org>
Date:   Mon Oct 26 08:27:59 2015 +0000

    Auto merge of #29303 - petrochenkov:unistrimp, r=eddyb
    
    And use `VariantData` instead of `P<VariantData>` in `Item_` and `Variant_`
    
    Improvements suggested by @eddyb in https://github.com/rust-lang/rust/pull/28816#discussion_r42483587 and https://github.com/rust-lang/rust/pull/28816#discussion_r42483648
    
    plugin-[breaking-change]
    
    r? @eddyb
rustc: ./hyper.0.5.0
cargo rustc -- -Ztime-passes
   Compiling hyper v0.5.0 (file:///root/benchmarks/hyper.0.5.0)
time: 0.028; rss: 37MB	parsing
time: 0.009; rss: 41MB	configuration 1
time: 0.000; rss: 41MB	recursion limit
time: 0.000; rss: 41MB	gated macro checking
time: 0.000; rss: 41MB	crate injection
time: 0.004; rss: 46MB	macro loading
time: 0.000; rss: 46MB	plugin loading
time: 0.000; rss: 46MB	plugin registration
time: 0.172; rss: 56MB	expansion
time: 0.005; rss: 56MB	complete gated feature checking 1
time: 0.030; rss: 56MB	configuration 2
time: 0.000; rss: 56MB	gated configuration checking
time: 0.012; rss: 56MB	maybe building test harness
time: 0.010; rss: 56MB	prelude injection
time: 0.001; rss: 56MB	checking that all macro invocations are gone
time: 0.000; rss: 56MB	checking for inline asm in case the target doesn't support it
time: 0.002; rss: 56MB	complete gated feature checking 2
time: 0.010; rss: 56MB	assigning node ids
time: 0.007; rss: 60MB	lowering ast -> hir
time: 0.005; rss: 64MB	indexing hir
time: 0.000; rss: 64MB	attribute checking
time: 0.005; rss: 64MB	early lint checks
time: 0.003; rss: 64MB	external crate/lib resolution
time: 0.002; rss: 64MB	language item collection
time: 0.031; rss: 89MB	resolution
time: 0.002; rss: 90MB	lifetime resolution
time: 0.000; rss: 90MB	looking for entry point
time: 0.001; rss: 90MB	looking for plugin registrar
time: 0.006; rss: 90MB	region resolution
time: 0.001; rss: 90MB	loop checking
time: 0.001; rss: 90MB	static item recursion checking
time: 0.014; rss: 94MB	type collecting
time: 0.002; rss: 94MB	variance inference
time: 0.043; rss: 109MB	coherence checking
time: 0.026; rss: 109MB	wf checking (old)
time: 0.025; rss: 109MB	item-types checking
time: 0.528; rss: 130MB	item-bodies checking
time: 0.000; rss: 130MB	drop-impl checking
time: 0.086; rss: 132MB	wf checking (new)
time: 0.050; rss: 132MB	const checking
time: 0.009; rss: 132MB	privacy checking
time: 0.000; rss: 132MB	stability index
time: 0.004; rss: 132MB	intrinsic checking
time: 0.002; rss: 132MB	effect checking
time: 0.012; rss: 132MB	match checking
time: 0.061; rss: 148MB	MIR dump
time: 0.006; rss: 148MB	liveness checking
time: 0.078; rss: 148MB	borrow checking
time: 0.053; rss: 151MB	rvalue checking
time: 0.003; rss: 151MB	reachability checking
time: 0.007; rss: 151MB	death checking
time: 0.005; rss: 151MB	stability checking
time: 0.000; rss: 151MB	unused lib feature checking
time: 0.043; rss: 151MB	lint checking
time: 0.000; rss: 151MB	resolving dependency formats
time: 1.445; rss: 288MB	translation
  time: 0.102; rss: 173MB	llvm function passes
  time: 0.051; rss: 174MB	llvm module passes
  time: 1.695; rss: 219MB	codegen passes
  time: 0.001; rss: 179MB	codegen passes
time: 2.074; rss: 179MB	LLVM passes
time: 0.178; rss: 181MB	linking
done
