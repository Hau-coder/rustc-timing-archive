commit eb1d018c01f70bcfc38bc8365a3de71c1564f694
Merge: dfe88bf 6405122
Author: bors <bors@rust-lang.org>
Date:   Tue Dec 1 19:47:38 2015 +0000

    Auto merge of #25570 - oli-obk:const_indexing, r=nikomatsakis
    
    This PR allows the constant evaluation of index operations on constant arrays and repeat expressions. This allows index expressions to appear in the expression path of the length expression of a repeat expression or an array type.
    
    An example is
    
    ```rust
    const ARR: [usize; 5] = [1, 2, 3, 4, 5];
    const ARR2: [usize; ARR[1]] = [42, 99];
    ```
    
    In most other locations llvm's const evaluator figures it out already. This is not specific to index expressions and could be remedied in the future.
rustc: ./rust-encoding.0.2.32
cargo rustc -- -Ztime-passes
   Compiling encoding v0.2.32 (file:///root/benchmarks/rust-encoding.0.2.32)
time: 0.021; rss: 39MB	parsing
time: 0.006; rss: 39MB	configuration 1
time: 0.000; rss: 39MB	recursion limit
time: 0.000; rss: 39MB	gated macro checking
time: 0.000; rss: 39MB	crate injection
time: 0.003; rss: 42MB	macro loading
time: 0.000; rss: 42MB	plugin loading
time: 0.000; rss: 42MB	plugin registration
time: 0.042; rss: 44MB	expansion
time: 0.001; rss: 44MB	complete gated feature checking 1
time: 0.007; rss: 43MB	configuration 2
time: 0.000; rss: 43MB	gated configuration checking
time: 0.003; rss: 43MB	maybe building test harness
time: 0.003; rss: 43MB	prelude injection
time: 0.000; rss: 43MB	checking that all macro invocations are gone
time: 0.000; rss: 43MB	checking for inline asm in case the target doesn't support it
time: 0.000; rss: 43MB	complete gated feature checking 2
time: 0.003; rss: 43MB	assigning node ids
time: 0.003; rss: 47MB	lowering ast -> hir
time: 0.002; rss: 50MB	indexing hir
time: 0.000; rss: 50MB	attribute checking
time: 0.002; rss: 50MB	early lint checks
time: 0.001; rss: 50MB	external crate/lib resolution
time: 0.000; rss: 50MB	language item collection
time: 0.010; rss: 58MB	resolution
time: 0.000; rss: 58MB	lifetime resolution
time: 0.000; rss: 58MB	looking for entry point
time: 0.000; rss: 58MB	looking for plugin registrar
time: 0.002; rss: 58MB	region resolution
time: 0.000; rss: 58MB	loop checking
time: 0.000; rss: 58MB	static item recursion checking
time: 0.005; rss: 58MB	type collecting
time: 0.000; rss: 58MB	variance inference
time: 0.020; rss: 78MB	coherence checking
time: 0.006; rss: 78MB	wf checking (old)
time: 0.013; rss: 78MB	item-types checking
time: 0.201; rss: 90MB	item-bodies checking
time: 0.000; rss: 90MB	drop-impl checking
time: 0.017; rss: 90MB	wf checking (new)
time: 0.011; rss: 90MB	const checking
time: 0.002; rss: 90MB	privacy checking
time: 0.000; rss: 90MB	stability index
time: 0.001; rss: 90MB	intrinsic checking
time: 0.000; rss: 90MB	effect checking
time: 0.006; rss: 90MB	match checking
time: 0.017; rss: 94MB	MIR dump
time: 0.002; rss: 94MB	liveness checking
time: 0.022; rss: 94MB	borrow checking
time: 0.007; rss: 94MB	rvalue checking
time: 0.000; rss: 94MB	reachability checking
time: 0.002; rss: 94MB	death checking
time: 0.001; rss: 94MB	stability checking
time: 0.000; rss: 94MB	unused lib feature checking
time: 0.016; rss: 94MB	lint checking
time: 0.000; rss: 94MB	resolving dependency formats
time: 0.002; rss: 94MB	erasing regions from MIR
time: 0.334; rss: 145MB	translation
  time: 0.028; rss: 104MB	llvm function passes [0]
  time: 0.063; rss: 107MB	llvm module passes [0]
  time: 0.571; rss: 129MB	codegen passes [0]
  time: 0.000; rss: 126MB	codegen passes [0]
time: 0.730; rss: 126MB	LLVM passes
time: 0.053; rss: 125MB	linking
done
