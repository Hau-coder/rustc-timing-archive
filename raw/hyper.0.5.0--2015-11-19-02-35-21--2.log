commit 3e48b0e380319dc586a329baac640b9457feb87a
Merge: 9303055 51c35db
Author: bors <bors@rust-lang.org>
Date:   Thu Nov 19 02:51:15 2015 +0000

    Auto merge of #29917 - shssoichiro:doc-sidebar-order, r=alexcrichton
    
    A race condition in Javascript was causing unpredictable ordering
    of the sidebar boxes when loading documentation generated by
    rustdoc, due to the script that adds the Crates box being executed
    asynchronously. Disabling the asynchronous execution and deferring
    this script should ensure that the Crates box always appears last
    in the sidebox (this seemed to be the more common ordering prior
    to this change).
    
    Fixes #29698
rustc: ./hyper.0.5.0
cargo rustc -- -Ztime-passes
   Compiling hyper v0.5.0 (file:///root/benchmarks/hyper.0.5.0)
time: 0.028; rss: 38MB	parsing
time: 0.009; rss: 41MB	configuration 1
time: 0.000; rss: 41MB	recursion limit
time: 0.000; rss: 41MB	gated macro checking
time: 0.000; rss: 41MB	crate injection
time: 0.004; rss: 46MB	macro loading
time: 0.000; rss: 46MB	plugin loading
time: 0.000; rss: 46MB	plugin registration
time: 0.175; rss: 56MB	expansion
time: 0.006; rss: 56MB	complete gated feature checking 1
time: 0.031; rss: 56MB	configuration 2
time: 0.000; rss: 56MB	gated configuration checking
time: 0.013; rss: 56MB	maybe building test harness
time: 0.010; rss: 56MB	prelude injection
time: 0.001; rss: 56MB	checking that all macro invocations are gone
time: 0.000; rss: 56MB	checking for inline asm in case the target doesn't support it
time: 0.002; rss: 56MB	complete gated feature checking 2
time: 0.010; rss: 56MB	assigning node ids
time: 0.009; rss: 61MB	lowering ast -> hir
time: 0.005; rss: 63MB	indexing hir
time: 0.000; rss: 63MB	attribute checking
time: 0.005; rss: 63MB	early lint checks
time: 0.003; rss: 64MB	external crate/lib resolution
time: 0.001; rss: 64MB	language item collection
time: 0.031; rss: 88MB	resolution
time: 0.002; rss: 88MB	lifetime resolution
time: 0.000; rss: 88MB	looking for entry point
time: 0.000; rss: 88MB	looking for plugin registrar
time: 0.006; rss: 88MB	region resolution
time: 0.001; rss: 88MB	loop checking
time: 0.001; rss: 88MB	static item recursion checking
time: 0.014; rss: 94MB	type collecting
time: 0.000; rss: 94MB	variance inference
time: 0.041; rss: 113MB	coherence checking
time: 0.028; rss: 115MB	wf checking (old)
time: 0.026; rss: 115MB	item-types checking
time: 0.523; rss: 132MB	item-bodies checking
time: 0.000; rss: 132MB	drop-impl checking
time: 0.087; rss: 132MB	wf checking (new)
time: 0.042; rss: 132MB	const checking
time: 0.009; rss: 132MB	privacy checking
time: 0.001; rss: 132MB	stability index
time: 0.004; rss: 132MB	intrinsic checking
time: 0.002; rss: 132MB	effect checking
time: 0.013; rss: 132MB	match checking
time: 0.061; rss: 145MB	MIR dump
time: 0.008; rss: 147MB	liveness checking
time: 0.099; rss: 147MB	borrow checking
time: 0.048; rss: 147MB	rvalue checking
time: 0.004; rss: 147MB	reachability checking
time: 0.008; rss: 147MB	death checking
time: 0.007; rss: 147MB	stability checking
time: 0.000; rss: 147MB	unused lib feature checking
time: 0.056; rss: 147MB	lint checking
time: 0.000; rss: 147MB	resolving dependency formats
time: 0.009; rss: 149MB	erasing regions from MIR
time: 1.522; rss: 287MB	translation
  time: 0.100; rss: 176MB	llvm function passes [0]
  time: 0.052; rss: 176MB	llvm module passes [0]
  time: 1.659; rss: 221MB	codegen passes [0]
  time: 0.001; rss: 179MB	codegen passes [0]
time: 2.033; rss: 179MB	LLVM passes
time: 0.173; rss: 180MB	linking
done
