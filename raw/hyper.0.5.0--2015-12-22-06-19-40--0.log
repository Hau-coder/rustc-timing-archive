commit 42c3ef8f9fd4b0dd1f881c49323bad456163f202
Merge: 5178449 cd74364
Author: bors <bors@rust-lang.org>
Date:   Tue Dec 22 09:15:29 2015 +0000

    Auto merge of #30417 - alexcrichton:better-detect-elf-tls, r=alexcrichton
    
    Currently a compiler can be built with the `--disable-elf-tls` option for compatibility with OSX 10.6 which doesn't have ELF TLS. This is unfortunate, however, as a whole new compiler must be generated which can take some time. These commits add a new (feature gated) `cfg(target_thread_local)` annotation set by the compiler which indicates whether `#[thread_local]` is available for use. The compiler now interprets `MACOSX_DEPLOYMENT_TARGET` (a standard environment variable) to set this flag on OSX. With this we may want to start compiling our OSX nightlies with `MACOSX_DEPLOYMENT_TARGET` set to 10.6 which would allow the compiler out-of-the-box to generate 10.6-compatible binaries.
    
    For now the compiler still by default targets OSX 10.7 by allowing ELF TLS by default (e.g. if `MACOSX_DEPLOYMENT_TARGET` isn't set).
rustc: ./hyper.0.5.0
cargo rustc -- -Ztime-passes
    Updating registry `https://github.com/rust-lang/crates.io-index`
   Compiling typeable v0.1.2
   Compiling winapi v0.2.5
   Compiling rustc-serialize v0.3.16
   Compiling libc v0.2.4
   Compiling winapi-build v0.1.1
   Compiling lazy_static v0.1.15
   Compiling matches v0.1.2
   Compiling unicase v0.1.0
   Compiling pkg-config v0.3.6
   Compiling traitobject v0.0.1
   Compiling gcc v0.3.21
   Compiling bitflags v0.3.3
   Compiling libc v0.1.12
   Compiling httparse v0.1.6
   Compiling kernel32-sys v0.2.1
   Compiling advapi32-sys v0.1.2
   Compiling num_cpus v0.2.10
   Compiling rand v0.3.12
   Compiling log v0.3.4
   Compiling time v0.1.34
   Compiling mime v0.0.11
   Compiling openssl-sys v0.6.7
   Compiling openssl v0.6.7
   Compiling uuid v0.1.18
   Compiling url v0.2.38
   Compiling cookie v0.1.21
   Compiling hyper v0.5.0 (file:///root/benchmarks/hyper.0.5.0)
time: 0.029; rss: 39MB	parsing
time: 0.009; rss: 43MB	configuration 1
time: 0.000; rss: 43MB	recursion limit
time: 0.000; rss: 43MB	gated macro checking
time: 0.000; rss: 43MB	crate injection
time: 0.004; rss: 48MB	macro loading
time: 0.000; rss: 48MB	plugin loading
time: 0.000; rss: 48MB	plugin registration
time: 0.191; rss: 58MB	expansion
time: 0.005; rss: 58MB	complete gated feature checking 1
time: 0.035; rss: 58MB	configuration 2
time: 0.000; rss: 58MB	gated configuration checking
time: 0.013; rss: 58MB	maybe building test harness
time: 0.011; rss: 58MB	prelude injection
time: 0.001; rss: 58MB	checking that all macro invocations are gone
time: 0.000; rss: 58MB	checking for inline asm in case the target doesn't support it
time: 0.002; rss: 58MB	complete gated feature checking 2
time: 0.010; rss: 58MB	assigning node ids
time: 0.011; rss: 62MB	lowering ast -> hir
time: 0.005; rss: 67MB	indexing hir
time: 0.000; rss: 67MB	attribute checking
time: 0.005; rss: 67MB	early lint checks
time: 0.003; rss: 69MB	external crate/lib resolution
time: 0.001; rss: 69MB	language item collection
time: 0.026; rss: 95MB	resolution
time: 0.002; rss: 95MB	lifetime resolution
time: 0.000; rss: 95MB	looking for entry point
time: 0.000; rss: 95MB	looking for plugin registrar
time: 0.005; rss: 97MB	region resolution
time: 0.001; rss: 97MB	loop checking
time: 0.001; rss: 97MB	static item recursion checking
time: 0.014; rss: 101MB	type collecting
time: 0.000; rss: 101MB	variance inference
time: 0.038; rss: 124MB	coherence checking
time: 0.064; rss: 126MB	wf checking
time: 0.026; rss: 126MB	item-types checking
time: 0.503; rss: 145MB	item-bodies checking
time: 0.000; rss: 145MB	drop-impl checking
time: 0.042; rss: 147MB	const checking
time: 0.008; rss: 147MB	privacy checking
time: 0.001; rss: 147MB	stability index
time: 0.004; rss: 147MB	intrinsic checking
time: 0.002; rss: 147MB	effect checking
time: 0.012; rss: 147MB	match checking
time: 0.049; rss: 149MB	MIR dump
time: 0.006; rss: 151MB	liveness checking
time: 0.073; rss: 151MB	borrow checking
time: 0.035; rss: 154MB	rvalue checking
time: 0.003; rss: 154MB	reachability checking
time: 0.006; rss: 154MB	death checking
time: 0.006; rss: 154MB	stability checking
time: 0.000; rss: 154MB	unused lib feature checking
time: 0.046; rss: 154MB	lint checking
time: 0.000; rss: 154MB	resolving dependency formats
time: 0.008; rss: 154MB	erasing regions from MIR
time: 1.474; rss: 295MB	translation
  time: 0.099; rss: 181MB	llvm function passes [0]
  time: 0.055; rss: 182MB	llvm module passes [0]
  time: 1.685; rss: 226MB	codegen passes [0]
  time: 0.001; rss: 184MB	codegen passes [0]
time: 2.069; rss: 184MB	LLVM passes
time: 0.178; rss: 182MB	linking
done
