commit 4005d437653fc09b47cd3176bb65323c52cccd47
Merge: 56a1f51 d6eb063
Author: bors <bors@rust-lang.org>
Date:   Wed Dec 9 04:22:05 2015 +0000

    Auto merge of #30245 - Aatch:dynamic-align-dst, r=pnkfelix
    
    Fixes #26403
    
    This adjusts the pointer, if needed, to the correct alignment by using the alignment information in the vtable.
    
    Handling zero might not be necessary, as it shouldn't actually occur. I've left it as it's own commit so it can be removed fairly easily if people don't think it's worth doing. The way it's handled though means that there shouldn't be much impact on performance.
rustc: ./hyper.0.5.0
cargo rustc -- -Ztime-passes
    Updating registry `https://github.com/rust-lang/crates.io-index`
   Compiling matches v0.1.2
   Compiling rustc-serialize v0.3.16
   Compiling unicase v0.1.0
   Compiling libc v0.2.2
   Compiling traitobject v0.0.1
   Compiling libc v0.1.12
   Compiling bitflags v0.3.3
   Compiling winapi v0.2.5
   Compiling httparse v0.1.6
   Compiling winapi-build v0.1.1
   Compiling typeable v0.1.2
   Compiling pkg-config v0.3.6
   Compiling gcc v0.3.20
   Compiling lazy_static v0.1.15
   Compiling advapi32-sys v0.1.2
   Compiling kernel32-sys v0.2.1
   Compiling log v0.3.4
   Compiling rand v0.3.12
   Compiling num_cpus v0.2.10
   Compiling time v0.1.34
   Compiling mime v0.0.11
   Compiling openssl-sys v0.6.7
   Compiling openssl v0.6.7
   Compiling uuid v0.1.18
   Compiling url v0.2.38
   Compiling cookie v0.1.21
   Compiling hyper v0.5.0 (file:///root/benchmarks/hyper.0.5.0)
time: 0.029; rss: 38MB	parsing
time: 0.010; rss: 41MB	configuration 1
time: 0.000; rss: 41MB	recursion limit
time: 0.000; rss: 41MB	gated macro checking
time: 0.000; rss: 41MB	crate injection
time: 0.004; rss: 47MB	macro loading
time: 0.000; rss: 47MB	plugin loading
time: 0.000; rss: 47MB	plugin registration
time: 0.189; rss: 57MB	expansion
time: 0.005; rss: 57MB	complete gated feature checking 1
time: 0.036; rss: 57MB	configuration 2
time: 0.000; rss: 57MB	gated configuration checking
time: 0.014; rss: 57MB	maybe building test harness
time: 0.011; rss: 57MB	prelude injection
time: 0.001; rss: 57MB	checking that all macro invocations are gone
time: 0.000; rss: 57MB	checking for inline asm in case the target doesn't support it
time: 0.002; rss: 57MB	complete gated feature checking 2
time: 0.011; rss: 57MB	assigning node ids
time: 0.011; rss: 62MB	lowering ast -> hir
time: 0.005; rss: 64MB	indexing hir
time: 0.000; rss: 64MB	attribute checking
time: 0.005; rss: 64MB	early lint checks
time: 0.003; rss: 66MB	external crate/lib resolution
time: 0.001; rss: 66MB	language item collection
time: 0.027; rss: 91MB	resolution
time: 0.002; rss: 91MB	lifetime resolution
time: 0.000; rss: 91MB	looking for entry point
time: 0.000; rss: 91MB	looking for plugin registrar
time: 0.006; rss: 91MB	region resolution
time: 0.001; rss: 91MB	loop checking
time: 0.001; rss: 91MB	static item recursion checking
time: 0.013; rss: 91MB	type collecting
time: 0.000; rss: 91MB	variance inference
time: 0.038; rss: 112MB	coherence checking
time: 0.027; rss: 112MB	wf checking (old)
time: 0.026; rss: 112MB	item-types checking
time: 0.530; rss: 135MB	item-bodies checking
time: 0.000; rss: 135MB	drop-impl checking
time: 0.086; rss: 135MB	wf checking (new)
time: 0.042; rss: 135MB	const checking
time: 0.009; rss: 135MB	privacy checking
time: 0.001; rss: 135MB	stability index
time: 0.004; rss: 135MB	intrinsic checking
time: 0.002; rss: 135MB	effect checking
time: 0.013; rss: 135MB	match checking
time: 0.048; rss: 141MB	MIR dump
time: 0.006; rss: 141MB	liveness checking
time: 0.070; rss: 141MB	borrow checking
time: 0.034; rss: 141MB	rvalue checking
time: 0.003; rss: 141MB	reachability checking
time: 0.006; rss: 141MB	death checking
time: 0.006; rss: 141MB	stability checking
time: 0.000; rss: 141MB	unused lib feature checking
time: 0.045; rss: 141MB	lint checking
time: 0.000; rss: 141MB	resolving dependency formats
time: 0.007; rss: 143MB	erasing regions from MIR
time: 1.393; rss: 280MB	translation
  time: 0.099; rss: 175MB	llvm function passes [0]
  time: 0.052; rss: 175MB	llvm module passes [0]
  time: 1.686; rss: 221MB	codegen passes [0]
  time: 0.001; rss: 178MB	codegen passes [0]
time: 2.060; rss: 178MB	LLVM passes
time: 0.174; rss: 178MB	linking
done
