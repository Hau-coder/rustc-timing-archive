commit 6bf8cc578985c5236cb90924994816ee7a25ce8a
Merge: eebf674 0a13f1ab
Author: bors <bors@rust-lang.org>
Date:   Wed Dec 9 16:57:46 2015 +0000

    Auto merge of #29937 - alexcrichton:panic-recover, r=alexcrichton
    
    This commit is an implementation of [RFC 1236] and [RFC 1323] which
    rename the `thread::catch_panic` function to `panic::recover` while also
    replacing the `Send + 'static` bounds with a new `PanicSafe` bound.
    
    [RFC 1236]: https://github.com/rust-lang/rfcs/pull/1236
    [RFC 1323]: https://github.com/rust-lang/rfcs/pull/1323
    
    cc #27719
rustc: ./regex.0.1.30
cargo rustc -- -Ztime-passes
   Compiling regex v0.1.30 (file:///root/benchmarks/regex.0.1.30)
time: 0.057; rss: 46MB	parsing
time: 0.011; rss: 46MB	configuration 1
time: 0.000; rss: 46MB	recursion limit
time: 0.001; rss: 46MB	gated macro checking
time: 0.000; rss: 46MB	crate injection
time: 0.003; rss: 49MB	macro loading
time: 0.000; rss: 49MB	plugin loading
time: 0.000; rss: 49MB	plugin registration
time: 0.064; rss: 52MB	expansion
time: 0.001; rss: 52MB	complete gated feature checking 1
time: 0.014; rss: 52MB	configuration 2
time: 0.000; rss: 52MB	gated configuration checking
time: 0.006; rss: 52MB	maybe building test harness
time: 0.006; rss: 52MB	prelude injection
time: 0.001; rss: 52MB	checking that all macro invocations are gone
time: 0.000; rss: 52MB	checking for inline asm in case the target doesn't support it
time: 0.001; rss: 52MB	complete gated feature checking 2
time: 0.007; rss: 52MB	assigning node ids
time: 0.010; rss: 60MB	lowering ast -> hir
time: 0.002; rss: 62MB	indexing hir
time: 0.000; rss: 62MB	attribute checking
time: 0.004; rss: 62MB	early lint checks
time: 0.001; rss: 62MB	external crate/lib resolution
time: 0.001; rss: 62MB	language item collection
time: 0.009; rss: 71MB	resolution
time: 0.001; rss: 71MB	lifetime resolution
time: 0.000; rss: 71MB	looking for entry point
time: 0.000; rss: 71MB	looking for plugin registrar
time: 0.005; rss: 75MB	region resolution
time: 0.001; rss: 75MB	loop checking
time: 0.001; rss: 75MB	static item recursion checking
time: 0.004; rss: 75MB	type collecting
time: 0.000; rss: 75MB	variance inference
time: 0.021; rss: 95MB	coherence checking
time: 0.005; rss: 95MB	wf checking (old)
time: 0.090; rss: 99MB	item-types checking
time: 0.210; rss: 107MB	item-bodies checking
time: 0.000; rss: 107MB	drop-impl checking
time: 0.011; rss: 107MB	wf checking (new)
time: 0.027; rss: 113MB	const checking
time: 0.004; rss: 113MB	privacy checking
time: 0.000; rss: 113MB	stability index
time: 0.001; rss: 113MB	intrinsic checking
time: 0.001; rss: 113MB	effect checking
time: 0.003; rss: 113MB	match checking
time: 0.015; rss: 115MB	MIR dump
time: 0.003; rss: 118MB	liveness checking
time: 0.020; rss: 118MB	borrow checking
time: 0.007; rss: 118MB	rvalue checking
time: 0.000; rss: 118MB	reachability checking
time: 0.003; rss: 118MB	death checking
time: 0.002; rss: 118MB	stability checking
time: 0.000; rss: 118MB	unused lib feature checking
time: 0.028; rss: 118MB	lint checking
time: 0.000; rss: 118MB	resolving dependency formats
time: 0.002; rss: 118MB	erasing regions from MIR
time: 0.669; rss: 182MB	translation
  time: 0.038; rss: 113MB	llvm function passes [0]
  time: 0.020; rss: 114MB	llvm module passes [0]
  time: 0.630; rss: 140MB	codegen passes [0]
  time: 0.001; rss: 127MB	codegen passes [0]
time: 0.770; rss: 127MB	LLVM passes
time: 0.068; rss: 126MB	linking
done
