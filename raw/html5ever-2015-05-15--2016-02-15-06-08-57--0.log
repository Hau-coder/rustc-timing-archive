commit 9a7913786c2e1923e30faf7c6eb680546259653c
Merge: 5ba9402 5b224ec
Author: bors <bors@rust-lang.org>
Date:   Mon Feb 15 11:07:02 2016 +0000

    Auto merge of #31653 - tomaka:emscripten-abi, r=eddyb
    
    Needs a correct review because I'm not too confident with how this works.
    All tests related to the C ABI are now passing.
    
    References:
    - https://github.com/kripken/emscripten-fastcomp-clang/blob/dbe68fecd03d6f646bd075963c3cc0e7130e5767/lib/CodeGen/TargetInfo.cpp#L479-L489
    - https://github.com/kripken/emscripten-fastcomp-clang/blob/dbe68fecd03d6f646bd075963c3cc0e7130e5767/lib/CodeGen/TargetInfo.cpp#L466-L477
    
    The `classifyArgumentType` function has two different paths depending on `RAA == CGCXXABI::RAA_DirectInMemory`, but I don't really know what's the corresponding option in Rust.
    
    cc @brson @eddyb
rustc: ./html5ever-2015-05-15
cargo rustc -- -Ztime-passes -Zinput-stats
    Updating registry `https://github.com/rust-lang/crates.io-index`
    Updating git repository `https://github.com/reem/rust-mac`
    Updating git repository `https://github.com/servo/string-cache`
   Compiling void v0.0.5
   Compiling winapi v0.2.5
   Compiling lazy_static v0.1.15
   Compiling phf_shared v0.7.12
   Compiling num v0.1.30
   Compiling rustc-serialize v0.3.18
   Compiling libc v0.2.7
   Compiling winapi-build v0.1.1
   Compiling mac v0.0.2 (https://github.com/reem/rust-mac#6316d3f4)
   Compiling unreachable v0.0.2
   Compiling debug_unreachable v0.0.6
   Compiling phf v0.7.12
   Compiling kernel32-sys v0.2.1
   Compiling time v0.1.34
   Compiling log v0.3.5
   Compiling rand v0.3.14
   Compiling serde v0.6.13
   Compiling phf_generator v0.7.12
   Compiling string_cache_shared v0.1.12
   Compiling phf_macros v0.7.12
Build failed, waiting for other jobs to finish...
makefile:2: recipe for target 'all' failed
done
