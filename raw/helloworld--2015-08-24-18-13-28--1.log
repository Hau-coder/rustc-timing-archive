commit bc3573470f009fa078fe063700b8df2854e8499e
Merge: 4c99649 06563fe
Author: bors <bors@rust-lang.org>
Date:   Mon Aug 24 22:13:45 2015 +0000

    Auto merge of #27943 - arielb1:fast-region, r=nikomatsakis
    
    This increases regionck performance greatly - type-checking on
    librustc decreased from 9.1s to 8.1s. Because of Amdahl's law,
    total performance is improved only by about 1.5% (LLVM wizards,
    this is your opportunity to shine!).
    
    before:
    576.91user 4.26system 7:42.36elapsed 125%CPU (0avgtext+0avgdata 1142192maxresident)k
    after:
    566.50user 4.84system 7:36.84elapsed 125%CPU (0avgtext+0avgdata 1124304maxresident)k
    
    I am somewhat worried really need to find out why we have this Red Queen's
    Race going on here. Originally I suspected it may be a problem from RFC1214's
    warnings, but it seems to be an effect from other changes.
    
    However, the increase seems to be mostly in LLVM's time, so I guess
    it's the LLVM wizards' problem.
    
    r? @nikomatsakis
rustc: ./helloworld
/root/rust/x86_64-unknown-linux-gnu/stage2/bin/rustc -Ztime-passes hello.rs
time: 0.000; rss: 29MB	parsing
time: 0.000; rss: 29MB	configuration 1
time: 0.000; rss: 29MB	recursion limit
time: 0.000; rss: 33MB	gated macro checking
time: 0.000; rss: 33MB	crate injection
time: 0.002; rss: 35MB	macro loading
time: 0.000; rss: 35MB	plugin loading
time: 0.000; rss: 35MB	plugin registration
time: 0.001; rss: 35MB	expansion
time: 0.000; rss: 35MB	complete gated feature checking 1
time: 0.000; rss: 35MB	configuration 2
time: 0.000; rss: 35MB	gated configuration checking
time: 0.000; rss: 35MB	maybe building test harness
time: 0.000; rss: 35MB	prelude injection
time: 0.000; rss: 35MB	checking that all macro invocations are gone
time: 0.000; rss: 35MB	checking for inline asm in case the target doesn't support it
time: 0.000; rss: 35MB	complete gated feature checking 2
time: 0.000; rss: 35MB	assigning node ids and indexing ast
time: 0.001; rss: 38MB	external crate/lib resolution
time: 0.000; rss: 38MB	language item collection
time: 0.001; rss: 42MB	resolution
time: 0.000; rss: 42MB	lifetime resolution
time: 0.000; rss: 42MB	looking for entry point
time: 0.000; rss: 42MB	looking for plugin registrar
time: 0.000; rss: 42MB	region resolution
time: 0.000; rss: 42MB	loop checking
time: 0.000; rss: 42MB	static item recursion checking
time: 0.000; rss: 42MB	type collecting
time: 0.000; rss: 42MB	variance inference
time: 0.005; rss: 50MB	coherence checking
time: 0.000; rss: 50MB	wf checking (old)
time: 0.000; rss: 50MB	item-types checking
time: 0.000; rss: 50MB	item-bodies checking
time: 0.000; rss: 50MB	drop-impl checking
time: 0.000; rss: 50MB	wf checking (new)
time: 0.000; rss: 50MB	const checking
time: 0.000; rss: 50MB	privacy checking
time: 0.000; rss: 50MB	stability index
time: 0.000; rss: 50MB	intrinsic checking
time: 0.000; rss: 50MB	effect checking
time: 0.000; rss: 50MB	match checking
time: 0.000; rss: 50MB	liveness checking
time: 0.000; rss: 50MB	borrow checking
time: 0.000; rss: 50MB	rvalue checking
time: 0.000; rss: 50MB	reachability checking
time: 0.000; rss: 50MB	death checking
time: 0.000; rss: 50MB	stability checking
time: 0.000; rss: 50MB	unused lib feature checking
time: 0.000; rss: 50MB	lint checking
time: 0.001; rss: 50MB	resolving dependency formats
time: 0.004; rss: 62MB	translation
  time: 0.000; rss: 64MB	llvm function passes
  time: 0.000; rss: 64MB	llvm module passes
  time: 0.001; rss: 66MB	codegen passes
  time: 0.000; rss: 66MB	codegen passes
time: 0.002; rss: 66MB	LLVM passes
  time: 0.083; rss: 75MB	running linker
time: 0.084; rss: 75MB	linking
done
