commit d4432b37378ec55450e06799f5344b4b0f4b94e0
Merge: b5dad7d 6d96edf
Author: bors <bors@rust-lang.org>
Date:   Fri Jul 17 16:18:52 2015 +0000

    Auto merge of #27076 - alexcrichton:update-llvm, r=brson
    
    LLVM has recently created their 3.7 release branch, and this PR updates us to that point. This should hopefully mean that we're basically compatible with the upcoming 3.7 release. Additionally, there are a number of goodies on this branch.
    
    * This contains a fix for https://llvm.org/bugs/show_bug.cgi?id=23957
      which should help us bootstrap farther on 32-bit MSVC targets.
    * There is better support for writing multiple flavors of archives, allowing us
      to use the built-in LLVM support instead of the system `ar` on all current
      platforms of the compiler.
    * This LLVM has SafeStack support
    * An [optimization patch](https://github.com/rust-lang/llvm/commit/7cf5e26e18f7d2d8db09c83c76dd727535f281ab) by @pcwalton is included.
    * A number of other minor test fixes here and there.
    
    Due to problems dealing with the data layout we pass to LLVM, this PR also takes the time to clean up how we specific this. We no longer specify a data layout to LLVM by default and instead take the default for the target from LLVM to pass to the module that we're building. This should be more robust going into the future, and I'm also not sure we know what any of these arcane strings are any more...
rustc: ./helloworld
/root/rust/x86_64-unknown-linux-gnu/stage2/bin/rustc -Ztime-passes hello.rs
time: 0.000; rss: 29MB	parsing
time: 0.000; rss: 29MB	configuration 1
time: 0.000; rss: 34MB	recursion limit
time: 0.000; rss: 34MB	gated macro checking
time: 0.000; rss: 34MB	crate injection
time: 0.002; rss: 34MB	macro loading
time: 0.000; rss: 34MB	plugin loading
time: 0.000; rss: 34MB	plugin registration
time: 0.001; rss: 37MB	expansion
time: 0.000; rss: 37MB	complete gated feature checking 1
time: 0.000; rss: 37MB	configuration 2
time: 0.000; rss: 37MB	maybe building test harness
time: 0.000; rss: 37MB	prelude injection
time: 0.000; rss: 37MB	checking that all macro invocations are gone
time: 0.000; rss: 37MB	complete gated feature checking 2
time: 0.000; rss: 37MB	assigning node ids and indexing ast
time: 0.000; rss: 37MB	external crate/lib resolution
time: 0.000; rss: 37MB	language item collection
time: 0.001; rss: 42MB	resolution
time: 0.000; rss: 42MB	lifetime resolution
time: 0.000; rss: 42MB	looking for entry point
time: 0.000; rss: 42MB	looking for plugin registrar
time: 0.000; rss: 42MB	region resolution
time: 0.000; rss: 42MB	loop checking
time: 0.000; rss: 42MB	static item recursion checking
time: 0.000; rss: 42MB	type collecting
time: 0.000; rss: 42MB	variance inference
time: 0.001; rss: 50MB	coherence checking
time: 0.001; rss: 50MB	type checking
time: 0.000; rss: 50MB	const checking
time: 0.000; rss: 50MB	privacy checking
time: 0.000; rss: 50MB	stability index
time: 0.000; rss: 50MB	intrinsic checking
time: 0.000; rss: 50MB	effect checking
time: 0.000; rss: 50MB	match checking
time: 0.000; rss: 50MB	liveness checking
time: 0.000; rss: 50MB	borrow checking
time: 0.000; rss: 50MB	rvalue checking
time: 0.000; rss: 50MB	reachability checking
time: 0.000; rss: 50MB	death checking
time: 0.000; rss: 50MB	stability checking
time: 0.000; rss: 50MB	unused lib feature checking
time: 0.000; rss: 50MB	lint checking
time: 0.000; rss: 50MB	resolving dependency formats
time: 0.004; rss: 63MB	translation
  time: 0.000; rss: 65MB	llvm function passes
  time: 0.000; rss: 65MB	llvm module passes
  time: 0.001; rss: 66MB	codegen passes
  time: 0.000; rss: 66MB	codegen passes
time: 0.002; rss: 66MB	LLVM passes
  time: 0.098; rss: 73MB	running linker
time: 0.098; rss: 73MB	linking
done
