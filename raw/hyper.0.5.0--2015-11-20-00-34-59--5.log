commit 2228bacd62ca8970a7a59401e78d0c5a34fc0f87
Merge: e5c69b1 5c88a1c
Author: bors <bors@rust-lang.org>
Date:   Fri Nov 20 05:09:24 2015 +0000

    Auto merge of #29943 - brson:inline-threshold, r=nrc
    
    Corresponds directly to llvm's inline-threshold.
    
    I want this so I can experiment out-of-tree with tweaking optimization settings, and this is the most important value that isn't exposed. I can't get it to work either via `-C llvm-args`.
    
    cc @rust-lang/compiler
rustc: ./hyper.0.5.0
cargo rustc -- -Ztime-passes
   Compiling hyper v0.5.0 (file:///root/benchmarks/hyper.0.5.0)
time: 0.028; rss: 41MB	parsing
time: 0.009; rss: 41MB	configuration 1
time: 0.000; rss: 41MB	recursion limit
time: 0.000; rss: 41MB	gated macro checking
time: 0.000; rss: 41MB	crate injection
time: 0.004; rss: 46MB	macro loading
time: 0.000; rss: 46MB	plugin loading
time: 0.000; rss: 46MB	plugin registration
time: 0.174; rss: 55MB	expansion
time: 0.005; rss: 55MB	complete gated feature checking 1
time: 0.029; rss: 55MB	configuration 2
time: 0.000; rss: 55MB	gated configuration checking
time: 0.013; rss: 55MB	maybe building test harness
time: 0.010; rss: 55MB	prelude injection
time: 0.001; rss: 55MB	checking that all macro invocations are gone
time: 0.000; rss: 55MB	checking for inline asm in case the target doesn't support it
time: 0.002; rss: 55MB	complete gated feature checking 2
time: 0.010; rss: 55MB	assigning node ids
time: 0.008; rss: 60MB	lowering ast -> hir
time: 0.005; rss: 62MB	indexing hir
time: 0.000; rss: 62MB	attribute checking
time: 0.005; rss: 62MB	early lint checks
time: 0.003; rss: 64MB	external crate/lib resolution
time: 0.001; rss: 64MB	language item collection
time: 0.030; rss: 88MB	resolution
time: 0.002; rss: 88MB	lifetime resolution
time: 0.000; rss: 88MB	looking for entry point
time: 0.000; rss: 88MB	looking for plugin registrar
time: 0.006; rss: 88MB	region resolution
time: 0.001; rss: 88MB	loop checking
time: 0.001; rss: 88MB	static item recursion checking
time: 0.013; rss: 95MB	type collecting
time: 0.000; rss: 95MB	variance inference
time: 0.040; rss: 109MB	coherence checking
time: 0.027; rss: 111MB	wf checking (old)
time: 0.025; rss: 116MB	item-types checking
time: 0.526; rss: 132MB	item-bodies checking
time: 0.000; rss: 132MB	drop-impl checking
time: 0.087; rss: 132MB	wf checking (new)
time: 0.042; rss: 132MB	const checking
time: 0.009; rss: 132MB	privacy checking
time: 0.001; rss: 132MB	stability index
time: 0.004; rss: 132MB	intrinsic checking
time: 0.002; rss: 132MB	effect checking
time: 0.013; rss: 132MB	match checking
time: 0.053; rss: 145MB	MIR dump
time: 0.006; rss: 147MB	liveness checking
time: 0.068; rss: 147MB	borrow checking
time: 0.034; rss: 147MB	rvalue checking
time: 0.003; rss: 147MB	reachability checking
time: 0.006; rss: 147MB	death checking
time: 0.005; rss: 147MB	stability checking
time: 0.000; rss: 147MB	unused lib feature checking
time: 0.041; rss: 147MB	lint checking
time: 0.000; rss: 147MB	resolving dependency formats
time: 0.008; rss: 149MB	erasing regions from MIR
time: 1.399; rss: 286MB	translation
  time: 0.098; rss: 176MB	llvm function passes [0]
  time: 0.051; rss: 177MB	llvm module passes [0]
  time: 1.665; rss: 221MB	codegen passes [0]
  time: 0.001; rss: 182MB	codegen passes [0]
time: 2.034; rss: 182MB	LLVM passes
time: 0.175; rss: 182MB	linking
done
