commit e0e262737478b695d115519f7856e475c17f84e1
Merge: 8a72584 99f9bb1
Author: bors <bors@rust-lang.org>
Date:   Tue Oct 27 22:56:39 2015 +0000

    Auto merge of #29072 - nagisa:place-arrow, r=pnkfelix
    
    This commit generalises parsing of associative operators from left-associative
    only (with some ugly hacks to support right-associative assignment) to properly
    left/right-associative operators.
    
    Parsing is still is not general enough to handle non-associative,
    non-highest-precedence prefix or non-highest-precedence
    postfix operators (e.g. `..` range syntax) and should be made to be.
    
    Lastly, this commit adds support for parsing right-associative `<-` (left arrow)
    operator with precedence higher than assignment as the operator for placement-in
    feature.
    
    ---
    
    This PR still needs various non-parser changes (e.g. src/grammar and tests) and I’m still working on these; the meat of the PR can already be reviewed, though, I think.
    
    Please review carefully. I made sure that quirks I have discovered so far are preserved (see e.g. https://github.com/rust-lang/rust/issues/29071) and am looking for more corner cases as I continue to work on tests et al, but there may be something I haven’t noticed or accounted for.
    
    EDIT: I’m also not sure I managed to preserve all the semantics with the range operator inside non-trivial expressions since these are a mess at the moment. Crater runs would be nice.
rustc: ./piston-image-0.3.11
cargo rustc -- -Ztime-passes
    Updating registry `https://github.com/rust-lang/crates.io-index`
   Compiling bitflags v0.3.2
   Compiling winapi v0.2.4
   Compiling glob v0.2.10
   Compiling winapi-build v0.1.1
   Compiling byteorder v0.3.13
   Compiling gcc v0.3.19
   Compiling lzw v0.8.0
   Compiling libc v0.1.10
   Compiling color_quant v1.0.0
   Compiling rustc-serialize v0.3.16
   Compiling advapi32-sys v0.1.2
   Compiling gif v0.5.1
   Compiling rand v0.3.11
   Compiling miniz-sys v0.1.6
   Compiling flate2 v0.2.9
   Compiling num v0.1.27
   Compiling png v0.3.1
   Compiling enum_primitive v0.0.1
   Compiling image v0.3.11 (file:///root/benchmarks/piston-image-0.3.11)
time: 0.039; rss: 45MB	parsing
time: 0.015; rss: 45MB	configuration 1
time: 0.000; rss: 45MB	recursion limit
time: 0.001; rss: 45MB	gated macro checking
time: 0.000; rss: 45MB	crate injection
time: 0.004; rss: 50MB	macro loading
time: 0.000; rss: 50MB	plugin loading
time: 0.000; rss: 50MB	plugin registration
time: 0.107; rss: 54MB	expansion
time: 0.004; rss: 54MB	complete gated feature checking 1
time: 0.022; rss: 54MB	configuration 2
time: 0.000; rss: 54MB	gated configuration checking
time: 0.011; rss: 54MB	maybe building test harness
time: 0.010; rss: 54MB	prelude injection
time: 0.001; rss: 54MB	checking that all macro invocations are gone
time: 0.000; rss: 54MB	checking for inline asm in case the target doesn't support it
time: 0.003; rss: 54MB	complete gated feature checking 2
time: 0.011; rss: 54MB	assigning node ids
time: 0.011; rss: 65MB	lowering ast -> hir
time: 0.006; rss: 69MB	indexing hir
time: 0.000; rss: 69MB	attribute checking
time: 0.007; rss: 69MB	early lint checks
time: 0.004; rss: 69MB	external crate/lib resolution
time: 0.003; rss: 69MB	language item collection
time: 0.038; rss: 91MB	resolution
time: 0.003; rss: 91MB	lifetime resolution
time: 0.000; rss: 91MB	looking for entry point
time: 0.001; rss: 91MB	looking for plugin registrar
time: 0.010; rss: 97MB	region resolution
time: 0.002; rss: 97MB	loop checking
time: 0.001; rss: 97MB	static item recursion checking
time: 0.013; rss: 97MB	type collecting
time: 0.003; rss: 97MB	variance inference
time: 0.040; rss: 116MB	coherence checking
time: 0.025; rss: 116MB	wf checking (old)
time: 0.049; rss: 121MB	item-types checking
time: 1.582; rss: 152MB	item-bodies checking
time: 0.000; rss: 152MB	drop-impl checking
time: 0.132; rss: 152MB	wf checking (new)
time: 0.079; rss: 152MB	const checking
time: 0.014; rss: 152MB	privacy checking
time: 0.000; rss: 152MB	stability index
time: 0.010; rss: 152MB	intrinsic checking
time: 0.003; rss: 152MB	effect checking
time: 0.024; rss: 152MB	match checking
time: 0.098; rss: 182MB	MIR dump
time: 0.011; rss: 164MB	liveness checking
time: 0.157; rss: 164MB	borrow checking
time: 0.095; rss: 164MB	rvalue checking
time: 0.003; rss: 164MB	reachability checking
time: 0.011; rss: 164MB	death checking
time: 0.008; rss: 164MB	stability checking
time: 0.000; rss: 164MB	unused lib feature checking
time: 0.073; rss: 164MB	lint checking
time: 0.000; rss: 164MB	resolving dependency formats
time: 2.835; rss: 279MB	translation
  time: 0.096; rss: 166MB	llvm function passes [0]
  time: 0.043; rss: 167MB	llvm module passes [0]
  time: 1.730; rss: 215MB	codegen passes [0]
  time: 0.001; rss: 183MB	codegen passes [0]
time: 2.071; rss: 183MB	LLVM passes
time: 0.151; rss: 184MB	linking
done
