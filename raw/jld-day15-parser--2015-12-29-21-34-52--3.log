commit 6e2a64b57a74f35bef215972adf1b803cff288bd
Merge: c1035b3 34dc0e0
Author: bors <bors@rust-lang.org>
Date:   Wed Dec 30 01:07:19 2015 +0000

    Auto merge of #29974 - brson:gold, r=alexcrichton
    
    When using `cc` for linking rustc will, if gold is available (by looking for `/usr/bin/ld.gold`), pass `-fuse-ld=gold` to `cc`.
    
    In some scenarios gold links much faster than ld. Servo uses it to considerably speed up linking. gold behaves nearly identically to ld (though I think there are rare corner cases that don't work still). I've run this through crater and everything there continues to link.
    
    To disable, pass `-C disable-gold`.
rustc: ./jld-day15-parser
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling day15 v0.1.0 (file:///root/benchmarks/jld-day15-parser)
time: 0.001; rss: 21MB	parsing
Lines of code:             72
Pre-expansion node count:  673
time: 0.000; rss: 21MB	configuration 1
time: 0.000; rss: 21MB	recursion limit
time: 0.000; rss: 21MB	gated macro checking
time: 0.000; rss: 21MB	crate injection
time: 0.003; rss: 26MB	macro loading
time: 0.000; rss: 26MB	plugin loading
time: 0.000; rss: 26MB	plugin registration
time: 0.002; rss: 27MB	expansion
time: 0.000; rss: 27MB	complete gated feature checking 1
time: 0.000; rss: 27MB	configuration 2
time: 0.000; rss: 27MB	gated configuration checking
time: 0.000; rss: 27MB	maybe building test harness
time: 0.000; rss: 27MB	prelude injection
time: 0.000; rss: 27MB	checking that all macro invocations are gone
time: 0.000; rss: 27MB	checking for inline asm in case the target doesn't support it
time: 0.000; rss: 27MB	complete gated feature checking 2
Post-expansion node count: 1176
time: 0.000; rss: 27MB	assigning node ids
time: 0.000; rss: 27MB	lowering ast -> hir
time: 0.000; rss: 27MB	indexing hir
time: 0.000; rss: 27MB	attribute checking
time: 0.000; rss: 27MB	early lint checks
time: 0.001; rss: 29MB	external crate/lib resolution
time: 0.000; rss: 29MB	language item collection
time: 0.002; rss: 35MB	resolution
time: 0.000; rss: 35MB	lifetime resolution
time: 0.000; rss: 35MB	looking for entry point
time: 0.000; rss: 35MB	looking for plugin registrar
time: 0.000; rss: 35MB	region resolution
time: 0.000; rss: 35MB	loop checking
time: 0.000; rss: 35MB	static item recursion checking
time: 0.001; rss: 40MB	type collecting
time: 0.000; rss: 40MB	variance inference
time: 0.010; rss: 51MB	coherence checking
time: 0.005; rss: 54MB	wf checking
time: 0.000; rss: 54MB	item-types checking
time: 1.253; rss: 90MB	item-bodies checking
time: 0.000; rss: 90MB	drop-impl checking
time: 0.001; rss: 90MB	const checking
time: 0.000; rss: 90MB	privacy checking
time: 0.000; rss: 90MB	stability index
time: 0.000; rss: 90MB	intrinsic checking
time: 0.000; rss: 90MB	effect checking
time: 0.000; rss: 90MB	match checking
time: 0.001; rss: 90MB	MIR dump
time: 0.000; rss: 91MB	liveness checking
time: 0.001; rss: 91MB	borrow checking
time: 0.002; rss: 91MB	rvalue checking
time: 0.000; rss: 91MB	reachability checking
time: 0.000; rss: 91MB	death checking
time: 0.000; rss: 91MB	stability checking
time: 0.000; rss: 91MB	unused lib feature checking
time: 0.003; rss: 89MB	lint checking
time: 0.001; rss: 89MB	resolving dependency formats
time: 0.000; rss: 89MB	erasing regions from MIR
time: 16.410; rss: 151MB	translation
  time: 0.014; rss: 90MB	llvm function passes [0]
  time: 0.002; rss: 90MB	llvm module passes [0]
  time: 0.263; rss: 100MB	codegen passes [0]
  time: 0.000; rss: 98MB	codegen passes [0]
time: 0.289; rss: 98MB	LLVM passes
  time: 0.035; rss: 98MB	running linker
time: 0.035; rss: 98MB	linking
done
