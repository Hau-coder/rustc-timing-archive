commit 7aec91734e0c12b8e36158566ad512a663111c9f
Merge: 3e268f2 1303687
Author: bors <bors@rust-lang.org>
Date:   Mon Oct 19 12:45:25 2015 +0000

    Auto merge of #29153 - arcnmx:thread-spawn, r=alexcrichton
    
    Fixes #29128
    
    Most of the weird lifetime things and `inner` stuff seems like leftover cruft from `thread::scoped`. Should `JoinInner` just be removed/merged with `JoinHandle`?
    
    Also is it okay to remove the `FnBox`? I'm not really sure why there were two allocations there...
rustc: ./html5ever-2015-05-15
cargo rustc -- -Ztime-passes
   Compiling html5ever v0.0.0 (file:///root/benchmarks/html5ever-2015-05-15)
time: 0.018; rss: 39MB	parsing
time: 0.005; rss: 39MB	configuration 1
time: 0.000; rss: 39MB	recursion limit
time: 0.000; rss: 39MB	gated macro checking
time: 0.000; rss: 39MB	crate injection
time: 0.020; rss: 55MB	macro loading
time: 0.001; rss: 55MB	plugin loading
time: 0.000; rss: 55MB	plugin registration
time: 1.007; rss: 71MB	expansion
time: 0.004; rss: 71MB	complete gated feature checking 1
time: 0.027; rss: 71MB	configuration 2
time: 0.000; rss: 71MB	gated configuration checking
time: 0.014; rss: 71MB	maybe building test harness
time: 0.013; rss: 71MB	prelude injection
time: 0.002; rss: 71MB	checking that all macro invocations are gone
time: 0.000; rss: 71MB	checking for inline asm in case the target doesn't support it
time: 0.003; rss: 71MB	complete gated feature checking 2
time: 0.013; rss: 71MB	assigning node ids
time: 0.017; rss: 85MB	lowering ast -> hir
time: 0.007; rss: 89MB	indexing hir
time: 0.000; rss: 89MB	attribute checking
time: 0.010; rss: 89MB	early lint checks
time: 0.004; rss: 89MB	external crate/lib resolution
time: 0.003; rss: 89MB	language item collection
time: 0.033; rss: 107MB	resolution
time: 0.002; rss: 107MB	lifetime resolution
time: 0.000; rss: 107MB	looking for entry point
time: 0.001; rss: 107MB	looking for plugin registrar
time: 0.015; rss: 111MB	region resolution
time: 0.002; rss: 111MB	loop checking
time: 0.002; rss: 111MB	static item recursion checking
time: 0.008; rss: 112MB	type collecting
time: 0.003; rss: 112MB	variance inference
time: 0.038; rss: 131MB	coherence checking
time: 0.007; rss: 131MB	wf checking (old)
time: 0.321; rss: 162MB	item-types checking
time: 0.593; rss: 172MB	item-bodies checking
time: 0.000; rss: 172MB	drop-impl checking
time: 0.027; rss: 172MB	wf checking (new)
time: 0.077; rss: 172MB	const checking
time: 0.013; rss: 172MB	privacy checking
time: 0.001; rss: 172MB	stability index
time: 0.004; rss: 172MB	intrinsic checking
time: 0.003; rss: 172MB	effect checking
time: 0.027; rss: 172MB	match checking
time: 0.094; rss: 191MB	MIR dump
time: 0.012; rss: 196MB	liveness checking
time: 0.101; rss: 198MB	borrow checking
time: 0.040; rss: 198MB	rvalue checking
time: 0.003; rss: 198MB	reachability checking
time: 0.010; rss: 198MB	death checking
time: 0.007; rss: 198MB	stability checking
time: 0.000; rss: 198MB	unused lib feature checking
time: 0.055; rss: 198MB	lint checking
time: 0.000; rss: 198MB	resolving dependency formats
time: 0.475; rss: 244MB	translation
  time: 0.019; rss: 116MB	llvm function passes
  time: 0.006; rss: 117MB	llvm module passes
  time: 0.336; rss: 153MB	codegen passes
  time: 0.001; rss: 127MB	codegen passes
time: 0.419; rss: 127MB	LLVM passes
time: 0.060; rss: 127MB	linking
done
