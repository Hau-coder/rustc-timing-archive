commit a216e847272ddbd3033037b606eaf2d801c250b9
Merge: c340ea1 e787863
Author: bors <bors@rust-lang.org>
Date:   Wed Nov 4 02:13:05 2015 +0000

    Auto merge of #29217 - nikomatsakis:mir-trans, r=dotdash
    
    This branch implements a variant of trans that is based on MIR. It is very incomplete (intentionally), and had only the goal of laying out enough work to enable more incremental follow-on patches. Currently, only fns tagged with `#[rustc_mir]` use the new trans code. I plan to build up a meta-issue as well that tracks the various "not-yet-implemented" points. The only fn that has been tested so far is this amazingly complex "spike" fn:
    
    ```rust
    #[rustc_mir]
    fn sum(x: i32, y: i32) -> i32 {
        x + y
    }
    ```
    
    In general, the most interesting commit is the last one. There are some points on which I would like feedback from @rust-lang/compiler:
    
    - I did not use `Datum`. Originally, I thought that maybe just a `ValueRef` would be enough but I wound up with two very simple structures, `LvalueRef` and `OperandRef`, that just package up a `ValueRef` and a type. Because of MIR's structure, you don't wind up mixing by-ref and by-value so much, and I tend to think that a thinner abstraction layer is better here, but I'm not sure.
    - Related to the above, I expect that sooner or later we will analyze temps (and maybe variables too) to find those whose address is never taken and which are word-sized and which perhaps meet a few other criteria. For those, we'll probably want to avoid the alloca, just because it means prettier code.
    - I generally tried to re-use data structures from elsewhere in trans, though I'm sure we can trim these down.
    - I didn't do any debuginfo primarily because it seems to want node-ids and we have only spans. I haven't really read into that code so I don't know what's going on there.
    
    r? @nrc
rustc: ./html5ever-2015-05-15
cargo rustc -- -Ztime-passes
makefile:2: recipe for target 'all' failed
done
