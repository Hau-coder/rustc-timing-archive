commit 1586005a1d15e7d26b6c46a33e7a9643de9a77ac
Merge: 0672ed4 52883ab
Author: bors <bors@rust-lang.org>
Date:   Mon Jan 11 19:03:18 2016 +0000

    Auto merge of #30534 - bluss:binary-heap-fast-pop, r=Gankro
    
    BinaryHeap: Use full sift down in .pop()
    
    .sift_down can either choose to compare the element on the way down (and
    place it during descent), or to sift down an element fully, then sift
    back up to place it.
    
    A previous PR changed .sift_down() to the former behavior, which is much
    faster for relatively small heaps and for elements that are cheap to
    compare.
    
    A benchmarking run suggested that BinaryHeap::pop() suffers
    improportionally from this, and that it should use the second strategy
    instead. It's logical since .pop() brings last element from the
    heapified vector into index 0, it's very likely that this element will
    end up at the bottom again.
    
    Closes #29969
    Previous PR #29811
rustc: ./html5ever-2015-05-15
cargo rustc -- -Ztime-passes -Zinput-stats
    Updating git repository `https://github.com/reem/rust-mac`
    Updating registry `https://github.com/rust-lang/crates.io-index`
    Updating git repository `https://github.com/servo/string-cache`
   Compiling winapi-build v0.1.1
   Compiling rustc-serialize v0.3.16
   Compiling lazy_static v0.1.15
   Compiling winapi v0.2.5
   Compiling libc v0.2.4
   Compiling phf_shared v0.7.10
   Compiling mac v0.0.2 (https://github.com/reem/rust-mac#6316d3f4)
   Compiling void v0.0.5
   Compiling unreachable v0.0.2
   Compiling debug_unreachable v0.0.6
   Compiling advapi32-sys v0.1.2
   Compiling kernel32-sys v0.2.1
   Compiling phf v0.7.10
   Compiling time v0.1.34
   Compiling rand v0.3.13
   Compiling log v0.3.4
   Compiling phf_generator v0.7.10
   Compiling string_cache_shared v0.1.12
   Compiling phf_macros v0.7.10
Build failed, waiting for other jobs to finish...
makefile:2: recipe for target 'all' failed
done
