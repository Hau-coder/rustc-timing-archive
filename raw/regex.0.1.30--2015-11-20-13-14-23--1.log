commit 6a6b97cf025b8a1fb92fc48a4dc06611d2970861
Merge: 6827661 c1ad5af
Author: bors <bors@rust-lang.org>
Date:   Fri Nov 20 18:13:10 2015 +0000

    Auto merge of #29822 - petrochenkov:pubexport, r=alexcrichton
    
    This patch implements the plan described in https://internals.rust-lang.org/t/privacy-and-its-interaction-with-docs-lints-and-stability/2880 with one deviation.
    
    It turns out, that rustdoc needs the "directly public" set for its docs inlining logic, so the privacy pass have to produce three sets and not two. Three is arguably too many, so I merged them in one map:
    `public_items/exported_items/reachable_items: NodeSet => access_levels: NodeMap<AccessLevel>`
    
    r? @alexcrichton
rustc: ./regex.0.1.30
cargo rustc -- -Ztime-passes
   Compiling regex v0.1.30 (file:///root/benchmarks/regex.0.1.30)
time: 0.051; rss: 45MB	parsing
time: 0.010; rss: 46MB	configuration 1
time: 0.000; rss: 46MB	recursion limit
time: 0.001; rss: 46MB	gated macro checking
time: 0.000; rss: 46MB	crate injection
time: 0.003; rss: 48MB	macro loading
time: 0.000; rss: 48MB	plugin loading
time: 0.000; rss: 48MB	plugin registration
time: 0.058; rss: 51MB	expansion
time: 0.001; rss: 51MB	complete gated feature checking 1
time: 0.011; rss: 51MB	configuration 2
time: 0.000; rss: 51MB	gated configuration checking
time: 0.005; rss: 51MB	maybe building test harness
time: 0.005; rss: 51MB	prelude injection
time: 0.001; rss: 51MB	checking that all macro invocations are gone
time: 0.000; rss: 51MB	checking for inline asm in case the target doesn't support it
time: 0.001; rss: 51MB	complete gated feature checking 2
time: 0.005; rss: 51MB	assigning node ids
time: 0.007; rss: 59MB	lowering ast -> hir
time: 0.002; rss: 61MB	indexing hir
time: 0.000; rss: 61MB	attribute checking
time: 0.004; rss: 61MB	early lint checks
time: 0.001; rss: 61MB	external crate/lib resolution
time: 0.001; rss: 61MB	language item collection
time: 0.011; rss: 68MB	resolution
time: 0.001; rss: 68MB	lifetime resolution
time: 0.000; rss: 68MB	looking for entry point
time: 0.000; rss: 68MB	looking for plugin registrar
time: 0.006; rss: 73MB	region resolution
time: 0.001; rss: 73MB	loop checking
time: 0.001; rss: 73MB	static item recursion checking
time: 0.004; rss: 76MB	type collecting
time: 0.000; rss: 76MB	variance inference
time: 0.021; rss: 92MB	coherence checking
time: 0.005; rss: 92MB	wf checking (old)
time: 0.090; rss: 97MB	item-types checking
time: 0.207; rss: 109MB	item-bodies checking
time: 0.000; rss: 109MB	drop-impl checking
time: 0.010; rss: 109MB	wf checking (new)
time: 0.027; rss: 111MB	const checking
time: 0.004; rss: 111MB	privacy checking
time: 0.000; rss: 111MB	stability index
time: 0.001; rss: 111MB	intrinsic checking
time: 0.001; rss: 111MB	effect checking
time: 0.003; rss: 111MB	match checking
time: 0.017; rss: 115MB	MIR dump
time: 0.003; rss: 117MB	liveness checking
time: 0.020; rss: 117MB	borrow checking
time: 0.007; rss: 117MB	rvalue checking
time: 0.000; rss: 117MB	reachability checking
time: 0.003; rss: 117MB	death checking
time: 0.002; rss: 117MB	stability checking
time: 0.000; rss: 117MB	unused lib feature checking
time: 0.021; rss: 117MB	lint checking
time: 0.000; rss: 117MB	resolving dependency formats
time: 0.002; rss: 117MB	erasing regions from MIR
time: 0.659; rss: 186MB	translation
  time: 0.037; rss: 114MB	llvm function passes [0]
  time: 0.020; rss: 114MB	llvm module passes [0]
  time: 0.622; rss: 140MB	codegen passes [0]
  time: 0.001; rss: 127MB	codegen passes [0]
time: 0.759; rss: 127MB	LLVM passes
time: 0.067; rss: 126MB	linking
done
