commit 9007d63f2484c0c19cb122cd909db3efe3607313
Merge: 27a1834 b0a9b3d
Author: bors <bors@rust-lang.org>
Date:   Mon Dec 28 20:11:34 2015 +0000

    Auto merge of #30548 - mmcco:linux-syscall, r=brson
    
    There's no need for us to redeclare it in an extern block.
    
    We should probably put the syscall number constants in libc too.
rustc: ./html5ever-2015-05-15
cargo rustc -- -Ztime-passes -Zinput-stats
    Updating registry `https://github.com/rust-lang/crates.io-index`
    Updating git repository `https://github.com/reem/rust-mac`
    Updating git repository `https://github.com/servo/string-cache`
   Compiling libc v0.2.4
   Compiling winapi v0.2.5
   Compiling lazy_static v0.1.15
   Compiling rustc-serialize v0.3.16
   Compiling phf_shared v0.7.9
   Compiling mac v0.0.2 (https://github.com/reem/rust-mac#6316d3f4)
   Compiling winapi-build v0.1.1
   Compiling void v0.0.5
   Compiling unreachable v0.0.2
   Compiling debug_unreachable v0.0.6
   Compiling phf v0.7.9
   Compiling kernel32-sys v0.2.1
   Compiling advapi32-sys v0.1.2
   Compiling log v0.3.4
   Compiling rand v0.3.12
   Compiling time v0.1.34
   Compiling phf_generator v0.7.9
   Compiling phf_macros v0.7.9
   Compiling string_cache_shared v0.1.12
   Compiling string_cache v0.1.17
   Compiling num v0.1.29
   Compiling html5ever_macros v0.0.0 (file:///root/benchmarks/html5ever-2015-05-15)
   Compiling serde v0.6.7
   Compiling html5ever v0.0.0 (file:///root/benchmarks/html5ever-2015-05-15)
time: 0.020; rss: 37MB	parsing
Lines of code:             6363
Pre-expansion node count:  28191
time: 0.006; rss: 41MB	configuration 1
time: 0.000; rss: 41MB	recursion limit
time: 0.000; rss: 41MB	gated macro checking
time: 0.000; rss: 41MB	crate injection
time: 0.022; rss: 57MB	macro loading
time: 0.001; rss: 58MB	plugin loading
time: 0.000; rss: 58MB	plugin registration
time: 2.377; rss: 75MB	expansion
time: 0.004; rss: 75MB	complete gated feature checking 1
time: 0.033; rss: 74MB	configuration 2
time: 0.000; rss: 74MB	gated configuration checking
time: 0.016; rss: 74MB	maybe building test harness
time: 0.015; rss: 74MB	prelude injection
time: 0.002; rss: 74MB	checking that all macro invocations are gone
time: 0.000; rss: 74MB	checking for inline asm in case the target doesn't support it
time: 0.003; rss: 74MB	complete gated feature checking 2
Post-expansion node count: 171717
time: 0.016; rss: 74MB	assigning node ids
time: 0.022; rss: 86MB	lowering ast -> hir
time: 0.005; rss: 90MB	indexing hir
time: 0.000; rss: 90MB	attribute checking
time: 0.010; rss: 90MB	early lint checks
time: 0.002; rss: 73MB	external crate/lib resolution
time: 0.002; rss: 73MB	language item collection
time: 0.025; rss: 86MB	resolution
time: 0.002; rss: 86MB	lifetime resolution
time: 0.000; rss: 86MB	looking for entry point
time: 0.000; rss: 86MB	looking for plugin registrar
time: 0.016; rss: 92MB	region resolution
time: 0.002; rss: 92MB	loop checking
time: 0.002; rss: 92MB	static item recursion checking
time: 0.007; rss: 96MB	type collecting
time: 0.000; rss: 96MB	variance inference
time: 0.033; rss: 121MB	coherence checking
time: 0.027; rss: 121MB	wf checking
time: 0.322; rss: 145MB	item-types checking
time: 0.593; rss: 160MB	item-bodies checking
time: 0.000; rss: 160MB	drop-impl checking
time: 0.076; rss: 161MB	const checking
time: 0.011; rss: 161MB	privacy checking
time: 0.001; rss: 161MB	stability index
time: 0.004; rss: 161MB	intrinsic checking
time: 0.003; rss: 161MB	effect checking
time: 0.027; rss: 161MB	match checking
time: 0.065; rss: 166MB	MIR dump
time: 0.012; rss: 166MB	liveness checking
time: 0.100; rss: 173MB	borrow checking
time: 0.035; rss: 173MB	rvalue checking
time: 0.003; rss: 173MB	reachability checking
time: 0.007; rss: 173MB	death checking
time: 0.008; rss: 173MB	stability checking
time: 0.000; rss: 173MB	unused lib feature checking
time: 0.072; rss: 173MB	lint checking
time: 0.000; rss: 173MB	resolving dependency formats
time: 0.007; rss: 173MB	erasing regions from MIR
time: 0.554; rss: 214MB	translation
  time: 0.019; rss: 124MB	llvm function passes [0]
  time: 0.007; rss: 125MB	llvm module passes [0]
  time: 0.335; rss: 161MB	codegen passes [0]
  time: 0.001; rss: 136MB	codegen passes [0]
time: 0.424; rss: 136MB	LLVM passes
time: 0.061; rss: 134MB	linking
done
