commit b31cc644d188126de6728b08b1cde707c1dc9400
Merge: 8809a33 d09220d
Author: bors <bors@rust-lang.org>
Date:   Tue Nov 17 18:24:19 2015 +0000

    Auto merge of #29766 - oli-obk:impl_item, r=nikomatsakis
    
    [breaking change]
    
    I'm not sure if those renames are ok. [TokenType::Tt* to TokenType::*](https://github.com/rust-lang/rust/pull/29582) was obvious, but for all those Item-enums it's less obvious to me what the right way forward is due to the underscore.
rustc: ./piston-image-0.3.11
cargo rustc -- -Ztime-passes
    Updating registry `https://github.com/rust-lang/crates.io-index`
   Compiling byteorder v0.3.13
   Compiling lzw v0.8.0
   Compiling rustc-serialize v0.3.16
   Compiling winapi v0.2.5
   Compiling libc v0.2.2
   Compiling glob v0.2.10
   Compiling gcc v0.3.19
   Compiling bitflags v0.3.3
   Compiling winapi-build v0.1.1
   Compiling color_quant v1.0.0
   Compiling advapi32-sys v0.1.2
   Compiling rand v0.3.12
   Compiling gif v0.5.1
   Compiling miniz-sys v0.1.7
   Compiling flate2 v0.2.11
   Compiling num v0.1.27
   Compiling png v0.3.1
   Compiling enum_primitive v0.0.1
   Compiling image v0.3.11 (file:///root/benchmarks/piston-image-0.3.11)
time: 0.041; rss: 46MB	parsing
time: 0.015; rss: 46MB	configuration 1
time: 0.000; rss: 46MB	recursion limit
time: 0.001; rss: 46MB	gated macro checking
time: 0.000; rss: 46MB	crate injection
time: 0.005; rss: 50MB	macro loading
time: 0.000; rss: 50MB	plugin loading
time: 0.000; rss: 50MB	plugin registration
time: 0.112; rss: 54MB	expansion
time: 0.004; rss: 54MB	complete gated feature checking 1
time: 0.023; rss: 54MB	configuration 2
time: 0.000; rss: 54MB	gated configuration checking
time: 0.012; rss: 54MB	maybe building test harness
time: 0.011; rss: 54MB	prelude injection
time: 0.002; rss: 54MB	checking that all macro invocations are gone
time: 0.000; rss: 54MB	checking for inline asm in case the target doesn't support it
time: 0.004; rss: 54MB	complete gated feature checking 2
time: 0.012; rss: 54MB	assigning node ids
time: 0.013; rss: 65MB	lowering ast -> hir
time: 0.007; rss: 69MB	indexing hir
time: 0.000; rss: 69MB	attribute checking
time: 0.008; rss: 69MB	early lint checks
time: 0.004; rss: 70MB	external crate/lib resolution
time: 0.003; rss: 70MB	language item collection
time: 0.040; rss: 92MB	resolution
time: 0.003; rss: 92MB	lifetime resolution
time: 0.000; rss: 92MB	looking for entry point
time: 0.001; rss: 92MB	looking for plugin registrar
time: 0.011; rss: 98MB	region resolution
time: 0.002; rss: 98MB	loop checking
time: 0.002; rss: 98MB	static item recursion checking
time: 0.013; rss: 102MB	type collecting
time: 0.003; rss: 102MB	variance inference
time: 0.042; rss: 119MB	coherence checking
time: 0.026; rss: 119MB	wf checking (old)
time: 0.051; rss: 121MB	item-types checking
time: 1.610; rss: 152MB	item-bodies checking
time: 0.000; rss: 152MB	drop-impl checking
time: 0.134; rss: 152MB	wf checking (new)
time: 0.073; rss: 154MB	const checking
time: 0.012; rss: 154MB	privacy checking
time: 0.000; rss: 154MB	stability index
time: 0.010; rss: 154MB	intrinsic checking
time: 0.003; rss: 154MB	effect checking
time: 0.025; rss: 154MB	match checking
time: 0.097; rss: 181MB	MIR dump
time: 0.011; rss: 181MB	liveness checking
time: 0.152; rss: 181MB	borrow checking
time: 0.076; rss: 181MB	rvalue checking
time: 0.004; rss: 181MB	reachability checking
time: 0.011; rss: 181MB	death checking
time: 0.008; rss: 181MB	stability checking
time: 0.000; rss: 181MB	unused lib feature checking
time: 0.073; rss: 181MB	lint checking
time: 0.000; rss: 181MB	resolving dependency formats
time: 2.796; rss: 300MB	translation
  time: 0.098; rss: 168MB	llvm function passes [0]
  time: 0.045; rss: 169MB	llvm module passes [0]
  time: 1.741; rss: 218MB	codegen passes [0]
  time: 0.001; rss: 185MB	codegen passes [0]
time: 2.094; rss: 185MB	LLVM passes
time: 0.153; rss: 184MB	linking
done
