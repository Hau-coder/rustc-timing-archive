commit eb1d018c01f70bcfc38bc8365a3de71c1564f694
Merge: dfe88bf 6405122
Author: bors <bors@rust-lang.org>
Date:   Tue Dec 1 19:47:38 2015 +0000

    Auto merge of #25570 - oli-obk:const_indexing, r=nikomatsakis
    
    This PR allows the constant evaluation of index operations on constant arrays and repeat expressions. This allows index expressions to appear in the expression path of the length expression of a repeat expression or an array type.
    
    An example is
    
    ```rust
    const ARR: [usize; 5] = [1, 2, 3, 4, 5];
    const ARR2: [usize; ARR[1]] = [42, 99];
    ```
    
    In most other locations llvm's const evaluator figures it out already. This is not specific to index expressions and could be remedied in the future.
rustc: ./piston-image-0.3.11
cargo rustc -- -Ztime-passes
   Compiling image v0.3.11 (file:///root/benchmarks/piston-image-0.3.11)
time: 0.040; rss: 46MB	parsing
time: 0.014; rss: 46MB	configuration 1
time: 0.000; rss: 46MB	recursion limit
time: 0.001; rss: 46MB	gated macro checking
time: 0.000; rss: 46MB	crate injection
time: 0.004; rss: 51MB	macro loading
time: 0.000; rss: 51MB	plugin loading
time: 0.000; rss: 51MB	plugin registration
time: 0.107; rss: 54MB	expansion
time: 0.004; rss: 54MB	complete gated feature checking 1
time: 0.022; rss: 54MB	configuration 2
time: 0.000; rss: 54MB	gated configuration checking
time: 0.012; rss: 54MB	maybe building test harness
time: 0.011; rss: 54MB	prelude injection
time: 0.002; rss: 54MB	checking that all macro invocations are gone
time: 0.000; rss: 54MB	checking for inline asm in case the target doesn't support it
time: 0.003; rss: 54MB	complete gated feature checking 2
time: 0.011; rss: 54MB	assigning node ids
time: 0.012; rss: 65MB	lowering ast -> hir
time: 0.006; rss: 70MB	indexing hir
time: 0.000; rss: 70MB	attribute checking
time: 0.007; rss: 70MB	early lint checks
time: 0.002; rss: 70MB	external crate/lib resolution
time: 0.001; rss: 70MB	language item collection
time: 0.038; rss: 91MB	resolution
time: 0.003; rss: 91MB	lifetime resolution
time: 0.000; rss: 91MB	looking for entry point
time: 0.000; rss: 91MB	looking for plugin registrar
time: 0.010; rss: 98MB	region resolution
time: 0.002; rss: 98MB	loop checking
time: 0.001; rss: 98MB	static item recursion checking
time: 0.012; rss: 101MB	type collecting
time: 0.000; rss: 101MB	variance inference
time: 0.034; rss: 118MB	coherence checking
time: 0.026; rss: 120MB	wf checking (old)
time: 0.051; rss: 123MB	item-types checking
time: 1.608; rss: 157MB	item-bodies checking
time: 0.000; rss: 157MB	drop-impl checking
time: 0.135; rss: 157MB	wf checking (new)
time: 0.072; rss: 157MB	const checking
time: 0.012; rss: 157MB	privacy checking
time: 0.001; rss: 157MB	stability index
time: 0.010; rss: 157MB	intrinsic checking
time: 0.003; rss: 157MB	effect checking
time: 0.024; rss: 157MB	match checking
time: 0.091; rss: 170MB	MIR dump
time: 0.011; rss: 170MB	liveness checking
time: 0.149; rss: 170MB	borrow checking
time: 0.075; rss: 170MB	rvalue checking
time: 0.003; rss: 170MB	reachability checking
time: 0.009; rss: 170MB	death checking
time: 0.008; rss: 170MB	stability checking
time: 0.000; rss: 170MB	unused lib feature checking
time: 0.072; rss: 170MB	lint checking
time: 0.000; rss: 170MB	resolving dependency formats
time: 0.008; rss: 170MB	erasing regions from MIR
time: 2.772; rss: 285MB	translation
  time: 0.099; rss: 168MB	llvm function passes [0]
  time: 0.043; rss: 168MB	llvm module passes [0]
  time: 1.746; rss: 217MB	codegen passes [0]
  time: 0.001; rss: 185MB	codegen passes [0]
time: 2.092; rss: 185MB	LLVM passes
time: 0.152; rss: 185MB	linking
done
