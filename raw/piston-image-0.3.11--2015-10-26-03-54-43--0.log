commit c44316d4a1ad0fe01ae366e163993aa3980c755f
Merge: 72ed590 e8ddbba
Author: bors <bors@rust-lang.org>
Date:   Mon Oct 26 08:27:59 2015 +0000

    Auto merge of #29303 - petrochenkov:unistrimp, r=eddyb
    
    And use `VariantData` instead of `P<VariantData>` in `Item_` and `Variant_`
    
    Improvements suggested by @eddyb in https://github.com/rust-lang/rust/pull/28816#discussion_r42483587 and https://github.com/rust-lang/rust/pull/28816#discussion_r42483648
    
    plugin-[breaking-change]
    
    r? @eddyb
rustc: ./piston-image-0.3.11
cargo rustc -- -Ztime-passes
    Updating registry `https://github.com/rust-lang/crates.io-index`
   Compiling glob v0.2.10
   Compiling gcc v0.3.19
   Compiling winapi-build v0.1.1
   Compiling byteorder v0.3.13
   Compiling libc v0.1.10
   Compiling bitflags v0.3.2
   Compiling winapi v0.2.4
   Compiling rustc-serialize v0.3.16
   Compiling lzw v0.8.0
   Compiling advapi32-sys v0.1.2
   Compiling color_quant v1.0.0
   Compiling rand v0.3.11
   Compiling gif v0.5.1
   Compiling miniz-sys v0.1.6
   Compiling flate2 v0.2.9
   Compiling num v0.1.27
   Compiling enum_primitive v0.0.1
   Compiling png v0.3.1
   Compiling image v0.3.11 (file:///root/benchmarks/piston-image-0.3.11)
time: 0.039; rss: 45MB	parsing
time: 0.014; rss: 45MB	configuration 1
time: 0.000; rss: 45MB	recursion limit
time: 0.001; rss: 45MB	gated macro checking
time: 0.000; rss: 45MB	crate injection
time: 0.004; rss: 50MB	macro loading
time: 0.000; rss: 50MB	plugin loading
time: 0.000; rss: 50MB	plugin registration
time: 0.105; rss: 53MB	expansion
time: 0.004; rss: 53MB	complete gated feature checking 1
time: 0.022; rss: 53MB	configuration 2
time: 0.000; rss: 53MB	gated configuration checking
time: 0.011; rss: 53MB	maybe building test harness
time: 0.010; rss: 53MB	prelude injection
time: 0.001; rss: 53MB	checking that all macro invocations are gone
time: 0.000; rss: 53MB	checking for inline asm in case the target doesn't support it
time: 0.003; rss: 53MB	complete gated feature checking 2
time: 0.011; rss: 53MB	assigning node ids
time: 0.012; rss: 64MB	lowering ast -> hir
time: 0.006; rss: 69MB	indexing hir
time: 0.000; rss: 69MB	attribute checking
time: 0.007; rss: 69MB	early lint checks
time: 0.004; rss: 69MB	external crate/lib resolution
time: 0.002; rss: 69MB	language item collection
time: 0.039; rss: 91MB	resolution
time: 0.002; rss: 92MB	lifetime resolution
time: 0.000; rss: 92MB	looking for entry point
time: 0.001; rss: 92MB	looking for plugin registrar
time: 0.010; rss: 96MB	region resolution
time: 0.001; rss: 96MB	loop checking
time: 0.001; rss: 96MB	static item recursion checking
time: 0.013; rss: 96MB	type collecting
time: 0.003; rss: 96MB	variance inference
time: 0.039; rss: 115MB	coherence checking
time: 0.025; rss: 115MB	wf checking (old)
time: 0.049; rss: 117MB	item-types checking
time: 1.588; rss: 152MB	item-bodies checking
time: 0.000; rss: 152MB	drop-impl checking
time: 0.131; rss: 152MB	wf checking (new)
time: 0.078; rss: 152MB	const checking
time: 0.013; rss: 152MB	privacy checking
time: 0.000; rss: 152MB	stability index
time: 0.009; rss: 152MB	intrinsic checking
time: 0.003; rss: 152MB	effect checking
time: 0.024; rss: 152MB	match checking
time: 0.098; rss: 180MB	MIR dump
time: 0.011; rss: 180MB	liveness checking
time: 0.154; rss: 180MB	borrow checking
time: 0.094; rss: 180MB	rvalue checking
time: 0.003; rss: 180MB	reachability checking
time: 0.011; rss: 180MB	death checking
time: 0.008; rss: 180MB	stability checking
time: 0.000; rss: 180MB	unused lib feature checking
time: 0.074; rss: 180MB	lint checking
time: 0.000; rss: 180MB	resolving dependency formats
time: 2.800; rss: 299MB	translation
  time: 0.098; rss: 166MB	llvm function passes
  time: 0.044; rss: 166MB	llvm module passes
  time: 1.724; rss: 215MB	codegen passes
  time: 0.001; rss: 182MB	codegen passes
time: 2.063; rss: 182MB	LLVM passes
time: 0.150; rss: 181MB	linking
done
