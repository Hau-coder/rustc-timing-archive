commit 9e11845d77264c52d1066c0adca184dd0a418ac1
Merge: 638b260 747f0be
Author: bors <bors@rust-lang.org>
Date:   Mon Sep 28 15:58:44 2015 +0000

    Auto merge of #28668 - alexcrichton:crossing-with-jemalloc, r=nrc
    
    This commit updates the compiler to not attempt to use jemalloc for platforms
    where jemalloc is never enabled. Currently the compiler attempts to link in
    jemalloc based on whether `--disable-jemalloc` was specified at build time for
    the compiler itself, but this is only the right decision for the host target,
    not for other targets.
    
    This still leaves a hole open where a set of target libraries are downloaded
    which were built with `--disable-jemalloc` and the compiler is unaware of that,
    but this is a pretty rare case so it can always be fixed later.
rustc: ./helloworld
/root/rust/x86_64-unknown-linux-gnu/stage2/bin/rustc -Ztime-passes hello.rs
time: 0.000; rss: 29MB	parsing
time: 0.000; rss: 29MB	configuration 1
time: 0.000; rss: 34MB	recursion limit
time: 0.000; rss: 34MB	gated macro checking
time: 0.000; rss: 34MB	crate injection
time: 0.002; rss: 35MB	macro loading
time: 0.000; rss: 35MB	plugin loading
time: 0.000; rss: 35MB	plugin registration
time: 0.001; rss: 35MB	expansion
time: 0.000; rss: 35MB	complete gated feature checking 1
time: 0.000; rss: 35MB	configuration 2
time: 0.000; rss: 35MB	gated configuration checking
time: 0.000; rss: 35MB	maybe building test harness
time: 0.000; rss: 35MB	prelude injection
time: 0.000; rss: 35MB	checking that all macro invocations are gone
time: 0.000; rss: 35MB	checking for inline asm in case the target doesn't support it
time: 0.000; rss: 35MB	complete gated feature checking 2
time: 0.000; rss: 35MB	assigning node ids
time: 0.000; rss: 35MB	lowering ast -> hir
time: 0.000; rss: 35MB	indexing hir
time: 0.000; rss: 35MB	early lint checks
time: 0.001; rss: 39MB	external crate/lib resolution
time: 0.000; rss: 39MB	language item collection
time: 0.001; rss: 43MB	resolution
time: 0.000; rss: 43MB	lifetime resolution
time: 0.000; rss: 43MB	looking for entry point
time: 0.000; rss: 43MB	looking for plugin registrar
time: 0.000; rss: 43MB	region resolution
time: 0.000; rss: 43MB	loop checking
time: 0.000; rss: 43MB	static item recursion checking
time: 0.000; rss: 43MB	type collecting
time: 0.000; rss: 43MB	variance inference
time: 0.004; rss: 51MB	coherence checking
time: 0.000; rss: 51MB	wf checking (old)
time: 0.000; rss: 51MB	item-types checking
time: 0.000; rss: 51MB	item-bodies checking
time: 0.000; rss: 51MB	drop-impl checking
time: 0.000; rss: 51MB	wf checking (new)
time: 0.000; rss: 51MB	MIR dump
time: 0.000; rss: 51MB	const checking
time: 0.000; rss: 51MB	privacy checking
time: 0.000; rss: 51MB	stability index
time: 0.000; rss: 51MB	intrinsic checking
time: 0.000; rss: 51MB	effect checking
time: 0.000; rss: 51MB	match checking
time: 0.000; rss: 51MB	liveness checking
time: 0.000; rss: 51MB	borrow checking
time: 0.000; rss: 51MB	rvalue checking
time: 0.000; rss: 51MB	reachability checking
time: 0.000; rss: 51MB	death checking
time: 0.000; rss: 51MB	stability checking
time: 0.000; rss: 51MB	unused lib feature checking
time: 0.000; rss: 51MB	lint checking
time: 0.001; rss: 51MB	resolving dependency formats
time: 0.004; rss: 64MB	translation
  time: 0.000; rss: 66MB	llvm function passes
  time: 0.000; rss: 66MB	llvm module passes
  time: 0.001; rss: 67MB	codegen passes
  time: 0.000; rss: 67MB	codegen passes
time: 0.002; rss: 67MB	LLVM passes
  time: 0.085; rss: 73MB	running linker
time: 0.086; rss: 73MB	linking
done
