commit fa7a3c210d7bd7c16c1f1201afaae8df76804687
Merge: ee88e04 744df28
Author: bors <bors@rust-lang.org>
Date:   Sat Oct 31 04:04:45 2015 +0000

    Auto merge of #29484 - steveklabnik:gh29330, r=brson
    
    These two commits do a few things:
    
    1. reformat to 80 cols
    2. use the reference-style links where appropriate for improved in-source readability
    3. adds a few links, tweaks a couple of words, `3` -> `three`, stuff like that
    
    While the diff is big due to these edits, there's no significant content change.
    
    r? @brson
rustc: ./piston-image-0.3.11
cargo rustc -- -Ztime-passes
    Updating registry `https://github.com/rust-lang/crates.io-index`
   Compiling lzw v0.8.0
   Compiling color_quant v1.0.0
   Compiling byteorder v0.3.13
   Compiling rustc-serialize v0.3.16
   Compiling bitflags v0.3.2
   Compiling gcc v0.3.19
   Compiling glob v0.2.10
   Compiling winapi-build v0.1.1
   Compiling libc v0.1.12
   Compiling winapi v0.2.4
   Compiling advapi32-sys v0.1.2
   Compiling gif v0.5.1
   Compiling rand v0.3.11
   Compiling miniz-sys v0.1.6
   Compiling flate2 v0.2.9
   Compiling num v0.1.27
   Compiling png v0.3.1
   Compiling enum_primitive v0.0.1
   Compiling image v0.3.11 (file:///root/benchmarks/piston-image-0.3.11)
time: 0.039; rss: 45MB	parsing
time: 0.015; rss: 45MB	configuration 1
time: 0.000; rss: 45MB	recursion limit
time: 0.001; rss: 45MB	gated macro checking
time: 0.000; rss: 45MB	crate injection
time: 0.005; rss: 50MB	macro loading
time: 0.000; rss: 50MB	plugin loading
time: 0.000; rss: 50MB	plugin registration
time: 0.108; rss: 53MB	expansion
time: 0.004; rss: 53MB	complete gated feature checking 1
time: 0.023; rss: 53MB	configuration 2
time: 0.000; rss: 53MB	gated configuration checking
time: 0.012; rss: 53MB	maybe building test harness
time: 0.010; rss: 53MB	prelude injection
time: 0.001; rss: 53MB	checking that all macro invocations are gone
time: 0.000; rss: 53MB	checking for inline asm in case the target doesn't support it
time: 0.003; rss: 53MB	complete gated feature checking 2
time: 0.011; rss: 53MB	assigning node ids
time: 0.013; rss: 65MB	lowering ast -> hir
time: 0.007; rss: 69MB	indexing hir
time: 0.000; rss: 69MB	attribute checking
time: 0.008; rss: 69MB	early lint checks
time: 0.004; rss: 69MB	external crate/lib resolution
time: 0.002; rss: 69MB	language item collection
time: 0.040; rss: 91MB	resolution
time: 0.002; rss: 91MB	lifetime resolution
time: 0.000; rss: 91MB	looking for entry point
time: 0.001; rss: 91MB	looking for plugin registrar
time: 0.010; rss: 97MB	region resolution
time: 0.001; rss: 97MB	loop checking
time: 0.001; rss: 97MB	static item recursion checking
time: 0.012; rss: 97MB	type collecting
time: 0.003; rss: 97MB	variance inference
time: 0.039; rss: 114MB	coherence checking
time: 0.025; rss: 116MB	wf checking (old)
time: 0.049; rss: 116MB	item-types checking
time: 1.592; rss: 152MB	item-bodies checking
time: 0.000; rss: 152MB	drop-impl checking
time: 0.135; rss: 152MB	wf checking (new)
time: 0.079; rss: 152MB	const checking
time: 0.013; rss: 152MB	privacy checking
time: 0.000; rss: 152MB	stability index
time: 0.010; rss: 152MB	intrinsic checking
time: 0.003; rss: 152MB	effect checking
time: 0.024; rss: 152MB	match checking
time: 0.098; rss: 180MB	MIR dump
time: 0.012; rss: 162MB	liveness checking
time: 0.157; rss: 161MB	borrow checking
time: 0.095; rss: 161MB	rvalue checking
time: 0.004; rss: 161MB	reachability checking
time: 0.011; rss: 161MB	death checking
time: 0.008; rss: 161MB	stability checking
time: 0.000; rss: 161MB	unused lib feature checking
time: 0.074; rss: 161MB	lint checking
time: 0.000; rss: 161MB	resolving dependency formats
time: 2.826; rss: 282MB	translation
  time: 0.097; rss: 167MB	llvm function passes [0]
  time: 0.044; rss: 168MB	llvm module passes [0]
  time: 1.739; rss: 216MB	codegen passes [0]
  time: 0.001; rss: 184MB	codegen passes [0]
time: 2.095; rss: 184MB	LLVM passes
time: 0.154; rss: 185MB	linking
done
