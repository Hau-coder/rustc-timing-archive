commit 9c2489be0c27954a0afeb053e3997bb82cfb3d95
Merge: 6307719 4168e02
Author: bors <bors@rust-lang.org>
Date:   Sun Nov 1 23:22:22 2015 +0000

    Auto merge of #29507 - fhartwig:result-expect, r=Manishearth
    
    This fixes part of #29506
    These instances of `ok().expect()` have no benefit over using `Result`'s `expect` directly.
rustc: ./rust-encoding.0.2.32
cargo rustc -- -Ztime-passes
    Updating registry `https://github.com/rust-lang/crates.io-index`
   Compiling encoding_index_tests v0.1.4 (file:///root/benchmarks/rust-encoding.0.2.32)
   Compiling encoding-index-singlebyte v1.20141219.5 (file:///root/benchmarks/rust-encoding.0.2.32)
   Compiling encoding-index-korean v1.20141219.5 (file:///root/benchmarks/rust-encoding.0.2.32)
   Compiling encoding-index-japanese v1.20141219.5 (file:///root/benchmarks/rust-encoding.0.2.32)
   Compiling encoding-index-tradchinese v1.20141219.5 (file:///root/benchmarks/rust-encoding.0.2.32)
   Compiling encoding-index-simpchinese v1.20141219.5 (file:///root/benchmarks/rust-encoding.0.2.32)
   Compiling encoding v0.2.32 (file:///root/benchmarks/rust-encoding.0.2.32)
time: 0.030; rss: 32MB	parsing
time: 0.006; rss: 32MB	configuration 1
time: 0.000; rss: 32MB	recursion limit
time: 0.000; rss: 32MB	gated macro checking
time: 0.000; rss: 32MB	crate injection
time: 0.003; rss: 35MB	macro loading
time: 0.000; rss: 35MB	plugin loading
time: 0.000; rss: 35MB	plugin registration
time: 0.041; rss: 37MB	expansion
time: 0.001; rss: 37MB	complete gated feature checking 1
time: 0.007; rss: 36MB	configuration 2
time: 0.000; rss: 36MB	gated configuration checking
time: 0.003; rss: 36MB	maybe building test harness
time: 0.003; rss: 36MB	prelude injection
time: 0.000; rss: 36MB	checking that all macro invocations are gone
time: 0.000; rss: 36MB	checking for inline asm in case the target doesn't support it
time: 0.000; rss: 36MB	complete gated feature checking 2
time: 0.003; rss: 36MB	assigning node ids
time: 0.005; rss: 39MB	lowering ast -> hir
time: 0.002; rss: 40MB	indexing hir
time: 0.000; rss: 40MB	attribute checking
time: 0.002; rss: 40MB	early lint checks
time: 0.001; rss: 40MB	external crate/lib resolution
time: 0.001; rss: 40MB	language item collection
time: 0.011; rss: 50MB	resolution
time: 0.000; rss: 50MB	lifetime resolution
time: 0.000; rss: 50MB	looking for entry point
time: 0.000; rss: 50MB	looking for plugin registrar
time: 0.003; rss: 51MB	region resolution
time: 0.000; rss: 51MB	loop checking
time: 0.000; rss: 51MB	static item recursion checking
time: 0.005; rss: 51MB	type collecting
time: 0.000; rss: 51MB	variance inference
time: 0.027; rss: 69MB	coherence checking
time: 0.006; rss: 70MB	wf checking (old)
time: 0.013; rss: 71MB	item-types checking
time: 0.218; rss: 83MB	item-bodies checking
time: 0.000; rss: 83MB	drop-impl checking
time: 0.017; rss: 83MB	wf checking (new)
time: 0.013; rss: 83MB	const checking
time: 0.002; rss: 83MB	privacy checking
time: 0.000; rss: 83MB	stability index
time: 0.001; rss: 83MB	intrinsic checking
time: 0.000; rss: 83MB	effect checking
time: 0.006; rss: 83MB	match checking
time: 0.079; rss: 95MB	MIR dump
time: 0.003; rss: 87MB	liveness checking
time: 0.024; rss: 87MB	borrow checking
time: 0.008; rss: 87MB	rvalue checking
time: 0.000; rss: 87MB	reachability checking
time: 0.002; rss: 87MB	death checking
time: 0.001; rss: 87MB	stability checking
time: 0.000; rss: 87MB	unused lib feature checking
time: 0.016; rss: 87MB	lint checking
time: 0.000; rss: 87MB	resolving dependency formats
time: 0.361; rss: 137MB	translation
  time: 0.027; rss: 98MB	llvm function passes [0]
  time: 0.063; rss: 100MB	llvm module passes [0]
  time: 0.570; rss: 121MB	codegen passes [0]
  time: 0.000; rss: 119MB	codegen passes [0]
time: 0.732; rss: 119MB	LLVM passes
time: 0.055; rss: 118MB	linking
done
