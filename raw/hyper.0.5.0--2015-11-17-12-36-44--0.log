commit b31cc644d188126de6728b08b1cde707c1dc9400
Merge: 8809a33 d09220d
Author: bors <bors@rust-lang.org>
Date:   Tue Nov 17 18:24:19 2015 +0000

    Auto merge of #29766 - oli-obk:impl_item, r=nikomatsakis
    
    [breaking change]
    
    I'm not sure if those renames are ok. [TokenType::Tt* to TokenType::*](https://github.com/rust-lang/rust/pull/29582) was obvious, but for all those Item-enums it's less obvious to me what the right way forward is due to the underscore.
rustc: ./hyper.0.5.0
cargo rustc -- -Ztime-passes
    Updating registry `https://github.com/rust-lang/crates.io-index`
   Compiling bitflags v0.3.3
   Compiling winapi v0.2.5
   Compiling typeable v0.1.2
   Compiling libc v0.2.2
   Compiling gcc v0.3.19
   Compiling winapi-build v0.1.1
   Compiling pkg-config v0.3.6
   Compiling matches v0.1.2
   Compiling unicase v0.1.0
   Compiling rustc-serialize v0.3.16
   Compiling libc v0.1.12
   Compiling httparse v0.1.6
   Compiling kernel32-sys v0.2.1
   Compiling log v0.3.3
   Compiling num_cpus v0.2.7
   Compiling traitobject v0.0.1
   Compiling lazy_static v0.1.15
   Compiling time v0.1.34
   Compiling mime v0.0.11
   Compiling openssl-sys v0.6.7
   Compiling openssl v0.6.7
   Compiling url v0.2.37
   Compiling cookie v0.1.21
   Compiling hyper v0.5.0 (file:///root/benchmarks/hyper.0.5.0)
time: 0.028; rss: 41MB	parsing
time: 0.009; rss: 41MB	configuration 1
time: 0.000; rss: 41MB	recursion limit
time: 0.000; rss: 41MB	gated macro checking
time: 0.000; rss: 41MB	crate injection
time: 0.004; rss: 46MB	macro loading
time: 0.000; rss: 46MB	plugin loading
time: 0.000; rss: 46MB	plugin registration
time: 0.180; rss: 56MB	expansion
time: 0.005; rss: 56MB	complete gated feature checking 1
time: 0.030; rss: 56MB	configuration 2
time: 0.000; rss: 56MB	gated configuration checking
time: 0.013; rss: 56MB	maybe building test harness
time: 0.010; rss: 56MB	prelude injection
time: 0.001; rss: 56MB	checking that all macro invocations are gone
time: 0.000; rss: 56MB	checking for inline asm in case the target doesn't support it
time: 0.002; rss: 56MB	complete gated feature checking 2
time: 0.010; rss: 56MB	assigning node ids
time: 0.007; rss: 61MB	lowering ast -> hir
time: 0.005; rss: 63MB	indexing hir
time: 0.000; rss: 63MB	attribute checking
time: 0.005; rss: 63MB	early lint checks
time: 0.003; rss: 63MB	external crate/lib resolution
time: 0.002; rss: 63MB	language item collection
time: 0.031; rss: 88MB	resolution
time: 0.002; rss: 88MB	lifetime resolution
time: 0.000; rss: 88MB	looking for entry point
time: 0.001; rss: 88MB	looking for plugin registrar
time: 0.005; rss: 88MB	region resolution
time: 0.001; rss: 88MB	loop checking
time: 0.001; rss: 88MB	static item recursion checking
time: 0.013; rss: 92MB	type collecting
time: 0.002; rss: 92MB	variance inference
time: 0.044; rss: 113MB	coherence checking
time: 0.028; rss: 113MB	wf checking (old)
time: 0.026; rss: 115MB	item-types checking
time: 0.540; rss: 132MB	item-bodies checking
time: 0.000; rss: 132MB	drop-impl checking
time: 0.089; rss: 132MB	wf checking (new)
time: 0.043; rss: 132MB	const checking
time: 0.009; rss: 132MB	privacy checking
time: 0.000; rss: 132MB	stability index
time: 0.004; rss: 132MB	intrinsic checking
time: 0.002; rss: 132MB	effect checking
time: 0.012; rss: 132MB	match checking
time: 0.053; rss: 145MB	MIR dump
time: 0.006; rss: 145MB	liveness checking
time: 0.072; rss: 145MB	borrow checking
time: 0.035; rss: 147MB	rvalue checking
time: 0.004; rss: 147MB	reachability checking
time: 0.007; rss: 147MB	death checking
time: 0.005; rss: 147MB	stability checking
time: 0.000; rss: 147MB	unused lib feature checking
time: 0.042; rss: 147MB	lint checking
time: 0.000; rss: 147MB	resolving dependency formats
time: 1.438; rss: 283MB	translation
  time: 0.100; rss: 176MB	llvm function passes [0]
  time: 0.053; rss: 176MB	llvm module passes [0]
  time: 1.691; rss: 221MB	codegen passes [0]
  time: 0.001; rss: 182MB	codegen passes [0]
time: 2.072; rss: 182MB	LLVM passes
time: 0.182; rss: 183MB	linking
done
