commit b3afb16d246c6aa080cf52a85003e19da79b828e
Merge: 791cc16 2c17bfc
Author: bors <bors@rust-lang.org>
Date:   Sat Sep 19 08:26:55 2015 +0000

    Auto merge of #28491 - dotdash:noadjust, r=nikomatsakis
    
    That allows us to keep using trans_into() in case of adjustments that
    may actually be ignored in trans because they are a plain deref/ref pair
    with no overloaded deref or unsizing.
    
    Unoptimized(!) benchmarks from servo/servo#7638
    
    Before
    ```
    test goser::bench_clone                          ... bench:      17,701 ns/iter (+/- 58) = 30 MB/s
    test goser::bincode::bench_decoder               ... bench:      33,715 ns/iter (+/- 300) = 11 MB/s
    test goser::bincode::bench_deserialize           ... bench:      36,804 ns/iter (+/- 329) = 9 MB/s
    test goser::bincode::bench_encoder               ... bench:      34,695 ns/iter (+/- 149) = 11 MB/s
    test goser::bincode::bench_populate              ... bench:      18,879 ns/iter (+/- 88)
    test goser::bincode::bench_serialize             ... bench:      31,668 ns/iter (+/- 156) = 11 MB/s
    test goser::capnp::bench_deserialize             ... bench:       2,049 ns/iter (+/- 87) = 218 MB/s
    test goser::capnp::bench_deserialize_packed      ... bench:      10,707 ns/iter (+/- 258) = 31 MB/s
    test goser::capnp::bench_populate                ... bench:         635 ns/iter (+/- 5)
    test goser::capnp::bench_serialize               ... bench:      35,657 ns/iter (+/- 155) = 12 MB/s
    test goser::capnp::bench_serialize_packed        ... bench:      37,881 ns/iter (+/- 146) = 8 MB/s
    test goser::msgpack::bench_decoder               ... bench:      50,634 ns/iter (+/- 307) = 5 MB/s
    test goser::msgpack::bench_encoder               ... bench:      25,738 ns/iter (+/- 90) = 11 MB/s
    test goser::msgpack::bench_populate              ... bench:      18,900 ns/iter (+/- 138)
    test goser::protobuf::bench_decoder              ... bench:       2,791 ns/iter (+/- 29) = 102 MB/s
    test goser::protobuf::bench_encoder              ... bench:      75,414 ns/iter (+/- 358) = 3 MB/s
    test goser::protobuf::bench_populate             ... bench:      19,248 ns/iter (+/- 92)
    test goser::rustc_serialize_json::bench_decoder  ... bench:     109,999 ns/iter (+/- 797) = 5 MB/s
    test goser::rustc_serialize_json::bench_encoder  ... bench:      58,777 ns/iter (+/- 418) = 10 MB/s
    test goser::rustc_serialize_json::bench_populate ... bench:      18,887 ns/iter (+/- 76)
    test goser::serde_json::bench_deserializer       ... bench:     104,803 ns/iter (+/- 770) = 5 MB/s
    test goser::serde_json::bench_populate           ... bench:      18,890 ns/iter (+/- 69)
    test goser::serde_json::bench_serializer         ... bench:      75,046 ns/iter (+/- 435) = 8 MB/s
    ```
    
    After
    ```
    test goser::bench_clone                          ... bench:      16,052 ns/iter (+/- 188) = 34 MB/s
    test goser::bincode::bench_decoder               ... bench:      31,194 ns/iter (+/- 941) = 12 MB/s
    test goser::bincode::bench_deserialize           ... bench:      33,934 ns/iter (+/- 352) = 10 MB/s
    test goser::bincode::bench_encoder               ... bench:      30,737 ns/iter (+/- 1,969) = 13 MB/s
    test goser::bincode::bench_populate              ... bench:      17,234 ns/iter (+/- 176)
    test goser::bincode::bench_serialize             ... bench:      28,269 ns/iter (+/- 452) = 12 MB/s
    test goser::capnp::bench_deserialize             ... bench:       2,019 ns/iter (+/- 85) = 221 MB/s
    test goser::capnp::bench_deserialize_packed      ... bench:      10,662 ns/iter (+/- 527) = 31 MB/s
    test goser::capnp::bench_populate                ... bench:         607 ns/iter (+/- 2)
    test goser::capnp::bench_serialize               ... bench:      30,488 ns/iter (+/- 219) = 14 MB/s
    test goser::capnp::bench_serialize_packed        ... bench:      33,731 ns/iter (+/- 201) = 9 MB/s
    test goser::msgpack::bench_decoder               ... bench:      46,921 ns/iter (+/- 461) = 6 MB/s
    test goser::msgpack::bench_encoder               ... bench:      22,315 ns/iter (+/- 96) = 12 MB/s
    test goser::msgpack::bench_populate              ... bench:      17,268 ns/iter (+/- 73)
    test goser::protobuf::bench_decoder              ... bench:       2,658 ns/iter (+/- 44) = 107 MB/s
    test goser::protobuf::bench_encoder              ... bench:      71,024 ns/iter (+/- 359) = 4 MB/s
    test goser::protobuf::bench_populate             ... bench:      17,704 ns/iter (+/- 104)
    test goser::rustc_serialize_json::bench_decoder  ... bench:     107,867 ns/iter (+/- 759) = 5 MB/s
    test goser::rustc_serialize_json::bench_encoder  ... bench:      52,327 ns/iter (+/- 479) = 11 MB/s
    test goser::rustc_serialize_json::bench_populate ... bench:      17,262 ns/iter (+/- 68)
    test goser::serde_json::bench_deserializer       ... bench:      99,156 ns/iter (+/- 657) = 6 MB/s
    test goser::serde_json::bench_populate           ... bench:      17,264 ns/iter (+/- 77)
    test goser::serde_json::bench_serializer         ... bench:      66,135 ns/iter (+/- 392) = 9 MB/s
    
    ```
rustc: ./helloworld
/root/rust/x86_64-unknown-linux-gnu/stage2/bin/rustc -Ztime-passes hello.rs
time: 0.000; rss: 29MB	parsing
time: 0.000; rss: 29MB	configuration 1
time: 0.000; rss: 29MB	recursion limit
time: 0.000; rss: 29MB	gated macro checking
time: 0.000; rss: 34MB	crate injection
time: 0.002; rss: 35MB	macro loading
time: 0.000; rss: 35MB	plugin loading
time: 0.000; rss: 35MB	plugin registration
time: 0.001; rss: 35MB	expansion
time: 0.000; rss: 35MB	complete gated feature checking 1
time: 0.000; rss: 35MB	configuration 2
time: 0.000; rss: 35MB	gated configuration checking
time: 0.000; rss: 35MB	maybe building test harness
time: 0.000; rss: 35MB	prelude injection
time: 0.000; rss: 35MB	checking that all macro invocations are gone
time: 0.000; rss: 35MB	checking for inline asm in case the target doesn't support it
time: 0.000; rss: 35MB	complete gated feature checking 2
time: 0.000; rss: 35MB	assigning node ids
time: 0.000; rss: 35MB	lowering ast -> hir
time: 0.000; rss: 35MB	indexing hir
time: 0.000; rss: 35MB	early lint checks
time: 0.001; rss: 35MB	external crate/lib resolution
time: 0.000; rss: 35MB	language item collection
time: 0.001; rss: 44MB	resolution
time: 0.000; rss: 44MB	lifetime resolution
time: 0.000; rss: 44MB	looking for entry point
time: 0.000; rss: 44MB	looking for plugin registrar
time: 0.000; rss: 44MB	region resolution
time: 0.000; rss: 44MB	loop checking
time: 0.000; rss: 44MB	static item recursion checking
time: 0.000; rss: 44MB	type collecting
time: 0.000; rss: 44MB	variance inference
time: 0.004; rss: 52MB	coherence checking
time: 0.000; rss: 52MB	wf checking (old)
time: 0.000; rss: 52MB	item-types checking
time: 0.000; rss: 52MB	item-bodies checking
time: 0.000; rss: 52MB	drop-impl checking
time: 0.000; rss: 52MB	wf checking (new)
time: 0.000; rss: 52MB	MIR dump
time: 0.000; rss: 52MB	const checking
time: 0.000; rss: 52MB	privacy checking
time: 0.000; rss: 52MB	stability index
time: 0.000; rss: 52MB	intrinsic checking
time: 0.000; rss: 52MB	effect checking
time: 0.000; rss: 52MB	match checking
time: 0.000; rss: 52MB	liveness checking
time: 0.000; rss: 52MB	borrow checking
time: 0.000; rss: 52MB	rvalue checking
time: 0.000; rss: 52MB	reachability checking
time: 0.000; rss: 52MB	death checking
time: 0.000; rss: 52MB	stability checking
time: 0.000; rss: 52MB	unused lib feature checking
time: 0.000; rss: 52MB	lint checking
time: 0.001; rss: 52MB	resolving dependency formats
time: 0.004; rss: 63MB	translation
  time: 0.000; rss: 65MB	llvm function passes
  time: 0.000; rss: 65MB	llvm module passes
  time: 0.001; rss: 67MB	codegen passes
  time: 0.000; rss: 67MB	codegen passes
time: 0.002; rss: 67MB	LLVM passes
  time: 0.085; rss: 71MB	running linker
time: 0.085; rss: 73MB	linking
done
