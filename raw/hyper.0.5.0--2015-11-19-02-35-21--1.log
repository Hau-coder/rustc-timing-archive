commit 3e48b0e380319dc586a329baac640b9457feb87a
Merge: 9303055 51c35db
Author: bors <bors@rust-lang.org>
Date:   Thu Nov 19 02:51:15 2015 +0000

    Auto merge of #29917 - shssoichiro:doc-sidebar-order, r=alexcrichton
    
    A race condition in Javascript was causing unpredictable ordering
    of the sidebar boxes when loading documentation generated by
    rustdoc, due to the script that adds the Crates box being executed
    asynchronously. Disabling the asynchronous execution and deferring
    this script should ensure that the Crates box always appears last
    in the sidebox (this seemed to be the more common ordering prior
    to this change).
    
    Fixes #29698
rustc: ./hyper.0.5.0
cargo rustc -- -Ztime-passes
   Compiling hyper v0.5.0 (file:///root/benchmarks/hyper.0.5.0)
time: 0.028; rss: 38MB	parsing
time: 0.009; rss: 42MB	configuration 1
time: 0.000; rss: 42MB	recursion limit
time: 0.000; rss: 42MB	gated macro checking
time: 0.000; rss: 42MB	crate injection
time: 0.004; rss: 47MB	macro loading
time: 0.000; rss: 47MB	plugin loading
time: 0.000; rss: 47MB	plugin registration
time: 0.176; rss: 56MB	expansion
time: 0.005; rss: 56MB	complete gated feature checking 1
time: 0.030; rss: 56MB	configuration 2
time: 0.000; rss: 56MB	gated configuration checking
time: 0.013; rss: 56MB	maybe building test harness
time: 0.010; rss: 56MB	prelude injection
time: 0.001; rss: 56MB	checking that all macro invocations are gone
time: 0.000; rss: 56MB	checking for inline asm in case the target doesn't support it
time: 0.002; rss: 56MB	complete gated feature checking 2
time: 0.010; rss: 56MB	assigning node ids
time: 0.008; rss: 60MB	lowering ast -> hir
time: 0.005; rss: 62MB	indexing hir
time: 0.000; rss: 62MB	attribute checking
time: 0.005; rss: 62MB	early lint checks
time: 0.003; rss: 65MB	external crate/lib resolution
time: 0.001; rss: 65MB	language item collection
time: 0.030; rss: 89MB	resolution
time: 0.002; rss: 89MB	lifetime resolution
time: 0.000; rss: 89MB	looking for entry point
time: 0.000; rss: 89MB	looking for plugin registrar
time: 0.006; rss: 89MB	region resolution
time: 0.001; rss: 89MB	loop checking
time: 0.001; rss: 89MB	static item recursion checking
time: 0.013; rss: 96MB	type collecting
time: 0.000; rss: 96MB	variance inference
time: 0.039; rss: 110MB	coherence checking
time: 0.027; rss: 113MB	wf checking (old)
time: 0.025; rss: 117MB	item-types checking
time: 0.526; rss: 133MB	item-bodies checking
time: 0.000; rss: 133MB	drop-impl checking
time: 0.088; rss: 133MB	wf checking (new)
time: 0.042; rss: 133MB	const checking
time: 0.009; rss: 133MB	privacy checking
time: 0.001; rss: 133MB	stability index
time: 0.004; rss: 133MB	intrinsic checking
time: 0.002; rss: 133MB	effect checking
time: 0.013; rss: 133MB	match checking
time: 0.054; rss: 146MB	MIR dump
time: 0.006; rss: 148MB	liveness checking
time: 0.068; rss: 148MB	borrow checking
time: 0.034; rss: 148MB	rvalue checking
time: 0.003; rss: 148MB	reachability checking
time: 0.006; rss: 148MB	death checking
time: 0.005; rss: 148MB	stability checking
time: 0.000; rss: 148MB	unused lib feature checking
time: 0.042; rss: 148MB	lint checking
time: 0.000; rss: 148MB	resolving dependency formats
time: 0.007; rss: 150MB	erasing regions from MIR
time: 1.408; rss: 287MB	translation
  time: 0.098; rss: 177MB	llvm function passes [0]
  time: 0.052; rss: 177MB	llvm module passes [0]
  time: 1.685; rss: 222MB	codegen passes [0]
  time: 0.001; rss: 180MB	codegen passes [0]
time: 2.067; rss: 180MB	LLVM passes
time: 0.178; rss: 180MB	linking
done
