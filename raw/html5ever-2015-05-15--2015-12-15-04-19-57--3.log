commit 9e63cecb10a3a22abed9c230c5daf268dc258bf3
Merge: 8f031bf 915cb37
Author: bors <bors@rust-lang.org>
Date:   Tue Dec 15 04:21:53 2015 +0000

    Auto merge of #30233 - retep998:where-in-the-world-is-windows-sdk, r=alexcrichton
    
    What I've done here is try to make the code match what vcvars does much more closely. It now chooses which SDK to find based on the version of MSVC that it found. It also bases the decision of whether to find all the things on whether `VCINSTALLDIR` has been set, which is more likely to have only been set by an invocation of vcvars, unlike previously where it would do some things only if `LIB` wasn't set even though there was a valid use case for libraries to add themselves to `LIB` without having invoked vcvars.
    
    There are still some debug `println!`s so people can test the PR and make sure it works correctly on various setups.
    
    It supports VS 2015, 2013, and 2012. People who want to use versions of VS older (or newer) than that will have to manually invoke the appropriate vcvars bat file to set the proper environment variables themselves.
    
    Do not merge yet.
    
    Fixes https://github.com/rust-lang/rust/issues/30229
rustc: ./html5ever-2015-05-15
cargo rustc -- -Ztime-passes
   Compiling html5ever v0.0.0 (file:///root/benchmarks/html5ever-2015-05-15)
time: 0.019; rss: 40MB	parsing
time: 0.006; rss: 40MB	configuration 1
time: 0.000; rss: 40MB	recursion limit
time: 0.000; rss: 40MB	gated macro checking
time: 0.000; rss: 40MB	crate injection
time: 0.021; rss: 55MB	macro loading
time: 0.001; rss: 56MB	plugin loading
time: 0.000; rss: 56MB	plugin registration
time: 2.339; rss: 76MB	expansion
time: 0.004; rss: 76MB	complete gated feature checking 1
time: 0.034; rss: 76MB	configuration 2
time: 0.000; rss: 76MB	gated configuration checking
time: 0.017; rss: 75MB	maybe building test harness
time: 0.015; rss: 75MB	prelude injection
time: 0.002; rss: 75MB	checking that all macro invocations are gone
time: 0.000; rss: 75MB	checking for inline asm in case the target doesn't support it
time: 0.003; rss: 75MB	complete gated feature checking 2
time: 0.016; rss: 75MB	assigning node ids
time: 0.022; rss: 88MB	lowering ast -> hir
time: 0.006; rss: 93MB	indexing hir
time: 0.000; rss: 93MB	attribute checking
time: 0.010; rss: 93MB	early lint checks
time: 0.002; rss: 93MB	external crate/lib resolution
time: 0.002; rss: 93MB	language item collection
time: 0.023; rss: 109MB	resolution
time: 0.002; rss: 109MB	lifetime resolution
time: 0.000; rss: 109MB	looking for entry point
time: 0.000; rss: 109MB	looking for plugin registrar
time: 0.016; rss: 115MB	region resolution
time: 0.002; rss: 115MB	loop checking
time: 0.002; rss: 115MB	static item recursion checking
time: 0.007; rss: 118MB	type collecting
time: 0.000; rss: 118MB	variance inference
time: 0.032; rss: 139MB	coherence checking
time: 0.008; rss: 139MB	wf checking (old)
time: 0.322; rss: 173MB	item-types checking
time: 0.597; rss: 183MB	item-bodies checking
time: 0.000; rss: 183MB	drop-impl checking
time: 0.029; rss: 183MB	wf checking (new)
time: 0.079; rss: 183MB	const checking
time: 0.013; rss: 183MB	privacy checking
time: 0.001; rss: 183MB	stability index
time: 0.004; rss: 183MB	intrinsic checking
time: 0.003; rss: 183MB	effect checking
time: 0.027; rss: 183MB	match checking
time: 0.062; rss: 185MB	MIR dump
time: 0.012; rss: 191MB	liveness checking
time: 0.098; rss: 193MB	borrow checking
time: 0.035; rss: 193MB	rvalue checking
time: 0.003; rss: 193MB	reachability checking
time: 0.008; rss: 193MB	death checking
time: 0.008; rss: 193MB	stability checking
time: 0.000; rss: 193MB	unused lib feature checking
time: 0.068; rss: 193MB	lint checking
time: 0.000; rss: 193MB	resolving dependency formats
time: 0.006; rss: 193MB	erasing regions from MIR
time: 0.543; rss: 244MB	translation
  time: 0.018; rss: 130MB	llvm function passes [0]
  time: 0.007; rss: 131MB	llvm module passes [0]
  time: 0.334; rss: 167MB	codegen passes [0]
  time: 0.002; rss: 142MB	codegen passes [0]
time: 0.415; rss: 141MB	LLVM passes
time: 0.061; rss: 141MB	linking
done
